model{
### PRIORS 
## occupancy intercept estimate of community (community mean)
beta0.mean ~ dnorm(0, 0.05)
beta0.tau ~ dgamma(0.1, 0.1)
beta0.sigma <- sqrt(1 / beta0.tau)

## detection intercept estimate of community (community mean)
alpha0.mean ~ dnorm(0, 0.05)
alpha0.tau ~ dgamma(0.1, 0.1)
alpha0.sigma <- sqrt(1 / alpha0.tau)

## Data augmentation parameter
# < empty > 

## Continuous site covariates on detection - Fixed effects
# < empty > 

## Continuous site covariates on detection - Independent effects
# < empty > 

## Continuous site covariates on detection - with random effects
# < empty > 

## Categorical site covariates on detection - Fixed effect
# < empty > 

## Categorical site covariates on detection - with random effects
# < empty > 

## Continuous observation-level covariates on detection - Fixed effects
# Covariate: effort
alpha.obs.fixed.cont.effort ~ dnorm(0, 0.05)

## Continuous observation-level covariates on detection - with random effects
# < empty > 

## Categorical observation-level covariates on detection - Fixed effect
# < empty > 

## Categorical observation-level covariates on detection - with random effects
# < empty > 

## Continuous site covariates on Occupancy - Fixed effects
# < empty > 

## Continuous site covariates on Occupancy - Independent effects
# < empty > 

## Continuous site covariates on occupancy - with random effects
# Covariate: border_dist|Species

beta.ranef.cont.border_dist.mean ~ dnorm(0, 0.05)
beta.ranef.cont.border_dist.tau ~ dgamma(0.1, 0.1)
beta.ranef.cont.border_dist.sigma <- sqrt(1 / beta.ranef.cont.border_dist.tau)


# Covariate: elev|Species

beta.ranef.cont.elev.mean ~ dnorm(0, 0.05)
beta.ranef.cont.elev.tau ~ dgamma(0.1, 0.1)
beta.ranef.cont.elev.sigma <- sqrt(1 / beta.ranef.cont.elev.tau)


## Categorical site covariates on Occupancy - Fixed effects
# < empty > 

## Categorical site covariates on occupancy - with random effects
# Community mean effects of in_AP
beta.ranef.categ.in_AP.mean[1] <- 0
beta.ranef.categ.in_AP.tau[1] <- 0
beta.ranef.categ.in_AP.sigma[1] <- 0

for(index_cat_ranef_occu_in_AP in 2:2) {
beta.ranef.categ.in_AP.mean[index_cat_ranef_occu_in_AP] ~ dnorm(0, 0.05)
beta.ranef.categ.in_AP.tau[index_cat_ranef_occu_in_AP] ~ dgamma(0.1, 0.1)
beta.ranef.categ.in_AP.sigma[index_cat_ranef_occu_in_AP] <- sqrt(1 / beta.ranef.categ.in_AP.tau[index_cat_ranef_occu_in_AP])
}
# Species-station random effect on detection probability
# < empty > 

## Draws of random effects other than species


### MODEL LOOPS 

# species loop
for (i in 1:M){
##  Draw species-specific random effect parameters from community distributions
# intercepts:
beta0[i] ~ dnorm(beta0.mean, beta0.tau)
alpha0[i] ~ dnorm(alpha0.mean, alpha0.tau)





# categorical detection covariates: no random effect of species


# continuous observation-level detection covariates: no random effect of species


# categorical observation covariates: no random effect of species


# continuous occupancy covariate with random effects: border_dist|Species
beta.ranef.cont.border_dist[i] ~ dnorm(beta.ranef.cont.border_dist.mean, beta.ranef.cont.border_dist.tau)
# continuous occupancy covariate with random effects: elev|Species
beta.ranef.cont.elev[i] ~ dnorm(beta.ranef.cont.elev.mean, beta.ranef.cont.elev.tau)


# categorical occupancy covariates with random effects:
beta.ranef.categ.in_AP[i, 1] <- 0
for (index_cat_ranef_occu_in_AP in 2:2){
beta.ranef.categ.in_AP[i, index_cat_ranef_occu_in_AP] ~ dnorm(beta.ranef.categ.in_AP.mean[index_cat_ranef_occu_in_AP], beta.ranef.categ.in_AP.tau[index_cat_ranef_occu_in_AP])
}

# station loop
for (j in 1:J){

# Occupancy probability formula

logit.psi[i,j] <- beta0[i] + beta.ranef.categ.in_AP[i, in_AP[j]] + beta.ranef.cont.border_dist[i] * border_dist[j] + beta.ranef.cont.elev[i] * elev[j]
psi[i,j] <- exp(logit.psi[i,j]) / (exp(logit.psi[i,j]) + 1)
z[i,j] ~ dbern(psi[i, j])

# No random effect of species and station on detection probability
# occasion loop
for (k in 1:maxocc){
# Detection probability formula
logit.p[i,j,k] <- alpha0[i] + alpha.obs.fixed.cont.effort * effort[j, k]

# convert p to real scale
p[i,j,k] <- exp(logit.p[i,j,k]) / (1+exp(logit.p[i,j,k]))

# Ensure occasions without effort have p = 0


p.eff[i,j,k] <- z[i,j] * p[i,j,k] * effort_binary[j,k]
y[i,j,k] ~ dbern(p.eff[i,j,k])
}   # close occasion loop

}   # close station loop

# Goodness-of-fit test was temporarily removed from models.


### Number of occupied stations for each species
NStationsOccupied[i] <- sum(z[i, 1:J])

### species is part of community?
speciesInCommunity[i] <- 1 - equals(NStationsOccupied[i],0)

### Fraction of stations occupied
fractionStationsOccupied[i] <- NStationsOccupied[i] /J

### Does species occur at all (at any station)
occ[i] <- 1 - equals(fractionStationsOccupied[i], 0)
}    # close species loop

### total number of species
Nspecies <- sum(speciesInCommunity[1:M])

### Species richness at every location
for (j in 1:J){
Nspecies_station[j] <- sum(z[1:M,j])
}

}
