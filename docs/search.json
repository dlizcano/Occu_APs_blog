[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Occupancy in Protected Areas",
    "section": "",
    "text": "The problem\n\n\nUsing the WCS camera trap dataset\n\n\n\nmodel\n\n\n\n\n\n\n\n\n\nMay 20, 2025\n\n\nGerman Forero, Diego J. Lizcano\n\n\n\n\n\n\n\n\n\n\n\n\nFitting a Multi-Species non Spatial Occupancy Model\n\n\nUsing Llanganates subset of the WCS camera trap dataset\n\n\n\nmodel\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nMay 17, 2025\n\n\nGerman Forero, Galo Zapara-Rios, Diego J. Lizcano\n\n\n\n\n\n\n\n\n\n\n\n\nFitting a Multi-Species non Spatial Occupancy Model\n\n\nUsing Yasuni subset of the WCS camera trap dataset\n\n\n\nmodel\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nMay 16, 2025\n\n\nGerman Forero, Galo Zapara-Rios, Diego J. Lizcano\n\n\n\n\n\n\n\n\n\n\n\n\nFitting a Multi-Species non Spatial Occupancy Model\n\n\nUsing Yasuni subset of the WCS camera trap dataset\n\n\n\nmodel\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nMay 16, 2025\n\n\nGerman Forero, Galo Zapara-Rios, Diego J. Lizcano\n\n\n\n\n\n\n\n\n\n\n\n\nFitting a Multi-Species Spatial Occupancy Model\n\n\nUsing Llanganates subset of the WCS camera trap dataset\n\n\n\nmodel\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nMay 15, 2025\n\n\nGerman Forero, Galo Zapara-Rios, Diego J. Lizcano\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2nd_model_1AP/index.html",
    "href": "posts/2nd_model_1AP/index.html",
    "title": "Fitting a Multi-Species non Spatial Occupancy Model",
    "section": "",
    "text": "Multi-species occupancy models are a powerful tool for combining information from multiple species to estimate both individual and community-level responses to environmental variables. These models are typically fit using Bayesian frameworks such as BUGS, JAGS, or Nimble. However, preparing the necessary input from camera trapping data, writing the model code, setting parameters to monitor, and providing initial values can be a daunting and time-consuming task, even for experienced users.\ncamtrapR helps using custom funtions to fit community occupancy models for analysis in JAGS or Nimble with several limitations such as: models with categorical observation-level covariates cannot be compiled in Nimble and must be fit in JAGS instead. Priors can not be customized, and independent effects are only supported in continuous site covariates.\nIn terms of speed, Nimble does not seem to have an advantage over JAGS.\n\nCodelibrary(grateful)\nlibrary(readxl)\nlibrary(DT)\nlibrary(sf)\nlibrary(mapview)\nlibrary(maps)\nlibrary(tmap)\nlibrary(terra)\nlibrary(elevatr)\n#library(spOccupancy)\n\nlibrary(rjags) # Bayesian Graphical Models using MCMC \nlibrary(bayesplot) # Plotting for Bayesian Models # Plotting for Bayesian Models\nlibrary(tictoc) # Functions for Timing R Scripts, as Well as Implementations of \"Stack\" and \"StackList\" Structures \nlibrary(beepr) # Easily Play Notification Sounds on any Platform \nlibrary(snowfall) # Easier Cluster Computing (Based on 'snow')\n\n#library(ggmcmc)\nlibrary(camtrapR)\nlibrary(tidyverse)"
  },
  {
    "objectID": "posts/2nd_model_1AP/index.html#multi-species-occupancy-model-using-camtrapr-package",
    "href": "posts/2nd_model_1AP/index.html#multi-species-occupancy-model-using-camtrapr-package",
    "title": "Fitting a Multi-Species non Spatial Occupancy Model",
    "section": "",
    "text": "Multi-species occupancy models are a powerful tool for combining information from multiple species to estimate both individual and community-level responses to environmental variables. These models are typically fit using Bayesian frameworks such as BUGS, JAGS, or Nimble. However, preparing the necessary input from camera trapping data, writing the model code, setting parameters to monitor, and providing initial values can be a daunting and time-consuming task, even for experienced users.\ncamtrapR helps using custom funtions to fit community occupancy models for analysis in JAGS or Nimble with several limitations such as: models with categorical observation-level covariates cannot be compiled in Nimble and must be fit in JAGS instead. Priors can not be customized, and independent effects are only supported in continuous site covariates.\nIn terms of speed, Nimble does not seem to have an advantage over JAGS.\n\nCodelibrary(grateful)\nlibrary(readxl)\nlibrary(DT)\nlibrary(sf)\nlibrary(mapview)\nlibrary(maps)\nlibrary(tmap)\nlibrary(terra)\nlibrary(elevatr)\n#library(spOccupancy)\n\nlibrary(rjags) # Bayesian Graphical Models using MCMC \nlibrary(bayesplot) # Plotting for Bayesian Models # Plotting for Bayesian Models\nlibrary(tictoc) # Functions for Timing R Scripts, as Well as Implementations of \"Stack\" and \"StackList\" Structures \nlibrary(beepr) # Easily Play Notification Sounds on any Platform \nlibrary(snowfall) # Easier Cluster Computing (Based on 'snow')\n\n#library(ggmcmc)\nlibrary(camtrapR)\nlibrary(tidyverse)"
  },
  {
    "objectID": "posts/2nd_model_1AP/index.html#fitting-a-multi-species-non-spatial-occupancy-model",
    "href": "posts/2nd_model_1AP/index.html#fitting-a-multi-species-non-spatial-occupancy-model",
    "title": "Fitting a Multi-Species non Spatial Occupancy Model",
    "section": "Fitting a Multi-Species non Spatial Occupancy Model",
    "text": "Fitting a Multi-Species non Spatial Occupancy Model\nLlanganates data\nHere we use the tables Ecu-14, Ecu-15 y Ecu-16.\n\nCodesource(\"C:/CodigoR/WCS-CameraTrap/R/organiza_datos_v3.R\")\n\nAP_Llanganates &lt;- read_sf(\"C:/CodigoR/Occu_APs/shp/Llanganates/WDPA_WDOECM_May2025_Public_97512_shp-polygons.shp\")\n\n### Ecu 14, Ecu 15  y Ecu 16\n\n# load data and make array_locID column\nEcu_14 &lt;- loadproject(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-014.xlsx\") |&gt; mutate(array_locID=paste(\"Ecu_14\", locationID, sep=\"_\"))\n\n29 cameras in Cameras. \n 29 cameras in Deployment. \n 29 deployments in Deployment. \n 29 points in Deployment. \n 29 cameras in Images. \n 29 points in Images. \n\n\nJoining with `by = join_by(Camera_Id)`\n\n\n[1] \"dates ok\"\nyear: 2015 \n Jaguar_Design: no \n\nCodeEcu_15 &lt;- loadproject(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-015.xlsx\")|&gt; mutate(array_locID=paste(\"Ecu_15\", locationID, sep=\"_\"))\n\n29 cameras in Cameras. \n 29 cameras in Deployment. \n 30 deployments in Deployment. \n 30 points in Deployment. \n 30 cameras in Images. \n 30 points in Images. \n\n\nJoining with `by = join_by(Camera_Id)`\n\n\nWarning in left_join(cameras, deployment): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 6 of `x` matches multiple rows in `y`.\nℹ Row 6 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nWarning in left_join(data1, image, by): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 470 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\n[1] \"dates ok\"\nyear: 2016 \n Jaguar_Design: no \n\nCodeEcu_16 &lt;- loadproject(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-016.xlsx\")|&gt; mutate(array_locID=paste(\"Ecu_16\", locationID, sep=\"_\"))\n\n28 cameras in Cameras. \n 28 cameras in Deployment. \n 28 deployments in Deployment. \n 28 points in Deployment. \n 28 cameras in Images. \n 28 points in Images. \n\n\nJoining with `by = join_by(Camera_Id)`\n\n\n[1] \"dates ok\"\nyear: 2016 \n Jaguar_Design: no \n\nCode# get sites\nEcu_14_sites &lt;- get.sites(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-014.xlsx\")\n\nJoining with `by = join_by(Camera_Id)`\nJoining with `by = join_by(Point)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType, Deployment_ID, start_date, end_date,\n`Bait Type`, `Feature Type`, `Feature Type methodology`, Camera_Id, `Quiet\nPeriod Setting`, `Restriction on Access`, `Camera Failure Details`, `Project\nId`, Make, Model, `Serial Number`, Year_Purchased)`\n\nCodeEcu_15_sites &lt;- get.sites(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-015.xlsx\")\n\nJoining with `by = join_by(Camera_Id)`\nJoining with `by = join_by(Point)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType, Deployment_ID, start_date, end_date,\n`Bait Type`, `Feature Type`, `Feature Type methodology`, Camera_Id, `Quiet\nPeriod Setting`, `Restriction on Access`, `Camera Failure Details`, `Project\nId`, Make, Model, `Serial Number`, Year_Purchased)`\n\nCodeEcu_16_sites &lt;- get.sites(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-016.xlsx\")\n\nJoining with `by = join_by(Camera_Id)`\nJoining with `by = join_by(Point)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType, Deployment_ID, start_date, end_date,\n`Bait Type`, `Feature Type`, `Feature Type methodology`, Camera_Id, `Quiet\nPeriod Setting`, `Restriction on Access`, `Camera Failure Details`, `Project\nId`, Make, Model, `Serial Number`, Year_Purchased)`\n\nCode# get elevation map\nelevation_14 &lt;- rast(get_elev_raster(Ecu_14_sites, z = 7)) #z =1-14\n\nMosaicing & Projecting\nNote: Elevation units are in meters.\n\nCodebb &lt;-  st_as_sfc(st_bbox(elevation_14)) # make bounding box \n\n\n\n\n# extract covs using points and add to _sites\ncovs_Ecu_14_sites &lt;- cbind(Ecu_14_sites, terra::extract(elevation_14, Ecu_14_sites))\n\ncovs_Ecu_15_sites &lt;- cbind(Ecu_15_sites, terra::extract(elevation_14, Ecu_15_sites))\n\ncovs_Ecu_16_sites &lt;- cbind(Ecu_16_sites, terra::extract(elevation_14, Ecu_16_sites))\n\n# get which are in and out\ncovs_Ecu_14_sites$in_AP = st_intersects(covs_Ecu_14_sites, AP_Llanganates, sparse = FALSE)\n\ncovs_Ecu_15_sites$in_AP = st_intersects(covs_Ecu_15_sites, AP_Llanganates, sparse = FALSE)\n\ncovs_Ecu_16_sites$in_AP = st_intersects(covs_Ecu_16_sites, AP_Llanganates, sparse = FALSE)\n\n\n\n# make a map\nmapview (elevation_14, alpha=0.5) + \n  mapview (AP_Llanganates, color = \"green\", col.regions = \"green\", alpha = 0.5) +\n  mapview (covs_Ecu_14_sites, zcol = \"in_AP\", col.regions =c(\"red\",\"blue\"), burst = TRUE) +\n  mapview (covs_Ecu_15_sites, zcol = \"in_AP\", burst = TRUE, col.regions = c(\"blue\") )+\n  mapview (covs_Ecu_16_sites, zcol = \"in_AP\", burst = TRUE, col.regions =c(\"red\",\"blue\")) \n\n\n\n\n\nCamera trap operation data and detection history\n\nCode# Join 3 tables\nEcu_14_15_16 &lt;- Ecu_14 |&gt; full_join(Ecu_15) |&gt; full_join(Ecu_16)\n\nJoining with `by = join_by(`Project Id`, Camera_Id, Make, Model, `Serial\nNumber`, Year_Purchased, Deployment_ID, Point.x, Longitude, Latitude,\nstart_date, end_date, `Bait Type`, `Bait Description`, `Feature Type`, `Feature\nType methodology`, `Camera Type`, `Quiet Period Setting`, `Restriction on\nAccess`, `Camera Failure Details`, season, rio_playa, arroyo, camino,\nsenda_animal, senda_gente, salitral, pozo_agua, bosque, sabana, intermedio,\nintervalo_trigger, locationID, `Image Id`, `Photo Type`, `Photo Type Identified\nby`, Point.y, scientificName, Date_Time_Captured, `Independent event`, Age,\nSex, `Individual ID`, Count, Jaguar_Design, year, array_locID)`\nJoining with `by = join_by(`Project Id`, Camera_Id, Make, Model, `Serial\nNumber`, Year_Purchased, Deployment_ID, Point.x, Longitude, Latitude,\nstart_date, end_date, `Bait Type`, `Bait Description`, `Feature Type`, `Feature\nType methodology`, `Camera Type`, `Quiet Period Setting`, `Restriction on\nAccess`, `Camera Failure Details`, season, rio_playa, arroyo, camino,\nsenda_animal, senda_gente, salitral, pozo_agua, bosque, sabana, intermedio,\nintervalo_trigger, locationID, `Image Id`, `Photo Type`, `Photo Type Identified\nby`, Point.y, scientificName, Date_Time_Captured, `Independent event`, Age,\nSex, `Individual ID`, Count, Jaguar_Design, year, array_locID)`\n\nCode# fix date format\n# \nEcu_14_15_16$start_date &lt;- as.Date(Ecu_14_15_16$start_date, \"%Y/%m/%d\")\nEcu_14_15_16$end_date &lt;- as.Date(Ecu_14_15_16$end_date, \"%Y/%m/%d\")\nEcu_14_15_16$eventDate &lt;- as.Date(Ecu_14_15_16$Date_Time_Captured, \"%Y-%m-%d\")\n\nWarning in as.POSIXlt.POSIXct(x, tz = tz): unknown timezone '%Y-%m-%d'\n\nCodeEcu_14_15_16$eventDateTime &lt;- ymd_hms(Ecu_14_15_16$Date_Time_Captured)\n\n\n# filter 2021 and make uniques\nCToperation  &lt;- Ecu_14_15_16 |&gt; group_by(array_locID) |&gt; \n                           mutate(minStart=start_date, maxEnd=end_date) |&gt; distinct(Longitude, Latitude, minStart, maxEnd) |&gt; ungroup()\n\n\n# Generamos la matríz de operación de las cámaras\n\ncamop &lt;- cameraOperation(CTtable= CToperation, # Tabla de operación\n                         stationCol= \"array_locID\", # Columna que define la estación\n                         setupCol= \"minStart\", #Columna fecha de colocación\n                         retrievalCol= \"maxEnd\", #Columna fecha de retiro\n                         #hasProblems= T, # Hubo fallos de cámaras\n                         dateFormat= \"%Y-%m-%d\") #, # Formato de las fechas\n                         #cameraCol=\"CT\")\n                         # sessionCol= \"Year\")\n\n# Generar las historias de detección ---------------------------------------\n## remove plroblem species\nind &lt;- which(Ecu_14_15_16$scientificName==\"Set up\")\nEcu_14_15_16 &lt;- Ecu_14_15_16[-ind,]\n\nind &lt;- which(Ecu_14_15_16$scientificName==\"Blank\")\nEcu_14_15_16 &lt;- Ecu_14_15_16[-ind,]\n\nind &lt;- which(Ecu_14_15_16$scientificName==\"Unknown\")\nEcu_14_15_16 &lt;- Ecu_14_15_16[-ind,]\n\n\n\n\n\nDetHist_list &lt;- lapply(unique(Ecu_14_15_16$scientificName), FUN = function(x) {\n  detectionHistory(\n    recordTable         = Ecu_14_15_16, # Tabla de registros\n    camOp                = camop, # Matriz de operación de cámaras\n    stationCol           = \"array_locID\",\n    speciesCol           = \"scientificName\",\n    recordDateTimeCol    = \"eventDateTime\",\n    recordDateTimeFormat  = \"%Y-%m-%d %H:%M:%S\",\n    species              = x,     # la función reemplaza x por cada una de las especies\n    occasionLength       = 7, # Colapso de las historias a 10 ías\n    day1                 = \"station\", # \"survey\" a specific date, \"station\", #inicie en la fecha de cada survey\n    datesAsOccasionNames = FALSE,\n    includeEffort        = TRUE,\n    scaleEffort          = TRUE,\n    #unmarkedMultFrameInput=TRUE\n    timeZone             = \"America/Bogota\" \n    )\n  }\n)\n\n# names\nnames(DetHist_list) &lt;- unique(Ecu_14_15_16$scientificName)\n\n# Finalmente creamos una lista nueva donde estén solo las historias de detección\nylist &lt;- lapply(DetHist_list, FUN = function(x) x$detection_history)\n# otra lista con effort scaled\nefort &lt;- lapply(DetHist_list, FUN = function(x) x$effort)\n\n# Total number of observations for each species\nlapply(ylist, sum, na.rm = TRUE)\n\n$`Dasyprocta fuliginosa`\n[1] 10\n\n$`Cuniculus paca`\n[1] 26\n\n$`Nothocrax urumutum`\n[1] 7\n\n$`Pecari tajacu`\n[1] 30\n\n$`Mazama rufina`\n[1] 19\n\n$`Panthera onca`\n[1] 4\n\n$`Leopardus pardalis`\n[1] 6\n\n$`Cabassous unicinctus`\n[1] 1\n\n$`Dasypus novemcinctus`\n[1] 31\n\n$`Tremarctos ornatus`\n[1] 33\n\n$`Tinamus major`\n[1] 3\n\n$`Canis familiaris`\n[1] 3\n\n$`Homo sapiens`\n[1] 3\n\n$`Hadrosciurus igniventris`\n[1] 2\n\n$`Mazama zamora`\n[1] 4\n\n$`Eira barbara`\n[1] 3\n\n$`Herpailurus yagouaroundi`\n[1] 1\n\n$`Mazama murelia`\n[1] 3\n\n$`Chamaepetes goudotii`\n[1] 1\n\n$`Leopardus wiedii`\n[1] 2\n\n$`Tayassu pecari`\n[1] 1\n\n$`Zentrygon frenata`\n[1] 1\n\n$`Odocoileus ustus`\n[1] 49\n\n$`Sylvilagus andinus`\n[1] 49\n\n$`Nasuella olivacea`\n[1] 5\n\n$`Puma concolor`\n[1] 16\n\n$`Pudu mephistophiles`\n[1] 12\n\n$`Cuniculus taczanowskii`\n[1] 8\n\n$`Tapirus pinchaque`\n[1] 26\n\n$`Leopardus tigrinus`\n[1] 5\n\n$`Pseudalopex culpaeus`\n[1] 39\n\n$`Conepatus semistriatus`\n[1] 3\n\n$`Bos taurus`\n[1] 37\n\n$`Didlephis pernigra`\n[1] 3\n\n$`Penelope montagnii`\n[1] 1\n\n\nArrange spatial covariates\n\nCode# make sf()\nfull_sites_14_15_16_sf &lt;- CToperation |&gt; \n    st_as_sf(coords = c(\"Longitude\", \"Latitude\"), \n              crs = 4326)\n\n# extract elev\nfull_sites_14_15_16_sf$elev &lt;- terra::extract(elevation_14, full_sites_14_15_16_sf)[,2]\nstr(full_sites_14_15_16_sf$elev)\n\n num [1:87] 802 1149 751 646 1051 ...\n\nCode# extract in AP\nfull_sites_14_15_16_sf$in_AP = as.factor(st_intersects(full_sites_14_15_16_sf, AP_Llanganates, sparse = FALSE))\n\nin_AP &lt;- as.numeric(as.vector(st_drop_geometry(full_sites_14_15_16_sf$in_AP)))\n\nWarning: NAs introducidos por coerción\n\nCode# mapview(full_sites_14_15_16_sf, zcol = \"in_AP\", burst = TRUE)\n\n# Transform coord to UTM Z17 Ecuador EPSG:32717 WGS 84 / UTM zone 17S\nfull_sites_14_15_16_sf_UTM &lt;- st_transform(full_sites_14_15_16_sf, \"EPSG:32717\")\n\ncoords &lt;- st_coordinates(full_sites_14_15_16_sf_UTM)\n#str(coords)\n\n# make Ecu_14_15_16 an sf object\n#    cam_sf &lt;- st_as_sf(Ecu_14_15_16, coords = c(\"lon\",\"lat\"))   #crs=\"EPSG:4326\")\n    #--- set CRS ---#\n#    st_crs(cam_sf) &lt;- 4326\n\n#transform llanganates to UTM\nAP_Llanganates_UTM &lt;- st_transform(AP_Llanganates, \"EPSG:32717\")\n# Convert to LINESTRING\nAP_Llanganates_UTM_line &lt;- st_cast(AP_Llanganates_UTM, \"LINESTRING\")\n\nWarning in st_cast.sf(AP_Llanganates_UTM, \"LINESTRING\"): repeating attributes\nfor all sub-geometries for which they may not be constant\n\nCode# Calculate the distance\n#multiplic &lt;- full_sites_14_15_16_sf_UTM |&gt; mutate(multiplic= as.numeric(in_AP)) \nmultiplic=ifelse(full_sites_14_15_16_sf_UTM$in_AP==\"TRUE\",-1,1)\nfull_sites_14_15_16_sf_UTM$border_dist &lt;- as.numeric(st_distance(full_sites_14_15_16_sf_UTM, AP_Llanganates_UTM_line) * multiplic )\n# print(border_dist)\n\nstr(full_sites_14_15_16_sf_UTM$border_dist)\n\n num [1:87] 399 1749 5432 1255 17612 ...\n\n\nPrepare the model\n\nCode# Detection-nondetection data ---------\n# Species of interest, can select individually\n# curr.sp &lt;- sort(unique(Ecu_14_15_16$.id))# c('BAWW', 'BLJA', 'GCFL')\nselected.sp &lt;-  c(\"Canis familiaris\", \n              \"Cuniculus paca\",\n              \"Cuniculus taczanowskii\",\n              \"Dasyprocta fuliginosa\",\n              \"Eira barbara\",\n              \"Herpailurus yagouaroundi\",\n              \"Mazama murelia\",\n              \"Mazama rufina\",\n              \"Mazama zamora\",\n              \"Nasuella olivacea\",\n              \"Odocoileus ustus\",\n              \"Pecari tajacu\",\n              \"Pseudalopex culpaeus\",\n              \"Pudu mephistophiles\",\n              \"Puma concolor\",\n              \"Tapirus pinchaque\",\n              \"Tayassu pecari\",\n              \"Tremarctos ornatus\")\n\n# y.msom &lt;- y[which(sp.codes %in% selected.sp), , ]\n# str(y.msom)\n\n\n#### site covs\nsitecovs &lt;- as.data.frame(st_drop_geometry(\n                    full_sites_14_15_16_sf_UTM[,5:7]))\n sitecovs[, 1] &lt;- as.vector(scale(sitecovs[,1]))   # scale numeric covariates\n sitecovs[, 3] &lt;- as.vector(scale(sitecovs[,3]))   # scale numeric covariates\n # sitecovs$fact &lt;- factor(c(\"A\", \"A\", \"B\"))    # categorical covariate\n\nnames(sitecovs) &lt;- c(\"elev\", \"in_AP\", \"border_dist\")\n\n# check consistancy equal number of spatial covariates and rows in data\n# identical(nrow(ylist[[1]]), nrow(covars)) \n\n# Base de datos para los análisis -----------------------------------------\n\ndata_list &lt;- list(ylist    = ylist, # Historias de detección\n                  siteCovs = sitecovs, #covars, # Covariables de sitio\n                  obsCovs  = list(effort = DetHist_list[[1]]$effort))  # agregamos el esfuerzo de muestreo como covariable de observación\n\n# 3. 1 Modelo multi-especie  -----------------------------------------\n\n# Se creará un txt temporal donde estarán las especificaciones del modelo Bayesiano en JAGS\nmodelfile &lt;- (fileext = \"modoccu.txt\")\n\n# Usaremos la función ` communityModel`\n\n# Generemos el modelo\ncomu_model &lt;- communityModel(data_list, # la lista de datos\n                             occuCovs = list(ranef=c(\"border_dist\", \"elev\", \"in_AP\")), # ranef La covariables de sitio\n                             detCovsObservation = list(fixed = \"effort\"), #Covariables de observación\n                             intercepts = list(det = \"ranef\", occu = \"ranef\"),\n                             # augmentation = c(full = 30),# Número aumentado de especies\n                             modelFile = \"modelfile\")\n\nWrote model to modelfile\n\nCodesummary(comu_model)\n\ncommOccu object for community occupancy model (in JAGS)\n\n35 species,  87 stations,  14 occasions\n685 occasions with effort\nNumber of detections (by species): 1 - 49 \n\nAvailable site covariates:\n elev, in_AP, border_dist \n\nUsed site covariates:\n elev, in_AP, border_dist \n\nAvailable site-occasion covariates:\n effort \n\n\nRunning the model\n\nCode# Running the model\n\nfit.commu &lt;- fit(comu_model,\n                 n.iter = 100000,\n                 n.burnin = 10000,\n                 thin = 50,\n                 chains = 3,\n                 cores = 3,\n                 quiet = T\n);beep(sound = 4)\n\nNOTE: Stopping adaptation\n\nCode# save the results to not run again\nsave(fit.commu, file=\"C:/CodigoR/Occu_APs/Occu_APs_blog/posts/2nd_model_1AP/result/DR_result.R\") # guardamos los resultados para no correr de nuevo\n\n\nResults as table\n\nCode# Resultados --------------------------------------------------------------\n\n# Extraemos lo tabla de valores estimados\nmodresult &lt;- as.data.frame(summary(fit.commu)[[\"statistics\"]])\n# View(modresult)\nDT::datatable(round(summary(fit.commu)$statistics, 3))\n\n\n\n\n\nBayesian p-values can be inspected to check for lack of fit (overall or by species). Lack of fit at significance level = 0.05 is indicated by Bayesian p-values below 0.025 or greater than 0.975. The overall Bayesian p-value (Bpvalue) indicates no problems with lack of fit. Likewise, species-level Bayesian p-values (Bpvalue_species) indicate no lack of fit for any species.\nResults as graph\n\nCode# Gráficos de predicción y de coeficientes\n\n# Otra gran ventaja de CamtrapR es que permite gráficar de manera muy sencilla la predicción posterior del modelo. Veamos que pasa con la ocupación de cada especie\n\nplot_effects(comu_model,\n              fit.commu,\n              submodel = \"det\",\n             combine = T)\n\n$effort\n\n\n\n\n\n\n\nCode# $effort\n\n\nplot_coef(comu_model,\n           fit.commu,\n           submodel = \"state\",\n           combine = T)\n\n'combine' and 'ordered' can't both be TRUE. Setting 'ordered = FALSE'\n\n\n\n\n\n\n\nCode# $occupancy\n\n\n\nplot_effects(comu_model, # El modelo\n             fit.commu, # El objeto ajustado\n             submodel = \"state\",\n             response = \"occupancy\") # el parámetro de interés\n\n$border_dist\n\n\n\n\n\n\n\n\n\n$elev\n\n\n\n\n\n\n\n\n\n$in_AP\n\n\n\n\n\n\n\nCode#&gt; $rough\n#&gt; \n\n\nHere we should see all Rhat values are less than 1.1 and the ESS values indicating adequate mixing of the MCMC chains."
  },
  {
    "objectID": "posts/2nd_model_1AP/index.html#package-citation",
    "href": "posts/2nd_model_1AP/index.html#package-citation",
    "title": "Fitting a Multi-Species non Spatial Occupancy Model",
    "section": "Package Citation",
    "text": "Package Citation\n\nCodepkgs &lt;- cite_packages(output = \"paragraph\", pkgs=\"Session\", out.dir = \".\")\n# knitr::kable(pkgs)\npkgs\n\nWe used R version 4.4.2 (R Core Team 2024) and the following R packages: bayesplot v. 1.11.1 (Gabry et al. 2019; Gabry and Mahr 2024), beepr v. 2.0 (Bååth 2024), camtrapR v. 2.3.0 (Niedballa et al. 2016), coda v. 0.19.4.1 (Plummer et al. 2006), DT v. 0.33 (Xie, Cheng, and Tan 2024), elevatr v. 0.99.0 (Hollister et al. 2023), maps v. 3.4.2.1 (Richard A. Becker, Ray Brownrigg. Enhancements by Thomas P Minka, and Deckmyn. 2024), mapview v. 2.11.2 (Appelhans et al. 2023), rjags v. 4.17 (Plummer 2025), sf v. 1.0.19 (Pebesma 2018; Pebesma and Bivand 2023), snow v. 0.4.4 (Tierney et al. 2021), snowfall v. 1.84.6.3 (Knaus 2023), terra v. 1.8.21 (Hijmans 2025), tictoc v. 1.2.1 (Izrailev 2024), tidyverse v. 2.0.0 (Wickham et al. 2019), tmap v. 4.0 (Tennekes 2018)."
  },
  {
    "objectID": "posts/2nd_model_1AP/index.html#sesion-info",
    "href": "posts/2nd_model_1AP/index.html#sesion-info",
    "title": "Fitting a Multi-Species non Spatial Occupancy Model",
    "section": "Sesion info",
    "text": "Sesion info\n\n\n\n\n\n\nNote\n\n\n\n\n\n\nCodeprint(sessionInfo(), locale = FALSE)\n\nR version 4.4.2 (2024-10-31 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 10 x64 (build 19045)\n\nMatrix products: internal\n\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] lubridate_1.9.4   forcats_1.0.0     stringr_1.5.1     dplyr_1.1.4      \n [5] purrr_1.0.2       readr_2.1.5       tidyr_1.3.1       tibble_3.2.1     \n [9] ggplot2_3.5.1     tidyverse_2.0.0   camtrapR_2.3.0    snowfall_1.84-6.3\n[13] snow_0.4-4        beepr_2.0         tictoc_1.2.1      bayesplot_1.11.1 \n[17] rjags_4-17        coda_0.19-4.1     elevatr_0.99.0    terra_1.8-21     \n[21] tmap_4.0          maps_3.4.2.1      mapview_2.11.2    sf_1.0-19        \n[25] DT_0.33           readxl_1.4.3      grateful_0.2.10  \n\nloaded via a namespace (and not attached):\n  [1] RColorBrewer_1.1-3      rstudioapi_0.17.1       audio_0.1-11           \n  [4] jsonlite_1.8.9          wk_0.9.4                magrittr_2.0.3         \n  [7] farver_2.1.2            rmarkdown_2.29          vctrs_0.6.5            \n [10] base64enc_0.1-3         RcppNumerical_0.6-0     htmltools_0.5.8.1      \n [13] leafsync_0.1.0          progress_1.2.3          curl_6.0.0             \n [16] raster_3.6-30           cellranger_1.1.0        s2_1.1.7               \n [19] sass_0.4.9              slippymath_0.3.1        KernSmooth_2.23-24     \n [22] bslib_0.8.0             htmlwidgets_1.6.4       plyr_1.8.9             \n [25] cachem_1.1.0            stars_0.6-8             uuid_1.2-1             \n [28] lifecycle_1.0.4         pkgconfig_2.0.3         cols4all_0.8           \n [31] Matrix_1.7-1            R6_2.6.1                fastmap_1.2.0          \n [34] digest_0.6.37           colorspace_2.1-1        leafem_0.2.3           \n [37] crosstalk_1.2.1         labeling_0.4.3          lwgeom_0.2-14          \n [40] progressr_0.15.0        spacesXYZ_1.3-0         timechange_0.3.0       \n [43] httr_1.4.7              abind_1.4-8             mgcv_1.9-1             \n [46] compiler_4.4.2          microbenchmark_1.5.0    proxy_0.4-27           \n [49] withr_3.0.2             brew_1.0-10             DBI_1.2.3              \n [52] MASS_7.3-61             tmaptools_3.2           leaflet_2.2.2          \n [55] classInt_0.4-10         tools_4.4.2             units_0.8-5            \n [58] leaflegend_1.2.1        glue_1.8.0              satellite_1.0.5        \n [61] nlme_3.1-166            grid_4.4.2              reshape2_1.4.4         \n [64] generics_0.1.3          gtable_0.3.6            leaflet.providers_2.0.0\n [67] tzdb_0.4.0              class_7.3-22            data.table_1.16.4      \n [70] hms_1.1.3               sp_2.1-4                pillar_1.10.1          \n [73] splines_4.4.2           lattice_0.22-6          tidyselect_1.2.1       \n [76] knitr_1.49              svglite_2.1.3           stats4_4.4.2           \n [79] xfun_0.49               leafpop_0.1.0           stringi_1.8.4          \n [82] rematch_2.0.0           yaml_2.3.10             evaluate_1.0.1         \n [85] codetools_0.2-20        cli_3.6.3               RcppParallel_5.1.9     \n [88] systemfonts_1.1.0       munsell_0.5.1           jquerylib_0.1.4        \n [91] secr_5.1.0              dichromat_2.0-0.1       Rcpp_1.0.13-1          \n [94] png_0.1-8               XML_3.99-0.17           parallel_4.4.2         \n [97] prettyunits_1.2.0       viridisLite_0.4.2       mvtnorm_1.3-2          \n[100] scales_1.3.0            e1071_1.7-16            crayon_1.5.3           \n[103] rlang_1.1.4"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/1st_model_1AP/index.html",
    "href": "posts/1st_model_1AP/index.html",
    "title": "Llanganates",
    "section": "",
    "text": "Codelibrary(grateful)\nlibrary(readxl)\nlibrary(DT)\nlibrary(sf)\nlibrary(mapview)\nlibrary(maps)\nlibrary(tmap)\nlibrary(terra)\nlibrary(elevatr)\nlibrary(spOccupancy)\nlibrary(bayesplot)\n#library(ggmcmc)\n\nlibrary(tidyverse)\n\n\n\n\n\n\nCodesource(\"C:/CodigoR/WCS-CameraTrap/R/organiza_datos_v3.R\")\n\nCargando paquete requerido: camtrapR\n\nCodeAP_Llanganates &lt;- read_sf(\"C:/CodigoR/Occu_APs/shp/Llanganates/WDPA_WDOECM_May2025_Public_97512_shp-polygons.shp\")\n\n### Ecu 14, Ecu 14  y Ecu 16\n\n# load data\nEcu_14 &lt;- loadproject(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-014.xlsx\")\n\n29 cameras in Cameras. \n 29 cameras in Deployment. \n 29 deployments in Deployment. \n 29 points in Deployment. \n 29 cameras in Images. \n 29 points in Images. \n\n\nJoining with `by = join_by(Camera_Id)`\n\n\n[1] \"dates ok\"\nyear: 2015 \n Jaguar_Design: no \n\nCodeEcu_15 &lt;- loadproject(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-015.xlsx\")\n\n29 cameras in Cameras. \n 29 cameras in Deployment. \n 30 deployments in Deployment. \n 30 points in Deployment. \n 30 cameras in Images. \n 30 points in Images. \n\n\nJoining with `by = join_by(Camera_Id)`\n\n\nWarning in left_join(cameras, deployment): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 6 of `x` matches multiple rows in `y`.\nℹ Row 6 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nWarning in left_join(data1, image, by): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 470 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\n[1] \"dates ok\"\nyear: 2016 \n Jaguar_Design: no \n\nCodeEcu_16 &lt;- loadproject(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-016.xlsx\")\n\n28 cameras in Cameras. \n 28 cameras in Deployment. \n 28 deployments in Deployment. \n 28 points in Deployment. \n 28 cameras in Images. \n 28 points in Images. \n\n\nJoining with `by = join_by(Camera_Id)`\n\n\n[1] \"dates ok\"\nyear: 2016 \n Jaguar_Design: no \n\nCode# get sites\nEcu_14_sites &lt;- get.sites(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-014.xlsx\")\n\nJoining with `by = join_by(Camera_Id)`\n\n\nJoining with `by = join_by(Point)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType, Deployment_ID, start_date, end_date,\n`Bait Type`, `Feature Type`, `Feature Type methodology`, Camera_Id, `Quiet\nPeriod Setting`, `Restriction on Access`, `Camera Failure Details`, `Project\nId`, Make, Model, `Serial Number`, Year_Purchased)`\n\nCodeEcu_15_sites &lt;- get.sites(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-015.xlsx\")\n\nJoining with `by = join_by(Camera_Id)`\nJoining with `by = join_by(Point)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType, Deployment_ID, start_date, end_date,\n`Bait Type`, `Feature Type`, `Feature Type methodology`, Camera_Id, `Quiet\nPeriod Setting`, `Restriction on Access`, `Camera Failure Details`, `Project\nId`, Make, Model, `Serial Number`, Year_Purchased)`\n\nCodeEcu_16_sites &lt;- get.sites(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-016.xlsx\")\n\nJoining with `by = join_by(Camera_Id)`\nJoining with `by = join_by(Point)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType, Deployment_ID, start_date, end_date,\n`Bait Type`, `Feature Type`, `Feature Type methodology`, Camera_Id, `Quiet\nPeriod Setting`, `Restriction on Access`, `Camera Failure Details`, `Project\nId`, Make, Model, `Serial Number`, Year_Purchased)`\n\nCode# get elevation map\nelevation_14 &lt;- rast(get_elev_raster(Ecu_14_sites, z = 9))\n\nMosaicing & Projecting\nNote: Elevation units are in meters.\n\nCodebb &lt;-  st_as_sfc(st_bbox(elevation_14)) # make bounding box \n\n\n\n# extract covs using points and add to _sites\ncovs_Ecu_14_sites &lt;- cbind(Ecu_14_sites, terra::extract(elevation_14, Ecu_14_sites))\n\ncovs_Ecu_15_sites &lt;- cbind(Ecu_15_sites, terra::extract(elevation_14, Ecu_15_sites))\n\ncovs_Ecu_16_sites &lt;- cbind(Ecu_16_sites, terra::extract(elevation_14, Ecu_16_sites))\n\n# get which are in and out\ncovs_Ecu_14_sites$in_AP = st_intersects(covs_Ecu_14_sites, AP_Llanganates, sparse = FALSE)\n\ncovs_Ecu_15_sites$in_AP = st_intersects(covs_Ecu_15_sites, AP_Llanganates, sparse = FALSE)\n\ncovs_Ecu_16_sites$in_AP = st_intersects(covs_Ecu_16_sites, AP_Llanganates, sparse = FALSE)\n\n\n\n# make a map\nmapview (elevation_14, alpha=0.5) + \n  mapview (AP_Llanganates, color = \"green\", col.regions = \"green\", alpha = 0.5) +\n  mapview (covs_Ecu_14_sites, zcol = \"in_AP\", col.regions =c(\"red\",\"blue\"), burst = TRUE) +\n  mapview (covs_Ecu_15_sites, zcol = \"in_AP\", burst = TRUE, col.regions = c(\"blue\") )+\n  mapview (covs_Ecu_16_sites, zcol = \"in_AP\", burst = TRUE, col.regions =c(\"red\",\"blue\")) \n\nNumber of pixels is above 5e+05.Only about 5e+05 pixels will be shown.\nYou can increase the value of `maxpixels` to 524288 to avoid this."
  },
  {
    "objectID": "posts/1st_model_1AP/index.html#multi-species-occupancy-model-using-spoccupancy",
    "href": "posts/1st_model_1AP/index.html#multi-species-occupancy-model-using-spoccupancy",
    "title": "Llanganates",
    "section": "",
    "text": "Codelibrary(grateful)\nlibrary(readxl)\nlibrary(DT)\nlibrary(sf)\nlibrary(mapview)\nlibrary(maps)\nlibrary(tmap)\nlibrary(terra)\nlibrary(elevatr)\nlibrary(spOccupancy)\nlibrary(bayesplot)\n#library(ggmcmc)\n\nlibrary(tidyverse)\n\n\n\n\n\n\nCodesource(\"C:/CodigoR/WCS-CameraTrap/R/organiza_datos_v3.R\")\n\nCargando paquete requerido: camtrapR\n\nCodeAP_Llanganates &lt;- read_sf(\"C:/CodigoR/Occu_APs/shp/Llanganates/WDPA_WDOECM_May2025_Public_97512_shp-polygons.shp\")\n\n### Ecu 14, Ecu 14  y Ecu 16\n\n# load data\nEcu_14 &lt;- loadproject(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-014.xlsx\")\n\n29 cameras in Cameras. \n 29 cameras in Deployment. \n 29 deployments in Deployment. \n 29 points in Deployment. \n 29 cameras in Images. \n 29 points in Images. \n\n\nJoining with `by = join_by(Camera_Id)`\n\n\n[1] \"dates ok\"\nyear: 2015 \n Jaguar_Design: no \n\nCodeEcu_15 &lt;- loadproject(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-015.xlsx\")\n\n29 cameras in Cameras. \n 29 cameras in Deployment. \n 30 deployments in Deployment. \n 30 points in Deployment. \n 30 cameras in Images. \n 30 points in Images. \n\n\nJoining with `by = join_by(Camera_Id)`\n\n\nWarning in left_join(cameras, deployment): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 6 of `x` matches multiple rows in `y`.\nℹ Row 6 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nWarning in left_join(data1, image, by): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 470 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\n[1] \"dates ok\"\nyear: 2016 \n Jaguar_Design: no \n\nCodeEcu_16 &lt;- loadproject(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-016.xlsx\")\n\n28 cameras in Cameras. \n 28 cameras in Deployment. \n 28 deployments in Deployment. \n 28 points in Deployment. \n 28 cameras in Images. \n 28 points in Images. \n\n\nJoining with `by = join_by(Camera_Id)`\n\n\n[1] \"dates ok\"\nyear: 2016 \n Jaguar_Design: no \n\nCode# get sites\nEcu_14_sites &lt;- get.sites(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-014.xlsx\")\n\nJoining with `by = join_by(Camera_Id)`\n\n\nJoining with `by = join_by(Point)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType, Deployment_ID, start_date, end_date,\n`Bait Type`, `Feature Type`, `Feature Type methodology`, Camera_Id, `Quiet\nPeriod Setting`, `Restriction on Access`, `Camera Failure Details`, `Project\nId`, Make, Model, `Serial Number`, Year_Purchased)`\n\nCodeEcu_15_sites &lt;- get.sites(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-015.xlsx\")\n\nJoining with `by = join_by(Camera_Id)`\nJoining with `by = join_by(Point)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType, Deployment_ID, start_date, end_date,\n`Bait Type`, `Feature Type`, `Feature Type methodology`, Camera_Id, `Quiet\nPeriod Setting`, `Restriction on Access`, `Camera Failure Details`, `Project\nId`, Make, Model, `Serial Number`, Year_Purchased)`\n\nCodeEcu_16_sites &lt;- get.sites(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-016.xlsx\")\n\nJoining with `by = join_by(Camera_Id)`\nJoining with `by = join_by(Point)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType, Deployment_ID, start_date, end_date,\n`Bait Type`, `Feature Type`, `Feature Type methodology`, Camera_Id, `Quiet\nPeriod Setting`, `Restriction on Access`, `Camera Failure Details`, `Project\nId`, Make, Model, `Serial Number`, Year_Purchased)`\n\nCode# get elevation map\nelevation_14 &lt;- rast(get_elev_raster(Ecu_14_sites, z = 9))\n\nMosaicing & Projecting\nNote: Elevation units are in meters.\n\nCodebb &lt;-  st_as_sfc(st_bbox(elevation_14)) # make bounding box \n\n\n\n# extract covs using points and add to _sites\ncovs_Ecu_14_sites &lt;- cbind(Ecu_14_sites, terra::extract(elevation_14, Ecu_14_sites))\n\ncovs_Ecu_15_sites &lt;- cbind(Ecu_15_sites, terra::extract(elevation_14, Ecu_15_sites))\n\ncovs_Ecu_16_sites &lt;- cbind(Ecu_16_sites, terra::extract(elevation_14, Ecu_16_sites))\n\n# get which are in and out\ncovs_Ecu_14_sites$in_AP = st_intersects(covs_Ecu_14_sites, AP_Llanganates, sparse = FALSE)\n\ncovs_Ecu_15_sites$in_AP = st_intersects(covs_Ecu_15_sites, AP_Llanganates, sparse = FALSE)\n\ncovs_Ecu_16_sites$in_AP = st_intersects(covs_Ecu_16_sites, AP_Llanganates, sparse = FALSE)\n\n\n\n# make a map\nmapview (elevation_14, alpha=0.5) + \n  mapview (AP_Llanganates, color = \"green\", col.regions = \"green\", alpha = 0.5) +\n  mapview (covs_Ecu_14_sites, zcol = \"in_AP\", col.regions =c(\"red\",\"blue\"), burst = TRUE) +\n  mapview (covs_Ecu_15_sites, zcol = \"in_AP\", burst = TRUE, col.regions = c(\"blue\") )+\n  mapview (covs_Ecu_16_sites, zcol = \"in_AP\", burst = TRUE, col.regions =c(\"red\",\"blue\")) \n\nNumber of pixels is above 5e+05.Only about 5e+05 pixels will be shown.\nYou can increase the value of `maxpixels` to 524288 to avoid this."
  },
  {
    "objectID": "posts/1st_model_1AP/index.html#detection-history",
    "href": "posts/1st_model_1AP/index.html#detection-history",
    "title": "Llanganates",
    "section": "Detection history",
    "text": "Detection history\n\nCode# check duplicateds in sites\nind1 &lt;- as.vector(which(table(Ecu_15_sites$Point)&gt;=2))# duplicated\nind &lt;- which(Ecu_15_sites$Point==ind1)# match\nEcu_15_sites &lt;- Ecu_15_sites[-ind,]# remove\n\n\n\nEcu_14_historias &lt;- wcs.det_history.creator(data=Ecu_14)\n\nCargando paquete requerido: hms\n\n\n\nAdjuntando el paquete: 'hms'\n\n\nThe following object is masked from 'package:lubridate':\n\n    hms\n\n\n51 days of sampling effort. \n 29 sampling sites. \n 25 species. \n\nCode# sp_number &lt;- which(names(Ecu_14_historias)==\"Tremarctos ornatus\")\nEcu_15_historias &lt;- wcs.det_history.creator(data=Ecu_15)\n\n53 days of sampling effort. \n 30 sampling sites. \n 13 species. \n\nCode# sp_number &lt;- which(names(Ecu_14_historias)==\"Tremarctos ornatus\")\nEcu_16_historias &lt;- wcs.det_history.creator(data=Ecu_16)\n\n106 days of sampling effort. \n 28 sampling sites. \n 16 species. \n\nCode# sp_number &lt;- which(names(Ecu_14_historias)==\"Tremarctos ornatus\")\n\n\n\n# make data frame for each\nlibrary (plyr)\n\n------------------------------------------------------------------------------\n\n\nYou have loaded plyr after dplyr - this is likely to cause problems.\nIf you need functions from both plyr and dplyr, please load plyr first, then dplyr:\nlibrary(plyr); library(dplyr)\n\n\n------------------------------------------------------------------------------\n\n\n\nAdjuntando el paquete: 'plyr'\n\n\nThe following objects are masked from 'package:dplyr':\n\n    arrange, count, desc, failwith, id, mutate, rename, summarise,\n    summarize\n\n\nThe following object is masked from 'package:purrr':\n\n    compact\n\n\nThe following object is masked from 'package:maps':\n\n    ozone\n\nCodeEcu_14_df &lt;- ldply (Ecu_14_historias)\nEcu_14_df$site &lt;- paste(\"Ecu_14\", 1:29, sep=\"_\")#sites\nEcu_14_df$lat &lt;- rep(as.data.frame(st_coordinates(Ecu_14_sites))[,\"Y\"], 25) #sp\nEcu_14_df$lon &lt;- as.data.frame(st_coordinates(Ecu_14_sites))[,\"X\"]\n\n\nEcu_15_df &lt;- ldply (Ecu_15_historias)\nEcu_15_df$site &lt;- paste(\"Ecu_15\", 1:30, sep=\"_\")#site\nEcu_15_df$lat &lt;- rep(as.data.frame(st_coordinates(Ecu_15_sites))[,\"Y\"], 13) #sp\nEcu_15_df$lon &lt;- as.data.frame(st_coordinates(Ecu_15_sites))[,\"X\"]\n\n\nEcu_16_df &lt;- ldply (Ecu_16_historias)\nEcu_16_df$site &lt;- paste(\"Ecu_16\", 1:28, sep=\"_\")#site\nEcu_16_df$lat &lt;- rep(as.data.frame(st_coordinates(Ecu_16_sites))[,\"Y\"], 16) #sp\nEcu_16_df$lon &lt;- as.data.frame(st_coordinates(Ecu_16_sites))[,\"X\"]\n\n\n# rbind cuted by por 45 dias de muestreo\nEcu_14_15_16 &lt;- rbind(Ecu_14_df[,-(47:52)],\n                      Ecu_15_df[,-(47:54)],\n                      Ecu_16_df[,-(47:107)])\n\n# remove non species\n# filter(id != 2) # or filter(!id == 2)\nEcu_14_15_16 &lt;- Ecu_14_15_16 |&gt; \n                  filter(.id != \"Set up\" ) |&gt; \n                  filter(.id != \"Blank\" )  |&gt; \n                  filter(.id != \"Unknown\" )\n\n\n####################\n# Make empty array\n####################\n# Species codes.\nsp.codes &lt;- sort(unique(Ecu_14_15_16$.id))\n# Plot (site) codes.\nplot.codes &lt;- sort(unique(Ecu_14_15_16$site))\n# Number of species\nN &lt;- length(sp.codes)\n# Maximum number of replicates at a site\nK &lt;- 45\n# Number of sites\nJ &lt;- length(unique(Ecu_14_15_16$site))\n# Array for detection-nondetection data. \ny &lt;- array(NA, dim = c(N, J, K))\n# Label the dimensions of y (not necessary, but helpful)\ndimnames(y)[[1]] &lt;- sp.codes\ndimnames(y)[[2]] &lt;- plot.codes\n# Look at the structure of our array y\nstr(y)\n\n logi [1:35, 1:87, 1:45] NA NA NA NA NA NA ...\n - attr(*, \"dimnames\")=List of 3\n  ..$ : chr [1:35] \"Bos taurus\" \"Cabassous unicinctus\" \"Canis familiaris\" \"Chamaepetes goudotii\" ...\n  ..$ : chr [1:87] \"Ecu_14_1\" \"Ecu_14_10\" \"Ecu_14_11\" \"Ecu_14_12\" ...\n  ..$ : NULL\n\nCode########### feed the empty array\nfor (j in 1:J) { # Loop through sites.\n  for (k in 1:K) { # Loop through replicates at each site.\n    # Extract data for current site/replicate combination.\n    curr.df &lt;- Ecu_14_15_16 %&gt;%\n      filter(site == plot.codes[j])\n    # Check if more than one date for a given replicate\n    #if (n_distinct(curr.df$Date) &gt; 1) {\n      # If there is more than 1 date, only use the data\n      # from the first date.\n    #  curr.dates &lt;- unique(sort(curr.df$Date))\n    #  curr.df &lt;- curr.df %&gt;% \n     #   filter(Date == curr.dates[1])\n     #}\n    # If plot j was sampled during replicate k, \n    # curr.df will have at least 1 row (i.e., at least \n    # one species will be observed). If not, assume it \n    # was not sampled for that replicate.\n    if (nrow(curr.df) &gt; 0) {\n      # Extract the species that were observed during\n      # this site/replicate.\n      curr.sp &lt;- which(sp.codes %in% curr.df$.id)\n      # Set value to 1 for species that were observed.\n      y[curr.sp, j, k] &lt;- 1\n      # Set value to 0 for all other species.\n      y[-curr.sp, j, k] &lt;- 0\n    }\n  } # k (replicates)\n} # j (sites)\nstr(y)\n\n num [1:35, 1:87, 1:45] 0 1 1 1 0 1 0 1 1 0 ...\n - attr(*, \"dimnames\")=List of 3\n  ..$ : chr [1:35] \"Bos taurus\" \"Cabassous unicinctus\" \"Canis familiaris\" \"Chamaepetes goudotii\" ...\n  ..$ : chr [1:87] \"Ecu_14_1\" \"Ecu_14_10\" \"Ecu_14_11\" \"Ecu_14_12\" ...\n  ..$ : NULL\n\nCode# Total number of observations for each species\napply(y, 1, sum, na.rm = TRUE)\n\n              Bos taurus     Cabassous unicinctus         Canis familiaris \n                    1260                     1305                     1305 \n    Chamaepetes goudotii   Conepatus semistriatus           Cuniculus paca \n                    1305                     1260                     1305 \n  Cuniculus taczanowskii    Dasyprocta fuliginosa     Dasypus novemcinctus \n                    2610                     1305                     1305 \n      Didlephis pernigra             Eira barbara Hadrosciurus igniventris \n                    1260                     1305                     1305 \nHerpailurus yagouaroundi             Homo sapiens       Leopardus pardalis \n                    1305                     1305                     1305 \n      Leopardus tigrinus         Leopardus wiedii           Mazama murelia \n                    2610                     1305                     1305 \n           Mazama rufina            Mazama zamora        Nasuella olivacea \n                    2565                     1305                     2610 \n      Nothocrax urumutum         Odocoileus ustus            Panthera onca \n                    1305                     2610                     1305 \n           Pecari tajacu       Penelope montagnii     Pseudalopex culpaeus \n                    1305                     1260                     2610 \n     Pudu mephistophiles            Puma concolor       Sylvilagus andinus \n                    2610                     2610                     2610 \n       Tapirus pinchaque           Tayassu pecari            Tinamus major \n                    2610                     1305                     1305 \n      Tremarctos ornatus        Zentrygon frenata \n                    3915                     1305 \n\nCode# Union coordiantes all sites\nfull_sites_14_15_16 &lt;- as.data.frame(cbind(\n  lat=unique(Ecu_14$Latitude), \n  lon=unique(Ecu_14$Longitude) )) |&gt; \n                       rbind(as.data.frame(cbind(\n  lat=unique(Ecu_15$Latitude), \n  lon=unique(Ecu_15$Longitude) )))|&gt; \n            rbind(as.data.frame(cbind(\n  lat=unique(Ecu_16$Latitude), \n  lon=unique(Ecu_16$Longitude) )))\n\n# put name\nfull_sites_14_15_16$site &lt;- unique(Ecu_14_15_16$site)\n# make sf()\nfull_sites_14_15_16_sf = st_as_sf(full_sites_14_15_16, \n                                  coords = c(\"lon\", \"lat\"), \n                                  crs = 4326)\n\n# extract elev\nelev &lt;- terra::extract(elevation_14, full_sites_14_15_16_sf)[,2]\nstr(elev)\n\n num [1:87] 703 1155 726 620 1112 ...\n\nCode# extract in AP\nfull_sites_14_15_16_sf$in_AP = st_intersects(full_sites_14_15_16_sf, AP_Llanganates, sparse = FALSE)\n\nin_AP &lt;- as.numeric(as.vector(st_drop_geometry(full_sites_14_15_16_sf$in_AP)))\n\n# mapview(full_sites_14_15_16_sf, zcol = \"in_AP\", burst = TRUE)\n\n# Transform coord to UTM Z17 Ecuador EPSG:32717 WGS 84 / UTM zone 17S\n\nfull_sites_14_15_16_sf_UTM &lt;- st_transform(full_sites_14_15_16_sf, \"EPSG:32717\")\n\ncoords &lt;- st_coordinates(full_sites_14_15_16_sf_UTM)\nstr(coords)\n\n num [1:87, 1:2] 836104 831789 840323 836954 845679 ...\n - attr(*, \"dimnames\")=List of 2\n  ..$ : NULL\n  ..$ : chr [1:2] \"X\" \"Y\"\n\nCode# make Ecu_14_15_16 an sf object\n#    cam_sf &lt;- st_as_sf(Ecu_14_15_16, coords = c(\"lon\",\"lat\"))   #crs=\"EPSG:4326\")\n    #--- set CRS ---#\n#    st_crs(cam_sf) &lt;- 4326\n\n#transform llanganates\nAP_Llanganates_UTM &lt;- st_transform(AP_Llanganates, \"EPSG:32717\")\n# Convert to LINESTRING\nAP_Llanganates_UTM_line &lt;- st_cast(AP_Llanganates_UTM, \"LINESTRING\")\n\nWarning in st_cast.sf(AP_Llanganates_UTM, \"LINESTRING\"): repeating attributes\nfor all sub-geometries for which they may not be constant\n\nCode# Calculate the distance\n#multiplic &lt;- full_sites_14_15_16_sf_UTM |&gt; mutate(multiplic= as.numeric(in_AP)) \nmultiplic=ifelse(full_sites_14_15_16_sf_UTM$in_AP==\"TRUE\",-1,1)\nborder_dist &lt;- st_distance(full_sites_14_15_16_sf_UTM, AP_Llanganates_UTM_line) * multiplic \n# print(border_dist)"
  },
  {
    "objectID": "posts/1st_model_1AP/index.html#pack-in-object",
    "href": "posts/1st_model_1AP/index.html#pack-in-object",
    "title": "Llanganates",
    "section": "pack in object",
    "text": "pack in object\n\nCode# Detection-nondetection data ---------\n# Species of interest, can select individually\ncurr.sp &lt;- sort(unique(Ecu_14_15_16$.id))# c('BAWW', 'BLJA', 'GCFL')\ny.msom &lt;- y[which(sp.codes %in% curr.sp), , ]\nstr(y.msom)\n\n num [1:35, 1:87, 1:45] 0 1 1 1 0 1 0 1 1 0 ...\n - attr(*, \"dimnames\")=List of 3\n  ..$ : chr [1:35] \"Bos taurus\" \"Cabassous unicinctus\" \"Canis familiaris\" \"Chamaepetes goudotii\" ...\n  ..$ : chr [1:87] \"Ecu_14_1\" \"Ecu_14_10\" \"Ecu_14_11\" \"Ecu_14_12\" ...\n  ..$ : NULL\n\nCode# Distances between sites\ndist.hbef &lt;- dist(coords)\n\n# Detection covariates ----------------\n# det.covs &lt;- list(day = hb.day, \n#                 tod = hb.tod)\n# str(det.covs)\n\n# Occurrence covariates ---------------\nocc.covs &lt;- data.frame(elev, as.factor(in_AP), border_dist)\n\nnames(occ.covs) &lt;- c(\"elev\", \"in_AP\", \"border_dist\")\nstr(occ.covs)\n\n'data.frame':   87 obs. of  3 variables:\n $ elev       : num  703 1155 726 620 1112 ...\n $ in_AP      : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 2 1 1 2 1 ...\n $ border_dist: Units: [m] num  399 1749 5432 1255 17612 ...\n\nCode# pack all\n\n# Package all data into list object\ndata.msom &lt;- list(y = y.msom, \n                  occ.covs = occ.covs, \n                  #det.covs = det.covs, \n                  coords = coords)\n\n#### Inits\nms.inits &lt;- list(alpha.comm = 0, \n                 beta.comm = 0, \n                 beta = 0, \n                 alpha = 0,\n                 tau.sq.beta = 1, \n                 tau.sq.alpha = 1, \n                 z = apply(y.msom, c(1, 2), max, na.rm = TRUE), \n                 sigma.sq = 2, \n                 phi = 3 / mean(dist.hbef), \n                 w = matrix(0, N, dim(y.msom)[2])\n                 )\n\n# priors\n# Minimum value is 0, so need to grab second element.\nmin.dist &lt;- sort(unique(dist.hbef))[2]\nmax.dist &lt;- max(dist.hbef)\nms.priors &lt;- list(beta.comm.normal = list(mean = 0, var = 2.72),\n                  alpha.comm.normal = list(mean = 0, var = 2.72), \n                  tau.sq.beta.ig = list(a = 0.1, b = 0.1), \n                  tau.sq.alpha.ig = list(a = 0.1, b = 0.1),\n                  sigma.sq.ig = list(a = 2, b = 2), \n                  phi.unif = list(a = 3 / max.dist, b = 3 / min.dist))\n\n\n# We next set the parameters controlling the Adaptive MCMC algorithm\nbatch.length &lt;- 25\nn.batch &lt;- 500\nn.burn &lt;- 2000\nn.thin &lt;- 20\nn.chains &lt;- 3\nms.tuning &lt;- list(phi = 0.5)\nn.omp.threads &lt;- 3 # procesadores\n# Values for reporting\nverbose &lt;- TRUE\nn.report &lt;- 1000\n\n\n\nout.msom &lt;- spMsPGOcc(occ.formula = ~ scale(elev) + scale(border_dist) + factor(in_AP), \n                      det.formula = ~1,# ~ scale(day) + I(scale(day)^2) + scale(tod), \n                      data = data.msom,\n                      inits = ms.inits,\n                      n.burn = n.burn,\n                      n.batch = n.batch, \n                      batch.length = batch.length, \n                      accept.rate = 0.43,\n                      priors = ms.priors,\n                      n.omp.threads = n.omp.threads,\n                      n.chains = n.chains,\n                      cov.model = 'exponential', \n                      tuning = ms.tuning, \n                      NNGP = TRUE, \n                      verbose = TRUE,\n                      n.report = n.report,\n                      n.neighbors = 5, \n                      n.thin = n.thin\n                      \n                      ) \n\n----------------------------------------\n    Preparing to run the model\n----------------------------------------\n\n\ndetection covariates (det.covs) not specified in data.\nAssuming interept only detection model.\n\n\n----------------------------------------\n    Building the neighbor list\n----------------------------------------\n----------------------------------------\nBuilding the neighbors of neighbors list\n----------------------------------------\n----------------------------------------\n    Model description\n----------------------------------------\nNNGP Multi-species Occupancy Model with Polya-Gamma latent\nvariable fit with 87 sites and 35 species.\n\nSamples per chain: 12500 (500 batches of length 25)\nBurn-in: 2000 \nThinning Rate: 20 \nNumber of Chains: 3 \nTotal Posterior Samples: 1575 \n\nUsing the exponential spatial correlation model.\n\nUsing 5 nearest neighbors.\n\nSource compiled with OpenMP support and model fit using 3 thread(s).\n\nAdaptive Metropolis with target acceptance rate: 43.0\n----------------------------------------\n    Chain 1\n----------------------------------------\nSampling ... \nBatch: 500 of 500, 100.00%\n----------------------------------------\n    Chain 2\n----------------------------------------\nSampling ... \nBatch: 500 of 500, 100.00%\n----------------------------------------\n    Chain 3\n----------------------------------------\nSampling ... \nBatch: 500 of 500, 100.00%\n\nCodesummary(out.msom, level = 'community')\n\n\nCall:\nspMsPGOcc(occ.formula = ~scale(elev) + scale(border_dist) + factor(in_AP), \n    det.formula = ~1, data = data.msom, inits = ms.inits, priors = ms.priors, \n    tuning = ms.tuning, cov.model = \"exponential\", NNGP = TRUE, \n    n.neighbors = 5, n.batch = n.batch, batch.length = batch.length, \n    accept.rate = 0.43, n.omp.threads = n.omp.threads, verbose = TRUE, \n    n.report = n.report, n.burn = n.burn, n.thin = n.thin, n.chains = n.chains)\n\nSamples per Chain: 12500\nBurn-in: 2000\nThinning Rate: 20\nNumber of Chains: 3\nTotal Posterior Samples: 1575\nRun Time (min): 35.8275\n\n----------------------------------------\n    Community Level\n----------------------------------------\nOccurrence Means (logit scale): \n                      Mean     SD    2.5%     50%  97.5%   Rhat  ESS\n(Intercept)        -1.3478 1.4047 -3.9942 -1.3984 1.5530 1.0066 1064\nscale(elev)        -0.5219 1.6427 -3.8868 -0.5412 2.6766 1.0053 1247\nscale(border_dist)  1.7558 1.5070 -1.2375  1.7897 4.6745 1.0300  257\nfactor(in_AP)1     -0.3494 1.0975 -2.4802 -0.4121 1.8164 1.0804  201\n\nOccurrence Variances (logit scale): \n                        Mean       SD      2.5%       50%     97.5%   Rhat ESS\n(Intercept)         196.1323  88.3239   77.6407  177.9674  421.3906 1.3780  34\nscale(elev)        2234.6922 832.9309 1011.8161 2099.1955 4191.8606 1.3125  43\nscale(border_dist)   50.7356  29.1487   10.6616   45.7375  121.1854 1.0718 160\nfactor(in_AP)1        1.6222   3.2229    0.0547    0.5841    9.1775 1.0074 710\n\nDetection Means (logit scale): \n              Mean     SD   2.5%    50%   97.5%   Rhat ESS\n(Intercept) 9.8136 0.5259 8.8727 9.7736 10.8807 1.3189  22\n\nDetection Variances (logit scale): \n              Mean     SD   2.5%   50%  97.5%   Rhat ESS\n(Intercept) 0.4159 0.4369 0.0395 0.267 1.7283 1.0529  82\n\nCode# Posterior predictive checks\n# Approx. run time: 20 sec\n# ppc.ms.out &lt;- ppcOcc(out.msom, 'chi-squared', group = 1)\n# summary(ppc.ms.out)\n\n# Takes a few seconds to run.\nppc.sp.ms.out &lt;- ppcOcc(out.msom, 'freeman-tukey', group = 2)\n\nCurrently on species 1 out of 35\n\n\nCurrently on species 2 out of 35\n\n\nCurrently on species 3 out of 35\n\n\nCurrently on species 4 out of 35\n\n\nCurrently on species 5 out of 35\n\n\nCurrently on species 6 out of 35\n\n\nCurrently on species 7 out of 35\n\n\nCurrently on species 8 out of 35\n\n\nCurrently on species 9 out of 35\n\n\nCurrently on species 10 out of 35\n\n\nCurrently on species 11 out of 35\n\n\nCurrently on species 12 out of 35\n\n\nCurrently on species 13 out of 35\n\n\nCurrently on species 14 out of 35\n\n\nCurrently on species 15 out of 35\n\n\nCurrently on species 16 out of 35\n\n\nCurrently on species 17 out of 35\n\n\nCurrently on species 18 out of 35\n\n\nCurrently on species 19 out of 35\n\n\nCurrently on species 20 out of 35\n\n\nCurrently on species 21 out of 35\n\n\nCurrently on species 22 out of 35\n\n\nCurrently on species 23 out of 35\n\n\nCurrently on species 24 out of 35\n\n\nCurrently on species 25 out of 35\n\n\nCurrently on species 26 out of 35\n\n\nCurrently on species 27 out of 35\n\n\nCurrently on species 28 out of 35\n\n\nCurrently on species 29 out of 35\n\n\nCurrently on species 30 out of 35\n\n\nCurrently on species 31 out of 35\n\n\nCurrently on species 32 out of 35\n\n\nCurrently on species 33 out of 35\n\n\nCurrently on species 34 out of 35\n\n\nCurrently on species 35 out of 35\n\nCodesummary(ppc.sp.ms.out, level = 'both')\n\n\nCall:\nppcOcc(object = out.msom, fit.stat = \"freeman-tukey\", group = 2)\n\nSamples per Chain: 12500\nBurn-in: 2000\nThinning Rate: 20\nNumber of Chains: 3\nTotal Posterior Samples: 1575\n\n----------------------------------------\n    Community Level\n----------------------------------------\nBayesian p-value:  0.1087 \n\n----------------------------------------\n    Species Level\n----------------------------------------\nBos taurus Bayesian p-value: 0.08\nCabassous unicinctus Bayesian p-value: 0.0844\nCanis familiaris Bayesian p-value: 0.0819\nChamaepetes goudotii Bayesian p-value: 0.0895\nConepatus semistriatus Bayesian p-value: 0.0952\nCuniculus paca Bayesian p-value: 0.0952\nCuniculus taczanowskii Bayesian p-value: 0.1581\nDasyprocta fuliginosa Bayesian p-value: 0.0952\nDasypus novemcinctus Bayesian p-value: 0.0857\nDidlephis pernigra Bayesian p-value: 0.0959\nEira barbara Bayesian p-value: 0.073\nHadrosciurus igniventris Bayesian p-value: 0.0711\nHerpailurus yagouaroundi Bayesian p-value: 0.0698\nHomo sapiens Bayesian p-value: 0.0832\nLeopardus pardalis Bayesian p-value: 0.0851\nLeopardus tigrinus Bayesian p-value: 0.1619\nLeopardus wiedii Bayesian p-value: 0.0895\nMazama murelia Bayesian p-value: 0.0832\nMazama rufina Bayesian p-value: 0.1327\nMazama zamora Bayesian p-value: 0.0889\nNasuella olivacea Bayesian p-value: 0.1568\nNothocrax urumutum Bayesian p-value: 0.0737\nOdocoileus ustus Bayesian p-value: 0.1651\nPanthera onca Bayesian p-value: 0.073\nPecari tajacu Bayesian p-value: 0.0997\nPenelope montagnii Bayesian p-value: 0.0857\nPseudalopex culpaeus Bayesian p-value: 0.1632\nPudu mephistophiles Bayesian p-value: 0.1606\nPuma concolor Bayesian p-value: 0.1619\nSylvilagus andinus Bayesian p-value: 0.1479\nTapirus pinchaque Bayesian p-value: 0.1498\nTayassu pecari Bayesian p-value: 0.0876\nTinamus major Bayesian p-value: 0.0819\nTremarctos ornatus Bayesian p-value: 0.2121\nZentrygon frenata Bayesian p-value: 0.0863\nFit statistic:  freeman-tukey \n\n\n\nCode### plots\n# plot(out.msom, 'alpha', density = FALSE) # Detection parameters.\n# mcmc_intervals(out$alpha.comm.samples)\n# mcmc_intervals(out$alpha.samples)\n\n# plot(out.msom, 'beta', density = TRUE) # Occupancy parameters.\nmcmc_intervals(out.msom$beta.comm.samples)\n\n\n\n\n\n\nCodemcmc_intervals(out.msom$beta.samples)\n\n\n\n\n\n\nCode# occupancy per species\nmcmc_areas(out.msom$beta.samples, \n  pars = c(\"scale(border_dist)-Tapirus pinchaque\", \"scale(border_dist)-Cuniculus paca\", \"scale(border_dist)-Mazama rufina\", \"scale(border_dist)-Puma concolor\", \"scale(border_dist)-Canis familiaris\"))"
  },
  {
    "objectID": "posts/1st_model_1AP/index.html#package-citation",
    "href": "posts/1st_model_1AP/index.html#package-citation",
    "title": "Llanganates",
    "section": "Package Citation",
    "text": "Package Citation\n\nCodepkgs &lt;- cite_packages(output = \"paragraph\", pkgs=\"Session\", out.dir = \".\")\n# knitr::kable(pkgs)\npkgs\n\nWe used R version 4.4.2 (R Core Team 2024) and the following R packages: bayesplot v. 1.11.1 (Gabry et al. 2019; Gabry and Mahr 2024), camtrapR v. 2.3.0 (Niedballa et al. 2016), DT v. 0.33 (Xie, Cheng, and Tan 2024), elevatr v. 0.99.0 (Hollister et al. 2023), maps v. 3.4.2.1 (Richard A. Becker, Ray Brownrigg. Enhancements by Thomas P Minka, and Deckmyn. 2024), mapview v. 2.11.2 (Appelhans et al. 2023), plyr v. 1.8.9 (Wickham 2011), sf v. 1.0.19 (Pebesma 2018; Pebesma and Bivand 2023), spOccupancy v. 0.8.0 (Doser et al. 2022, 2024; Doser, Finley, and Banerjee 2023), terra v. 1.8.21 (Hijmans 2025), tidyverse v. 2.0.0 (Wickham et al. 2019), tmap v. 4.0 (Tennekes 2018)."
  },
  {
    "objectID": "posts/1st_model_1AP/index.html#sesion-info",
    "href": "posts/1st_model_1AP/index.html#sesion-info",
    "title": "Llanganates",
    "section": "Sesion info",
    "text": "Sesion info\n\n\n\n\n\n\nNote\n\n\n\n\n\n\nCodeprint(sessionInfo(), locale = FALSE)\n\nR version 4.4.2 (2024-10-31 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 10 x64 (build 19045)\n\nMatrix products: internal\n\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] plyr_1.8.9        hms_1.1.3         camtrapR_2.3.0    lubridate_1.9.4  \n [5] forcats_1.0.0     stringr_1.5.1     dplyr_1.1.4       purrr_1.0.2      \n [9] readr_2.1.5       tidyr_1.3.1       tibble_3.2.1      ggplot2_3.5.1    \n[13] tidyverse_2.0.0   bayesplot_1.11.1  spOccupancy_0.8.0 elevatr_0.99.0   \n[17] terra_1.8-21      tmap_4.0          maps_3.4.2.1      mapview_2.11.2   \n[21] sf_1.0-19         DT_0.33           readxl_1.4.3      grateful_0.2.10  \n\nloaded via a namespace (and not attached):\n  [1] RColorBrewer_1.1-3      tensorA_0.36.2.1        rstudioapi_0.17.1      \n  [4] jsonlite_1.8.9          wk_0.9.4                magrittr_2.0.3         \n  [7] farver_2.1.2            nloptr_2.1.1            rmarkdown_2.29         \n [10] vctrs_0.6.5             minqa_1.2.8             base64enc_0.1-3        \n [13] RcppNumerical_0.6-0     htmltools_0.5.8.1       leafsync_0.1.0         \n [16] progress_1.2.3          distributional_0.5.0    curl_6.0.0             \n [19] raster_3.6-30           cellranger_1.1.0        s2_1.1.7               \n [22] slippymath_0.3.1        KernSmooth_2.23-24      htmlwidgets_1.6.4      \n [25] stars_0.6-8             uuid_1.2-1              lifecycle_1.0.4        \n [28] iterators_1.0.14        pkgconfig_2.0.3         cols4all_0.8           \n [31] Matrix_1.7-1            R6_2.6.1                fastmap_1.2.0          \n [34] digest_0.6.37           colorspace_2.1-1        leafem_0.2.3           \n [37] crosstalk_1.2.1         labeling_0.4.3          lwgeom_0.2-14          \n [40] progressr_0.15.0        spacesXYZ_1.3-0         timechange_0.3.0       \n [43] httr_1.4.7              abind_1.4-8             mgcv_1.9-1             \n [46] compiler_4.4.2          microbenchmark_1.5.0    proxy_0.4-27           \n [49] withr_3.0.2             doParallel_1.0.17       backports_1.5.0        \n [52] brew_1.0-10             DBI_1.2.3               MASS_7.3-61            \n [55] tmaptools_3.2           leaflet_2.2.2           classInt_0.4-10        \n [58] tools_4.4.2             units_0.8-5             leaflegend_1.2.1       \n [61] glue_1.8.0              satellite_1.0.5         nlme_3.1-166           \n [64] grid_4.4.2              checkmate_2.3.2         reshape2_1.4.4         \n [67] generics_0.1.3          gtable_0.3.6            leaflet.providers_2.0.0\n [70] tzdb_0.4.0              class_7.3-22            data.table_1.16.4      \n [73] sp_2.1-4                RANN_2.6.2              foreach_1.5.2          \n [76] pillar_1.10.1           posterior_1.6.1         splines_4.4.2          \n [79] lattice_0.22-6          tidyselect_1.2.1        knitr_1.49             \n [82] svglite_2.1.3           stats4_4.4.2            xfun_0.49              \n [85] leafpop_0.1.0           stringi_1.8.4           rematch_2.0.0          \n [88] yaml_2.3.10             boot_1.3-31             evaluate_1.0.1         \n [91] codetools_0.2-20        cli_3.6.3               RcppParallel_5.1.9     \n [94] systemfonts_1.1.0       munsell_0.5.1           jquerylib_0.1.4        \n [97] secr_5.1.0              dichromat_2.0-0.1       Rcpp_1.0.13-1          \n[100] spAbundance_0.2.1       coda_0.19-4.1           png_0.1-8              \n[103] XML_3.99-0.17           parallel_4.4.2          prettyunits_1.2.0      \n[106] lme4_1.1-35.5           viridisLite_0.4.2       mvtnorm_1.3-2          \n[109] ggridges_0.5.6          scales_1.3.0            e1071_1.7-16           \n[112] crayon_1.5.3            rlang_1.1.4"
  },
  {
    "objectID": "posts/The-Model/index.html",
    "href": "posts/The-Model/index.html",
    "title": "The problem",
    "section": "",
    "text": "Codelibrary(grateful)\nlibrary(readxl)\nlibrary(DT)\nlibrary(sf)\nlibrary(mapview)\nlibrary(maps)\nlibrary(tmap)\nlibrary(terra)\nlibrary(elevatr)\nlibrary(unmarked)\nlibrary(ubms)\n\nlibrary(tidyverse)\nWe want to Asses the role of Protected Areas in the conservation of vertebrates using on the ground data.\nEvaluating whther PA are working is essential as they are perhaps the primary strategy for averting biodiversity loss. Its been suggested that some do no work, paper parks Its crucial to continue working on best methods to evaluate their impact.\nOver a decade ago researchers started evaluting this. Mostly focused on the effects of PA in reducing threats (fires, deforestation) and focused on forest cover.\nEven if effective in protecting forests, and the forest is in very good conditioon, PA could have “empty forests” and lose biodiversity (hunting, diseases or even their sizes). So when we say a PA is effective, are we looking at this?\nWe want to compare apples with apples and control for covariates related with occurence and abundance of species, like elevation, human pressures, etc.\nOccupancyis a cost effective method for evaluation the a population, a state variable, representing the proportion of the área occupied by the species, considering the problem of imperfect detection\nWe compiled studies that have intentionally sampled inside and outside PAS, in a quasi-experimental design, using standardized methods. Each case is adequatly matched, in a similar fashion as the remote sensing approaches.\nWe used a multispecies occupancy model incorporatind spatial autocorrelation to compare occupancy in and out and also as a distance to the protected area border.\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/The-Model/index.html#package-citation",
    "href": "posts/The-Model/index.html#package-citation",
    "title": "The problem",
    "section": "Package Citation",
    "text": "Package Citation\n\nCodepkgs &lt;- cite_packages(output = \"paragraph\", pkgs=\"Session\", out.dir = \".\")\n# knitr::kable(pkgs)\npkgs\n\nWe used R version 4.4.2 (R Core Team 2024) and the following R packages: DT v. 0.33 (Xie, Cheng, and Tan 2024), elevatr v. 0.99.0 (Hollister et al. 2023), maps v. 3.4.2.1 (Richard A. Becker, Ray Brownrigg. Enhancements by Thomas P Minka, and Deckmyn. 2024), mapview v. 2.11.2 (Appelhans et al. 2023), sf v. 1.0.19 (Pebesma 2018; Pebesma and Bivand 2023), terra v. 1.8.21 (Hijmans 2025), tidyverse v. 2.0.0 (Wickham et al. 2019), tmap v. 4.0 (Tennekes 2018), ubms v. 1.2.7 (Kellner et al. 2021), unmarked v. 1.4.3 (Fiske and Chandler 2011; Kellner et al. 2023)."
  },
  {
    "objectID": "posts/The-Model/index.html#sesion-info",
    "href": "posts/The-Model/index.html#sesion-info",
    "title": "The problem",
    "section": "Sesion info",
    "text": "Sesion info\n\n\n\n\n\n\nNote\n\n\n\n\n\n\nCodeprint(sessionInfo(), locale = FALSE)\n\nR version 4.4.2 (2024-10-31 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 10 x64 (build 19045)\n\nMatrix products: default\n\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] lubridate_1.9.4 forcats_1.0.0   stringr_1.5.1   dplyr_1.1.4    \n [5] purrr_1.0.2     readr_2.1.5     tidyr_1.3.1     tibble_3.2.1   \n [9] ggplot2_3.5.1   tidyverse_2.0.0 ubms_1.2.7      unmarked_1.4.3 \n[13] elevatr_0.99.0  terra_1.8-21    tmap_4.0        maps_3.4.2.1   \n[17] mapview_2.11.2  sf_1.0-19       DT_0.33         readxl_1.4.3   \n[21] grateful_0.2.10\n\nloaded via a namespace (and not attached):\n [1] DBI_1.2.3               pbapply_1.7-2           gridExtra_2.3          \n [4] tmaptools_3.2           s2_1.1.7                inline_0.3.20          \n [7] rlang_1.1.4             magrittr_2.0.3          matrixStats_1.5.0      \n[10] e1071_1.7-16            compiler_4.4.2          loo_2.8.0              \n[13] png_0.1-8               vctrs_0.6.5             pkgconfig_2.0.3        \n[16] wk_0.9.4                fastmap_1.2.0           lwgeom_0.2-14          \n[19] leafem_0.2.3            rmarkdown_2.29          tzdb_0.4.0             \n[22] spacesXYZ_1.3-0         xfun_0.49               satellite_1.0.5        \n[25] jsonlite_1.8.9          parallel_4.4.2          R6_2.6.1               \n[28] stringi_1.8.4           RColorBrewer_1.1-3      StanHeaders_2.32.10    \n[31] cellranger_1.1.0        stars_0.6-8             Rcpp_1.0.13-1          \n[34] rstan_2.32.6            knitr_1.49              base64enc_0.1-3        \n[37] leaflet.providers_2.0.0 timechange_0.3.0        Matrix_1.7-1           \n[40] tidyselect_1.2.1        rstudioapi_0.17.1       dichromat_2.0-0.1      \n[43] abind_1.4-8             yaml_2.3.10             codetools_0.2-20       \n[46] curl_6.0.0              pkgbuild_1.4.5          lattice_0.22-6         \n[49] leafsync_0.1.0          withr_3.0.2             evaluate_1.0.1         \n[52] units_0.8-5             proxy_0.4-27            RcppParallel_5.1.9     \n[55] pillar_1.10.1           KernSmooth_2.23-24      stats4_4.4.2           \n[58] generics_0.1.3          sp_2.1-4                hms_1.1.3              \n[61] rstantools_2.4.0        munsell_0.5.1           scales_1.3.0           \n[64] class_7.3-22            glue_1.8.0              tools_4.4.2            \n[67] leaflegend_1.2.1        data.table_1.16.4       RSpectra_0.16-2        \n[70] XML_3.99-0.17           grid_4.4.2              QuickJSR_1.4.0         \n[73] crosstalk_1.2.1         colorspace_2.1-1        cols4all_0.8           \n[76] raster_3.6-30           cli_3.6.3               viridisLite_0.4.2      \n[79] V8_6.0.0                gtable_0.3.6            digest_0.6.37          \n[82] progressr_0.15.0        classInt_0.4-10         htmlwidgets_1.6.4      \n[85] htmltools_0.5.8.1       lifecycle_1.0.4         leaflet_2.2.2          \n[88] microbenchmark_1.5.0    MASS_7.3-61"
  },
  {
    "objectID": "posts/3rd_model_1AP/index.html",
    "href": "posts/3rd_model_1AP/index.html",
    "title": "Fitting a Multi-Species non Spatial Occupancy Model",
    "section": "",
    "text": "Multi-species occupancy models are a powerful tool for combining information from multiple species to estimate both individual and community-level responses to environmental variables. These models are typically fit using Bayesian frameworks such as BUGS, JAGS, or Nimble. However, preparing the necessary input from camera trapping data, writing the model code, setting parameters to monitor, and providing initial values can be a daunting and time-consuming task, even for experienced users.\ncamtrapR helps using custom funtions to fit community occupancy models for analysis in JAGS or Nimble with several limitations such as: models with categorical observation-level covariates cannot be compiled in Nimble and must be fit in JAGS instead. Priors can not be customized, and independent effects are only supported in continuous site covariates.\nIn terms of speed, Nimble does not seem to have an advantage over JAGS.\n\nCodelibrary(grateful)\nlibrary(readxl)\nlibrary(DT)\nlibrary(sf)\nlibrary(mapview)\nlibrary(maps)\nlibrary(tmap)\nlibrary(terra)\nlibrary(elevatr)\n#library(spOccupancy)\n\nlibrary(rjags) # Bayesian Graphical Models using MCMC \nlibrary(bayesplot) # Plotting for Bayesian Models # Plotting for Bayesian Models\nlibrary(tictoc) # Functions for Timing R Scripts, as Well as Implementations of \"Stack\" and \"StackList\" Structures \nlibrary(beepr) # Easily Play Notification Sounds on any Platform \nlibrary(snowfall) # Easier Cluster Computing (Based on 'snow')\n\n#library(ggmcmc)\nlibrary(camtrapR)\nlibrary(tidyverse)"
  },
  {
    "objectID": "posts/3rd_model_1AP/index.html#multi-species-occupancy-model-using-camtrapr-package",
    "href": "posts/3rd_model_1AP/index.html#multi-species-occupancy-model-using-camtrapr-package",
    "title": "Fitting a Multi-Species non Spatial Occupancy Model",
    "section": "",
    "text": "Multi-species occupancy models are a powerful tool for combining information from multiple species to estimate both individual and community-level responses to environmental variables. These models are typically fit using Bayesian frameworks such as BUGS, JAGS, or Nimble. However, preparing the necessary input from camera trapping data, writing the model code, setting parameters to monitor, and providing initial values can be a daunting and time-consuming task, even for experienced users.\ncamtrapR helps using custom funtions to fit community occupancy models for analysis in JAGS or Nimble with several limitations such as: models with categorical observation-level covariates cannot be compiled in Nimble and must be fit in JAGS instead. Priors can not be customized, and independent effects are only supported in continuous site covariates.\nIn terms of speed, Nimble does not seem to have an advantage over JAGS.\n\nCodelibrary(grateful)\nlibrary(readxl)\nlibrary(DT)\nlibrary(sf)\nlibrary(mapview)\nlibrary(maps)\nlibrary(tmap)\nlibrary(terra)\nlibrary(elevatr)\n#library(spOccupancy)\n\nlibrary(rjags) # Bayesian Graphical Models using MCMC \nlibrary(bayesplot) # Plotting for Bayesian Models # Plotting for Bayesian Models\nlibrary(tictoc) # Functions for Timing R Scripts, as Well as Implementations of \"Stack\" and \"StackList\" Structures \nlibrary(beepr) # Easily Play Notification Sounds on any Platform \nlibrary(snowfall) # Easier Cluster Computing (Based on 'snow')\n\n#library(ggmcmc)\nlibrary(camtrapR)\nlibrary(tidyverse)"
  },
  {
    "objectID": "posts/3rd_model_1AP/index.html#fitting-a-multi-species-non-spatial-occupancy-model",
    "href": "posts/3rd_model_1AP/index.html#fitting-a-multi-species-non-spatial-occupancy-model",
    "title": "Fitting a Multi-Species non Spatial Occupancy Model",
    "section": "Fitting a Multi-Species non Spatial Occupancy Model",
    "text": "Fitting a Multi-Species non Spatial Occupancy Model\nYasuni data\nHere we use the tables Ecu-14, Ecu-15 y Ecu-16.\n\nCodesource(\"C:/CodigoR/WCS-CameraTrap/R/organiza_datos_v3.R\")\n\nAP_Yasuni &lt;- read_sf(\"C:/CodigoR/Occu_APs/shp/Yasuni/WDPA_WDOECM_May2025_Public_186_shp-polygons.shp\")\n\n### Ecu 17, Ecu 18, ECU 20, Ecu 22  \n\n# load data and make array_locID column\nEcu_13 &lt;- loadproject(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-013.xlsx\") |&gt; mutate(array_locID=paste(\"Ecu_14\", locationID, sep=\"_\"))\n\n28 cameras in Cameras. \n 28 cameras in Deployment. \n 28 deployments in Deployment. \n 28 points in Deployment. \n 28 cameras in Images. \n 28 points in Images. \n\n\nJoining with `by = join_by(Camera_Id)`\n\n\n[1] \"dates ok\"\nyear: 2015 \n Jaguar_Design: no \n\nCodeEcu_17 &lt;- loadproject(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-017.xlsx\") |&gt; mutate(array_locID=paste(\"Ecu_14\", locationID, sep=\"_\"))\n\n30 cameras in Cameras. \n 30 cameras in Deployment. \n 30 deployments in Deployment. \n 30 points in Deployment. \n 30 cameras in Images. \n 30 points in Images. \n\n\nJoining with `by = join_by(Camera_Id)`\n\n\n[1] \"dates ok\"\nyear: 2015 \n Jaguar_Design: no \n\nCodeEcu_18 &lt;- loadproject(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-018.xlsx\")|&gt; mutate(array_locID=paste(\"Ecu_16\", locationID, sep=\"_\"))\n\n30 cameras in Cameras. \n 30 cameras in Deployment. \n 30 deployments in Deployment. \n 30 points in Deployment. \n 30 cameras in Images. \n 30 points in Images. \n\n\nJoining with `by = join_by(Camera_Id)`\n\n\n[1] \"dates ok\"\nyear: 2016 \n Jaguar_Design: no \n\nCodeEcu_20 &lt;- loadproject(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-020_Fix.xlsx\")|&gt; mutate(array_locID=paste(\"Ecu_15\", locationID, sep=\"_\"))\n\n30 cameras in Cameras. \n 25 cameras in Deployment. \n 25 deployments in Deployment. \n 25 points in Deployment. \n 25 cameras in Images. \n 25 points in Images. \n\n\nJoining with `by = join_by(Camera_Id)`\n\n\n[1] \"dates ok\"\nyear: 2018 \n Jaguar_Design: no \n\nCodeEcu_21 &lt;- loadproject(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-021.xlsx\") |&gt; mutate(array_locID=paste(\"Ecu_14\", locationID, sep=\"_\"))\n\n30 cameras in Cameras. \n 30 cameras in Deployment. \n 30 deployments in Deployment. \n 30 points in Deployment. \n 30 cameras in Images. \n 30 points in Images. \n\n\nJoining with `by = join_by(Camera_Id)`\n\n\n[1] \"dates ok\"\nyear: 2018 \n Jaguar_Design: no \n\nCodeEcu_22 &lt;- loadproject(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-022.xlsx\")|&gt; mutate(array_locID=paste(\"Ecu_16\", locationID, sep=\"_\"))\n\nWarning: Expecting numeric in O5508 / R5508C15: got 'NA'\n\n\nWarning: Expecting numeric in O5509 / R5509C15: got 'NA'\n\n\nWarning: Expecting numeric in O5510 / R5510C15: got 'NA'\n\n\nWarning: Expecting numeric in O5511 / R5511C15: got 'NA'\n\n\nWarning: Expecting numeric in O5512 / R5512C15: got 'NA'\n\n\n30 cameras in Cameras. \n 30 cameras in Deployment. \n 30 deployments in Deployment. \n 30 points in Deployment. \n 30 cameras in Images. \n 30 points in Images. \n\n\nJoining with `by = join_by(Camera_Id)`\n\n\n[1] \"dates ok\"\nyear: 2018 \n Jaguar_Design: no \n\nCode# get sites\nEcu_13_sites &lt;- get.sites(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-013.xlsx\")\n\nJoining with `by = join_by(Camera_Id)`\nJoining with `by = join_by(Point)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType, Deployment_ID, start_date, end_date,\n`Bait Type`, `Feature Type`, `Feature Type methodology`, Camera_Id, `Quiet\nPeriod Setting`, `Restriction on Access`, `Camera Failure Details`, `Project\nId`, Make, Model, `Serial Number`, Year_Purchased)`\n\nCodeEcu_17_sites &lt;- get.sites(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-017.xlsx\")\n\nJoining with `by = join_by(Camera_Id)`\nJoining with `by = join_by(Point)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType, Deployment_ID, start_date, end_date,\n`Bait Type`, `Feature Type`, `Feature Type methodology`, Camera_Id, `Quiet\nPeriod Setting`, `Restriction on Access`, `Camera Failure Details`, `Project\nId`, Make, Model, `Serial Number`, Year_Purchased)`\n\nCodeEcu_18_sites &lt;- get.sites(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-018.xlsx\")\n\nJoining with `by = join_by(Camera_Id)`\nJoining with `by = join_by(Point)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType, Deployment_ID, start_date, end_date,\n`Bait Type`, `Feature Type`, `Feature Type methodology`, Camera_Id, `Quiet\nPeriod Setting`, `Restriction on Access`, `Camera Failure Details`, `Project\nId`, Make, Model, `Serial Number`, Year_Purchased)`\n\nCodeEcu_20_sites &lt;- get.sites(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-020_Fix.xlsx\")\n\nJoining with `by = join_by(Camera_Id)`\nJoining with `by = join_by(Point)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType, Deployment_ID, start_date, end_date,\n`Bait Type`, `Feature Type`, `Feature Type methodology`, Camera_Id, `Quiet\nPeriod Setting`, `Restriction on Access`, `Camera Failure Details`, `Project\nId`, Make, Model, `Serial Number`, Year_Purchased)`\n\nCodeEcu_21_sites &lt;- get.sites(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-021.xlsx\")\n\nJoining with `by = join_by(Camera_Id)`\nJoining with `by = join_by(Point)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType, Deployment_ID, start_date, end_date,\n`Bait Type`, `Feature Type`, `Feature Type methodology`, Camera_Id, `Quiet\nPeriod Setting`, `Restriction on Access`, `Camera Failure Details`, `Project\nId`, Make, Model, `Serial Number`, Year_Purchased)`\n\nCodeEcu_22_sites &lt;- get.sites(\"F:/WCS-CameraTrap/data/BDcorregidas/Ecuador/ECU-022.xlsx\")\n\nJoining with `by = join_by(Camera_Id)`\nJoining with `by = join_by(Point)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType)`\nJoining with `by = join_by(Point, Longitude, Latitude, bait, season, rio_playa,\narroyo, camino, senda_animal, senda_gente, salitral, pozo_agua, bosque, sabana,\nintermedio, intervalo_trigger, CamType, Deployment_ID, start_date, end_date,\n`Bait Type`, `Feature Type`, `Feature Type methodology`, Camera_Id, `Quiet\nPeriod Setting`, `Restriction on Access`, `Camera Failure Details`, `Project\nId`, Make, Model, `Serial Number`, Year_Purchased)`\n\nCode# get elevation map\nelevation_17 &lt;- rast(get_elev_raster(Ecu_17_sites, z = 7)) #z =1-14\n\nMosaicing & Projecting\nNote: Elevation units are in meters.\n\nCodebb &lt;-  st_as_sfc(st_bbox(elevation_17)) # make bounding box \n\n\n\n\n# extract covs using points and add to _sites\ncovs_Ecu_13_sites &lt;- cbind(Ecu_13_sites, terra::extract(elevation_17, Ecu_13_sites))\ncovs_Ecu_17_sites &lt;- cbind(Ecu_17_sites, terra::extract(elevation_17, Ecu_17_sites))\ncovs_Ecu_18_sites &lt;- cbind(Ecu_18_sites, terra::extract(elevation_17, Ecu_18_sites))\ncovs_Ecu_20_sites &lt;- cbind(Ecu_20_sites, terra::extract(elevation_17, Ecu_20_sites))\ncovs_Ecu_21_sites &lt;- cbind(Ecu_21_sites, terra::extract(elevation_17, Ecu_21_sites))\ncovs_Ecu_22_sites &lt;- cbind(Ecu_22_sites, terra::extract(elevation_17, Ecu_22_sites))\n\n# get which are in and out\ncovs_Ecu_13_sites$in_AP = st_intersects(covs_Ecu_13_sites, AP_Yasuni, sparse = FALSE)\ncovs_Ecu_17_sites$in_AP = st_intersects(covs_Ecu_17_sites, AP_Yasuni, sparse = FALSE)\ncovs_Ecu_18_sites$in_AP = st_intersects(covs_Ecu_18_sites, AP_Yasuni, sparse = FALSE)\ncovs_Ecu_20_sites$in_AP = st_intersects(covs_Ecu_20_sites, AP_Yasuni, sparse = FALSE)\ncovs_Ecu_21_sites$in_AP = st_intersects(covs_Ecu_21_sites, AP_Yasuni, sparse = FALSE)\ncovs_Ecu_22_sites$in_AP = st_intersects(covs_Ecu_22_sites, AP_Yasuni, sparse = FALSE)\n\n# covs_Ecu_16_sites$in_AP = st_intersects(covs_Ecu_16_sites, AP_Llanganates, sparse = FALSE)\n\n\n\n# make a map\nmapview (elevation_17, alpha=0.5) + \n  mapview (AP_Yasuni, color = \"green\", col.regions = \"green\", alpha = 0.5) +\n  mapview (covs_Ecu_13_sites, zcol = \"in_AP\", col.regions =c(\"red\",\"blue\"), burst = TRUE) +\n  mapview (covs_Ecu_17_sites, zcol = \"in_AP\", col.regions =c(\"red\",\"blue\"), burst = TRUE) +\n  mapview (covs_Ecu_18_sites, zcol = \"in_AP\", col.regions =c(\"red\",\"blue\"), burst = TRUE) +\n  mapview (covs_Ecu_20_sites, zcol = \"in_AP\", col.regions =c(\"red\",\"blue\"), burst = TRUE) +\n  mapview (covs_Ecu_21_sites, zcol = \"in_AP\", col.regions =c(\"red\",\"blue\"), burst = TRUE) +\n  mapview (covs_Ecu_22_sites, zcol = \"in_AP\", burst = TRUE, col.regions = c(\"blue\") ) #+\n\n\n\n\nCode  # mapview (covs_Ecu_16_sites, zcol = \"in_AP\", burst = TRUE, col.regions =c(\"red\",\"blue\")) \n\n\nCamera trap operation data and detection history\n\nCode# Join 3 tables\n# fix count in ECU 18, 20,\nEcu_18$Count &lt;- as.numeric(Ecu_18$Count)\n\nWarning: NAs introducidos por coerción\n\nCodeEcu_20$Count &lt;- as.numeric(Ecu_20$Count)\n\n\nEcu_full &lt;- Ecu_13 |&gt; full_join(Ecu_17) |&gt; \n                      full_join(Ecu_18) |&gt; \n                      full_join(Ecu_20) |&gt; \n                      full_join(Ecu_21) |&gt; \n                      full_join(Ecu_22)\n\nJoining with `by = join_by(`Project Id`, Camera_Id, Make, Model, `Serial\nNumber`, Year_Purchased, Deployment_ID, Point.x, Longitude, Latitude,\nstart_date, end_date, `Bait Type`, `Bait Description`, `Feature Type`, `Feature\nType methodology`, `Camera Type`, `Quiet Period Setting`, `Restriction on\nAccess`, `Camera Failure Details`, season, rio_playa, arroyo, camino,\nsenda_animal, senda_gente, salitral, pozo_agua, bosque, sabana, intermedio,\nintervalo_trigger, locationID, `Image Id`, `Photo Type`, `Photo Type Identified\nby`, Point.y, scientificName, Date_Time_Captured, `Independent event`, Age,\nSex, `Individual ID`, Count, Jaguar_Design, year, array_locID)`\nJoining with `by = join_by(`Project Id`, Camera_Id, Make, Model, `Serial\nNumber`, Year_Purchased, Deployment_ID, Point.x, Longitude, Latitude,\nstart_date, end_date, `Bait Type`, `Bait Description`, `Feature Type`, `Feature\nType methodology`, `Camera Type`, `Quiet Period Setting`, `Restriction on\nAccess`, `Camera Failure Details`, season, rio_playa, arroyo, camino,\nsenda_animal, senda_gente, salitral, pozo_agua, bosque, sabana, intermedio,\nintervalo_trigger, locationID, `Image Id`, `Photo Type`, `Photo Type Identified\nby`, Point.y, scientificName, Date_Time_Captured, `Independent event`, Age,\nSex, `Individual ID`, Count, Jaguar_Design, year, array_locID)`\nJoining with `by = join_by(`Project Id`, Camera_Id, Make, Model, `Serial\nNumber`, Year_Purchased, Deployment_ID, Point.x, Longitude, Latitude,\nstart_date, end_date, `Bait Type`, `Bait Description`, `Feature Type`, `Feature\nType methodology`, `Camera Type`, `Quiet Period Setting`, `Restriction on\nAccess`, `Camera Failure Details`, season, rio_playa, arroyo, camino,\nsenda_animal, senda_gente, salitral, pozo_agua, bosque, sabana, intermedio,\nintervalo_trigger, locationID, `Image Id`, `Photo Type`, `Photo Type Identified\nby`, Point.y, scientificName, Date_Time_Captured, `Independent event`, Age,\nSex, `Individual ID`, Count, Jaguar_Design, year, array_locID)`\nJoining with `by = join_by(`Project Id`, Camera_Id, Make, Model, `Serial\nNumber`, Year_Purchased, Deployment_ID, Point.x, Longitude, Latitude,\nstart_date, end_date, `Bait Type`, `Bait Description`, `Feature Type`, `Feature\nType methodology`, `Camera Type`, `Quiet Period Setting`, `Restriction on\nAccess`, `Camera Failure Details`, season, rio_playa, arroyo, camino,\nsenda_animal, senda_gente, salitral, pozo_agua, bosque, sabana, intermedio,\nintervalo_trigger, locationID, `Image Id`, `Photo Type`, `Photo Type Identified\nby`, Point.y, scientificName, Date_Time_Captured, `Independent event`, Age,\nSex, `Individual ID`, Count, Jaguar_Design, year, array_locID)`\nJoining with `by = join_by(`Project Id`, Camera_Id, Make, Model, `Serial\nNumber`, Year_Purchased, Deployment_ID, Point.x, Longitude, Latitude,\nstart_date, end_date, `Bait Type`, `Bait Description`, `Feature Type`, `Feature\nType methodology`, `Camera Type`, `Quiet Period Setting`, `Restriction on\nAccess`, `Camera Failure Details`, season, rio_playa, arroyo, camino,\nsenda_animal, senda_gente, salitral, pozo_agua, bosque, sabana, intermedio,\nintervalo_trigger, locationID, `Image Id`, `Photo Type`, `Photo Type Identified\nby`, Point.y, scientificName, Date_Time_Captured, `Independent event`, Age,\nSex, `Individual ID`, Count, Jaguar_Design, year, array_locID)`\n\nCode# fix date format\n# \nEcu_full$start_date &lt;- as.Date(Ecu_full$start_date, \"%Y/%m/%d\")\nEcu_full$end_date &lt;- as.Date(Ecu_full$end_date, \"%Y/%m/%d\")\nEcu_full$eventDate &lt;- as.Date(Ecu_full$Date_Time_Captured, \"%Y-%m-%d\")\n\nWarning in as.POSIXlt.POSIXct(x, tz = tz): unknown timezone '%Y-%m-%d'\n\nCodeEcu_full$eventDateTime &lt;- ymd_hms(Ecu_full$Date_Time_Captured)\n\nWarning: 3 failed to parse.\n\nCode# filter 2021 and make uniques\nCToperation  &lt;- Ecu_full |&gt; group_by(Camera_Id) |&gt; #(array_locID) |&gt; \n                           mutate(minStart=start_date, maxEnd=end_date) |&gt; distinct(Longitude, Latitude, minStart, maxEnd) |&gt; ungroup()\n\n\n# Generamos la matríz de operación de las cámaras\n\ncamop &lt;- cameraOperation(CTtable= CToperation, # Tabla de operación\n                         stationCol= \"Camera_Id\", # Columna que define la estación\n                         setupCol= \"minStart\", #Columna fecha de colocación\n                         retrievalCol= \"maxEnd\", #Columna fecha de retiro\n                         #hasProblems= T, # Hubo fallos de cámaras\n                         dateFormat= \"%Y-%m-%d\")#, #, # Formato de las fechas\n                         #cameraCol=\"Camera_Id\")\n                         # sessionCol= \"Year\")\n\n# Generar las historias de detección ---------------------------------------\n## remove plroblem species\nind &lt;- which(Ecu_full$scientificName==\"set up\")\nEcu_full &lt;- Ecu_full[-ind,]\n\nind &lt;- which(Ecu_full$scientificName==\"Set up\")\nEcu_full &lt;- Ecu_full[-ind,]\n\nind &lt;- which(Ecu_full$scientificName==\"Blank\")\nEcu_full &lt;- Ecu_full[-ind,]\n\nind &lt;- which(Ecu_full$scientificName==\"Unidentifiable\")\nEcu_full &lt;- Ecu_full[-ind,]\n\n\n\n\n\nDetHist_list &lt;- lapply(unique(Ecu_full$scientificName), FUN = function(x) {\n  detectionHistory(\n    recordTable         = Ecu_full, # Tabla de registros\n    camOp                = camop, # Matriz de operación de cámaras\n    stationCol           = \"Camera_Id\",\n    speciesCol           = \"scientificName\",\n    recordDateTimeCol    = \"eventDateTime\",\n    recordDateTimeFormat  = \"%Y-%m-%d %H:%M:%S\",\n    species              = x,     # la función reemplaza x por cada una de las especies\n    occasionLength       = 7, # Colapso de las historias a 10 ías\n    day1                 = \"station\", # \"survey\" a specific date, \"station\", #inicie en la fecha de cada survey\n    datesAsOccasionNames = FALSE,\n    includeEffort        = TRUE,\n    scaleEffort          = TRUE,\n    #unmarkedMultFrameInput=TRUE\n    timeZone             = \"America/Bogota\" \n    )\n  }\n)\n\nWarning: \nAt 1 stations there were records after camera operation date range:  ECU-021-C0038\n\n\nWarning: \n\n15 records (out of 2694) were removed because they were taken after the end of the last occasion, e.g.:\nECU-021-C0038: 2018-05-29 20:37:47\nECU-021-C0038: 2018-05-29 20:37:48\nECU-021-C0038: 2018-05-29 20:37:49\nECU-021-C0038: 2018-05-29 20:37:50\nECU-021-C0038: 2018-05-29 20:37:51\nECU-021-C0038: 2018-05-29 20:38:52\n\n\nWarning: \nAt 1 stations there were records after camera operation date range:  ECU-021-C0038\n\n\nWarning: \n\n15 records (out of 2643) were removed because they were taken after the end of the last occasion, e.g.:\nECU-021-C0038: 2018-05-31 12:07:50\nECU-021-C0038: 2018-05-31 12:07:51\nECU-021-C0038: 2018-05-31 12:07:52\nECU-021-C0038: 2018-05-31 12:07:53\nECU-021-C0038: 2018-05-31 12:07:54\nECU-021-C0038: 2018-06-10 16:18:45\n\nCode# names\nnames(DetHist_list) &lt;- unique(Ecu_full$scientificName)\n\n# Finalmente creamos una lista nueva donde estén solo las historias de detección\nylist &lt;- lapply(DetHist_list, FUN = function(x) x$detection_history)\n# otra lista con effort scaled\nefort &lt;- lapply(DetHist_list, FUN = function(x) x$effort)\n\n# number of observetions per sp, collapsed to 7 days\nlapply(ylist, sum, na.rm = TRUE)\n\n$`Mazama zamora`\n[1] 226\n\n$`Dasypus novemcinctus`\n[1] 35\n\n$`Cuniculus paca`\n[1] 194\n\n$`Homo sapiens`\n[1] 39\n\n$`Mazama murelia`\n[1] 47\n\n$`Puma concolor`\n[1] 52\n\n$`Pecari tajacu`\n[1] 191\n\n$`Tapirus terrestris`\n[1] 151\n\n$`Penelope jacquacu`\n[1] 11\n\n$`Dasyprocta fuliginosa`\n[1] 204\n\n$`Tinamus sp`\n[1] 1\n\n$`Herpailurus yagouaroundi`\n[1] 5\n\n$`Canis familiaris`\n[1] 8\n\n$`Priodontes maximus`\n[1] 15\n\n$`Tayassu pecari`\n[1] 76\n\n$`Tamandua tetradactyla`\n[1] 4\n\n$`Leopardus pardalis`\n[1] 36\n\n$`Dasypus pastasae`\n[1] 4\n\n$`Eira barbara`\n[1] 8\n\n$`Geotrygon montana`\n[1] 3\n\n$`Nothocrax urumutum`\n[1] 17\n\n$`Speothos venaticus`\n[1] 1\n\n$`Myrmecophaga tridactyla`\n[1] 14\n\n$`Mitu salvini`\n[1] 7\n\n$`Psophia crepitans`\n[1] 83\n\n$`Leopardus wiedii`\n[1] 6\n\n$`Atelocynus microtis`\n[1] 6\n\n$`Tinamus major`\n[1] 13\n\n$`Leptotila verreauxi`\n[1] 1\n\n$`Procyon cancrivorus`\n[1] 12\n\n$`Aramus guarauna`\n[1] 1\n\n$`Panthera onca`\n[1] 29\n\n$`Myoprocta pratti`\n[1] 27\n\n$`Metachirus nudicaudatus`\n[1] 2\n\n$`Nasua nasua`\n[1] 3\n\n$`Coendou sp`\n[1] 1\n\n$`Hadrosciurus sp`\n[1] 4\n\n$`Crypturellus variegatus`\n[1] 2\n\n$`Hadrosciurus igniventris`\n[1] 2\n\n$`Dasypus sp`\n[1] 58\n\n$`Proechimys sp`\n[1] 1\n\n$`Cebus yuracus`\n[1] 2\n\n$`Tigrisoma lineatum`\n[1] 1\n\n$`Didelphis sp`\n[1] 2\n\n$`Coendou prehensilis`\n[1] 2\n\n$`Buteogallus urubitinga`\n[1] 1\n\n$`Leopardus tigrinus`\n[1] 4\n\n$`Morphnus guianensis`\n[1] 2\n\n$`Galictis vittata`\n[1] 1\n\n$`Philander andersoni`\n[1] 1\n\n$`Ramphastos sp`\n[1] 1\n\n\nArrange spatial covariates\n\nCode# make sf()\nEcu_full_sf &lt;- CToperation |&gt; \n    st_as_sf(coords = c(\"Longitude\", \"Latitude\"), \n              crs = 4326)\n\n# extract elev\nEcu_full_sf$elev &lt;- terra::extract(elevation_17, Ecu_full_sf)[,2]\nstr(Ecu_full_sf$elev)\n\n num [1:172] 457 410 518 495 444 410 621 491 422 444 ...\n\nCode# extract in AP\nEcu_full_sf$in_AP = as.factor(st_intersects(Ecu_full_sf, AP_Yasuni, sparse = FALSE))\n\nin_AP &lt;- as.numeric(as.vector(st_drop_geometry(Ecu_full_sf$in_AP)))\n\nWarning: NAs introducidos por coerción\n\nCode# mapview(full_sites_14_15_16_sf, zcol = \"in_AP\", burst = TRUE)\n\n# Transform coord to UTM Z17 Ecuador EPSG:32717 WGS 84 / UTM zone 17S\nEcu_full_sf_UTM &lt;- st_transform(Ecu_full_sf, \"EPSG:32717\")\n\ncoords &lt;- st_coordinates(Ecu_full_sf_UTM)\n#str(coords)\n\n# make Ecu_14_15_16 an sf object\n#    cam_sf &lt;- st_as_sf(Ecu_14_15_16, coords = c(\"lon\",\"lat\"))   #crs=\"EPSG:4326\")\n    #--- set CRS ---#\n#    st_crs(cam_sf) &lt;- 4326\n\n#transform llanganates to UTM\nAP_Yasuni_UTM &lt;- st_transform(AP_Yasuni, \"EPSG:32717\")\n# Convert to LINESTRING\nAP_Yasuni_UTM_line &lt;- st_cast(AP_Yasuni_UTM, \"LINESTRING\")\n\nWarning in st_cast.sf(AP_Yasuni_UTM, \"LINESTRING\"): repeating attributes for\nall sub-geometries for which they may not be constant\n\nCode# Calculate the distance\n#multiplic &lt;- full_sites_14_15_16_sf_UTM |&gt; mutate(multiplic= as.numeric(in_AP)) \nmultiplic=ifelse(Ecu_full_sf_UTM$in_AP==\"TRUE\",-1,1)\nEcu_full_sf_UTM$border_dist &lt;- as.numeric(st_distance(Ecu_full_sf_UTM, AP_Yasuni_UTM_line) * multiplic )\n# print(border_dist)\n\nhist(Ecu_full_sf_UTM$border_dist)\n\n\n\n\n\n\n\nPrepare the model\n\nCode# Detection-nondetection data ---------\n# Species of interest, can select individually\n# curr.sp &lt;- sort(unique(Ecu_14_15_16$.id))# c('BAWW', 'BLJA', 'GCFL')\nselected.sp &lt;-  c(\"Atelocynus microtis\",\n              \"Canis familiaris\", \n              \"Cuniculus paca\",\n              \"Dasypus novemcinctus\" ,\n              \"Dasyprocta fuliginosa\",\n              \"Eira barbara\",\n              \"Galictis vittata\",\n              \"Herpailurus yagouaroundi\",\n              \"Leopardus pardalis\",\n              \"Mazama murelia\",\n              \"Mazama zamora\",\n              \"Myrmecophaga tridactyla\",\n              \"Nasua nasua\",\n              \"Panthera onca\",\n              \"Pecari tajacu\",\n              \"Priodontes maximus\",\n              \"Procyon cancrivorus\",\n              \"Puma concolor\",\n              \"Speothos venaticus\",\n              \"Tamandua tetradactyla\",\n              \"Tapirus terrestris\",\n              \"Tayassu pecari\"\n              )\n\n# y.msom &lt;- y[which(sp.codes %in% selected.sp), , ]\n# str(y.msom)\n\n# Use selection\ny.msom &lt;- ylist[selected.sp]   \n\n#### site covs\nsitecovs &lt;- as.data.frame(st_drop_geometry(\n                    Ecu_full_sf_UTM[,5:7]))\n sitecovs[, 1] &lt;- as.vector(scale(sitecovs[,1]))   # scale numeric covariates\n sitecovs[, 3] &lt;- as.vector(scale(sitecovs[,3]))   # scale numeric covariates\n # sitecovs$fact &lt;- factor(c(\"A\", \"A\", \"B\"))    # categorical covariate\n\nnames(sitecovs) &lt;- c(\"elev\", \"in_AP\", \"border_dist\")\n\n# check consistancy equal number of spatial covariates and rows in data\n# identical(nrow(ylist[[1]]), nrow(covars)) \n\n# Base de datos para los análisis -----------------------------------------\n\ndata_list &lt;- list(ylist    = ylist, # Historias de detección\n                  siteCovs = sitecovs, #covars, # Covariables de sitio\n                  obsCovs  = list(effort = DetHist_list[[1]]$effort))  # agregamos el esfuerzo de muestreo como covariable de observación\n\n# 3. 1 Modelo multi-especie  -----------------------------------------\n\n# Se creará un txt temporal donde estarán las especificaciones del modelo Bayesiano en JAGS\nmodelfile &lt;- (fileext = \"modoccu.txt\")\n\n# Usaremos la función ` communityModel`\n\n# Generemos el modelo\ncomu_model &lt;- communityModel(data_list, # la lista de datos\n                             occuCovs = list(ranef=c(\"border_dist\", \"elev\", \"in_AP\")), # ranef La covariables de sitio\n                             detCovsObservation = list(fixed = \"effort\"), #Covariables de observación\n                             intercepts = list(det = \"ranef\", occu = \"ranef\"),\n                             # augmentation = c(full = 30),# Número aumentado de especies\n                             modelFile = \"modelfile\")\n\nWrote model to modelfile\n\nCodesummary(comu_model)\n\ncommOccu object for community occupancy model (in JAGS)\n\n51 species,  172 stations,  7 occasions\n984 occasions with effort\nNumber of detections (by species): 1 - 226 \n\nAvailable site covariates:\n elev, in_AP, border_dist \n\nUsed site covariates:\n elev, in_AP, border_dist \n\nAvailable site-occasion covariates:\n effort \n\n\nRunning the model\n\nCode# Running the model\n\nfit.commu &lt;- fit(comu_model,\n                 n.iter = 10000,\n                 n.burnin = 1000,\n                 thin = 50,\n                 chains = 3,\n                 cores = 3,\n                 quiet = T\n);beep(sound = 4)\n\nNOTE: Stopping adaptation\n\nCode# save the results to not run again\nsave(fit.commu, file=\"C:/CodigoR/Occu_APs/Occu_APs_blog/posts/3rd_model_1AP/result/DR_result.R\") # guardamos los resultados para no correr de nuevo\n\nsummary(fit.commu)\n\n\nIterations = 1050:10000\nThinning interval = 50 \nNumber of chains = 3 \nSample size per chain = 180 \n\n1. Empirical mean and standard deviation for each variable,\n   plus standard error of the mean:\n\n                                      Mean      SD Naive SE Time-series SE\nNspecies                          51.00000 0.00000 0.000000       0.000000\nNspecies_station[1]                6.01667 1.41608 0.060938       0.060612\nNspecies_station[2]                5.81111 1.75954 0.075719       0.090678\nNspecies_station[3]                4.35926 1.60606 0.069114       0.081603\nNspecies_station[4]                4.35000 1.59129 0.068478       0.072551\nNspecies_station[5]                4.08333 1.45639 0.062673       0.068391\nNspecies_station[6]                8.39815 1.80568 0.077704       0.094152\nNspecies_station[7]                5.88333 1.72704 0.074320       0.085430\nNspecies_station[8]                8.92407 1.40493 0.060458       0.074836\nNspecies_station[9]                4.07593 1.42460 0.061305       0.066673\nNspecies_station[10]               5.19259 1.48709 0.063994       0.078027\nNspecies_station[11]               5.92778 1.63575 0.070391       0.080189\nNspecies_station[12]               5.20370 1.48686 0.063984       0.067994\nNspecies_station[13]               4.90926 1.74143 0.074939       0.103333\nNspecies_station[14]               6.90926 1.72859 0.074387       0.089496\nNspecies_station[15]               7.20185 1.45877 0.062775       0.065263\nNspecies_station[16]              10.26296 1.96663 0.084630       0.119273\nNspecies_station[17]               7.13704 1.85657 0.079894       0.088856\nNspecies_station[18]               5.35185 1.55132 0.066758       0.069766\nNspecies_station[19]               5.87407 2.04015 0.087794       0.111616\nNspecies_station[20]               9.37593 1.92854 0.082991       0.109129\nNspecies_station[21]              11.90556 1.66051 0.071457       0.079074\nNspecies_station[22]               8.58889 1.62354 0.069866       0.084800\nNspecies_station[23]               4.07778 1.43423 0.061719       0.062110\nNspecies_station[24]               5.51111 1.51488 0.065190       0.070948\nNspecies_station[25]               3.63704 1.62817 0.070065       0.075973\nNspecies_station[26]               7.43704 1.51239 0.065083       0.065079\nNspecies_station[27]              10.23704 1.80787 0.077798       0.107683\nNspecies_station[28]               3.26852 1.52168 0.065483       0.065476\nNspecies_station[29]               9.29630 2.39224 0.102946       0.114328\nNspecies_station[30]               9.47222 2.46632 0.106133       0.106658\nNspecies_station[31]               8.96481 2.52569 0.108688       0.108636\nNspecies_station[32]              12.80741 2.51008 0.108017       0.145221\nNspecies_station[33]              10.43519 2.64706 0.113911       0.109460\nNspecies_station[34]              10.65741 2.49958 0.107565       0.130519\nNspecies_station[35]              14.28148 2.11857 0.091169       0.131085\nNspecies_station[36]               9.96852 2.21752 0.095427       0.103888\nNspecies_station[37]              12.63148 2.33457 0.100464       0.118224\nNspecies_station[38]              12.06296 2.20888 0.095055       0.099414\nNspecies_station[39]               9.66296 2.48806 0.107069       0.133486\nNspecies_station[40]               8.94444 2.62439 0.112936       0.125034\nNspecies_station[41]              11.32037 2.45538 0.105663       0.138120\nNspecies_station[42]              11.33519 2.43671 0.104859       0.114343\nNspecies_station[43]              13.64259 2.28897 0.098501       0.120946\nNspecies_station[44]              11.78519 2.21191 0.095185       0.116366\nNspecies_station[45]               9.56111 2.49860 0.107523       0.144356\nNspecies_station[46]               9.58333 2.49796 0.107495       0.130641\nNspecies_station[47]              11.34074 2.33522 0.100492       0.113951\nNspecies_station[48]              11.28519 2.46838 0.106222       0.134181\nNspecies_station[49]              14.30556 2.10600 0.090628       0.113805\nNspecies_station[50]               9.02593 2.46069 0.105891       0.120468\nNspecies_station[51]               9.12593 2.24288 0.096518       0.119941\nNspecies_station[52]              12.91667 1.99222 0.085731       0.099276\nNspecies_station[53]              15.08333 2.17732 0.093697       0.094767\nNspecies_station[54]               9.62778 2.58588 0.111279       0.135130\nNspecies_station[55]               9.77222 3.05879 0.131629       0.184440\nNspecies_station[56]              11.00556 2.38462 0.102618       0.120499\nNspecies_station[57]              13.35926 2.71063 0.116647       0.158774\nNspecies_station[58]              13.23889 2.27521 0.097910       0.106783\nNspecies_station[59]               6.48333 2.05619 0.088484       0.105548\nNspecies_station[60]               5.22593 2.17185 0.093462       0.097178\nNspecies_station[61]               6.93333 2.05201 0.088305       0.098913\nNspecies_station[62]               3.93889 2.01708 0.086801       0.106694\nNspecies_station[63]               9.85000 2.02345 0.087075       0.115150\nNspecies_station[64]              10.46667 1.96651 0.084625       0.095576\nNspecies_station[65]               9.53704 1.83971 0.079168       0.090771\nNspecies_station[66]               9.57407 1.90986 0.082187       0.091193\nNspecies_station[67]               7.07963 1.92704 0.082927       0.101360\nNspecies_station[68]              10.43333 1.86691 0.080339       0.091639\nNspecies_station[69]               6.38148 2.00251 0.086174       0.106532\nNspecies_station[70]               6.19259 1.96819 0.084698       0.094945\nNspecies_station[71]               6.30370 2.11022 0.090810       0.107231\nNspecies_station[72]               7.33333 2.11190 0.090882       0.116570\nNspecies_station[73]              10.45370 1.90977 0.082183       0.084376\nNspecies_station[74]               9.70556 1.95410 0.084091       0.104629\nNspecies_station[75]               9.47037 1.83176 0.078826       0.087890\nNspecies_station[76]              10.50185 1.83098 0.078793       0.083938\nNspecies_station[77]               6.99630 2.01110 0.086544       0.099631\nNspecies_station[78]               6.61481 1.86953 0.080452       0.080535\nNspecies_station[79]               9.36852 1.78723 0.076910       0.099987\nNspecies_station[80]               7.50185 1.90254 0.081872       0.090858\nNspecies_station[81]              12.10370 1.79061 0.077056       0.085501\nNspecies_station[82]               7.59815 1.82428 0.078505       0.090604\nNspecies_station[83]              10.84444 1.66205 0.071523       0.092180\nNspecies_station[84]               7.23333 1.78460 0.076797       0.081130\nNspecies_station[85]               7.24259 2.12557 0.091470       0.102378\nNspecies_station[86]               6.07407 2.03359 0.087512       0.087027\nNspecies_station[87]               7.01111 2.02394 0.087097       0.086795\nNspecies_station[88]               9.77963 1.90730 0.082077       0.103402\nNspecies_station[89]              16.36667 2.09841 0.090301       0.114611\nNspecies_station[90]              14.58148 2.13523 0.091886       0.117700\nNspecies_station[91]              16.28519 2.06754 0.088973       0.106168\nNspecies_station[92]               9.13519 2.45974 0.105850       0.110714\nNspecies_station[93]              16.01296 1.94779 0.083820       0.103712\nNspecies_station[94]              13.77963 2.03621 0.087625       0.111919\nNspecies_station[95]              14.81111 2.22931 0.095934       0.123270\nNspecies_station[96]              15.04444 2.30468 0.099178       0.126541\nNspecies_station[97]              14.48519 2.33743 0.100587       0.132331\nNspecies_station[98]              10.96852 2.42837 0.104500       0.130138\nNspecies_station[99]              16.42222 2.07902 0.089467       0.107135\nNspecies_station[100]             16.42963 2.16153 0.093018       0.123906\nNspecies_station[101]             15.85000 2.06160 0.088717       0.102737\nNspecies_station[102]             17.00741 2.01661 0.086781       0.118308\nNspecies_station[103]              8.64815 2.38235 0.102520       0.107625\nNspecies_station[104]             11.39259 2.25251 0.096932       0.120289\nNspecies_station[105]             13.45370 2.65584 0.114289       0.168395\nNspecies_station[106]             10.23333 2.32299 0.099966       0.115423\nNspecies_station[107]             12.22037 2.26483 0.097463       0.121674\nNspecies_station[108]             12.37778 2.30951 0.099385       0.116622\nNspecies_station[109]             12.42222 2.20294 0.094799       0.111654\nNspecies_station[110]             12.25926 2.26029 0.097267       0.109012\nNspecies_station[111]             11.80741 2.09690 0.090236       0.101703\nNspecies_station[112]             11.64074 2.11554 0.091038       0.120061\nNspecies_station[113]              2.69259 1.60181 0.068931       0.074103\nNspecies_station[114]              4.52963 1.55333 0.066845       0.064430\nNspecies_station[115]              5.30741 1.48022 0.063698       0.060850\nNspecies_station[116]              7.44259 1.56090 0.067170       0.066403\nNspecies_station[117]              4.63704 1.57488 0.067772       0.073360\nNspecies_station[118]              6.31296 1.47968 0.063675       0.067191\nNspecies_station[119]              7.55556 1.94704 0.083787       0.102010\nNspecies_station[120]              5.90741 1.74824 0.075232       0.085360\nNspecies_station[121]              6.23333 1.74783 0.075215       0.077019\nNspecies_station[122]              2.76481 1.62719 0.070023       0.073143\nNspecies_station[123]              7.57407 1.94928 0.083884       0.093672\nNspecies_station[124]              7.91111 2.21134 0.095161       0.129692\nNspecies_station[125]              6.47222 1.54978 0.066692       0.072950\nNspecies_station[126]              4.66111 1.65984 0.071428       0.076521\nNspecies_station[127]              8.14074 1.79429 0.077214       0.080397\nNspecies_station[128]              4.62778 1.62665 0.070000       0.069952\nNspecies_station[129]              5.67963 1.56348 0.067282       0.085749\nNspecies_station[130]              6.00185 1.70288 0.073280       0.083004\nNspecies_station[131]              8.28148 2.23699 0.096265       0.110591\nNspecies_station[132]              5.67963 2.15605 0.092782       0.095903\nNspecies_station[133]              7.18704 1.81220 0.077985       0.078129\nNspecies_station[134]              8.26667 1.85444 0.079803       0.084243\nNspecies_station[135]              6.30000 1.86133 0.080099       0.084817\nNspecies_station[136]              5.17593 1.78547 0.076835       0.082803\nNspecies_station[137]              6.19815 1.79455 0.077225       0.087335\nNspecies_station[138]              5.11111 1.71392 0.073756       0.073673\nNspecies_station[139]              9.45926 2.11633 0.091072       0.096565\nNspecies_station[140]              5.55000 1.83738 0.079068       0.088658\nNspecies_station[141]              3.48333 1.92380 0.082787       0.082871\nNspecies_station[142]              6.31852 2.26173 0.097329       0.109631\nNspecies_station[143]             13.85370 1.69439 0.072915       0.081692\nNspecies_station[144]             13.90370 1.68536 0.072526       0.081883\nNspecies_station[145]              6.95185 1.86698 0.080342       0.084004\nNspecies_station[146]             11.09259 1.69544 0.072960       0.072520\nNspecies_station[147]              9.39630 1.82092 0.078360       0.086541\nNspecies_station[148]             12.40000 1.89502 0.081549       0.107734\nNspecies_station[149]              9.07037 2.11774 0.091133       0.108819\nNspecies_station[150]             12.51667 1.82482 0.078528       0.084985\nNspecies_station[151]             12.73704 1.94672 0.083774       0.092387\nNspecies_station[152]             13.98519 1.96343 0.084493       0.088081\nNspecies_station[153]              7.49444 2.13069 0.091690       0.104731\nNspecies_station[154]             13.63333 1.89296 0.081460       0.090699\nNspecies_station[155]              8.48148 2.15917 0.092916       0.115494\nNspecies_station[156]             15.09259 1.76304 0.075869       0.103036\nNspecies_station[157]              7.33333 2.15537 0.092753       0.108990\nNspecies_station[158]              8.85741 1.99537 0.085867       0.112017\nNspecies_station[159]             11.30000 2.12215 0.091323       0.115065\nNspecies_station[160]             11.81667 2.09020 0.089948       0.095627\nNspecies_station[161]              9.02222 2.31464 0.099606       0.123379\nNspecies_station[162]             12.39259 2.12188 0.091311       0.105280\nNspecies_station[163]              9.10741 2.05209 0.088308       0.092911\nNspecies_station[164]              8.40741 2.00388 0.086233       0.090181\nNspecies_station[165]              8.98519 1.93296 0.083181       0.082797\nNspecies_station[166]             11.42222 1.80791 0.077800       0.091905\nNspecies_station[167]             11.83889 1.74485 0.075086       0.087909\nNspecies_station[168]             10.12963 1.78477 0.076804       0.089941\nNspecies_station[169]              9.26296 1.86495 0.080255       0.085069\nNspecies_station[170]              8.29815 1.92965 0.083039       0.090982\nNspecies_station[171]             13.09630 1.69085 0.072763       0.080390\nNspecies_station[172]             10.01852 1.76537 0.075970       0.089472\nalpha.obs.fixed.cont.effort        0.28381 0.03652 0.001571       0.001574\nalpha0[1]                         -0.76463 0.09908 0.004264       0.004102\nalpha0[2]                         -1.43441 0.27503 0.011835       0.011390\nalpha0[3]                         -0.50199 0.10277 0.004422       0.004428\nalpha0[4]                         -2.07932 0.30925 0.013308       0.013339\nalpha0[5]                         -1.85138 0.26323 0.011328       0.011364\nalpha0[6]                         -1.40274 0.21570 0.009282       0.009472\nalpha0[7]                         -0.93964 0.10517 0.004526       0.004530\nalpha0[8]                         -0.94467 0.12000 0.005164       0.004808\nalpha0[9]                         -2.86695 0.63127 0.027166       0.028668\nalpha0[10]                        -0.35548 0.10657 0.004586       0.004415\nalpha0[11]                        -2.97935 1.02419 0.044074       0.055522\nalpha0[12]                        -3.15729 0.74622 0.032112       0.039599\nalpha0[13]                        -2.57360 0.61325 0.026390       0.027613\nalpha0[14]                        -3.07619 0.51378 0.022110       0.024649\nalpha0[15]                        -1.33333 0.17120 0.007367       0.007125\nalpha0[16]                        -2.42288 0.79479 0.034202       0.033669\nalpha0[17]                        -1.85933 0.29518 0.012703       0.012491\nalpha0[18]                        -2.46799 0.73033 0.031428       0.031434\nalpha0[19]                        -2.67510 0.67310 0.028966       0.032604\nalpha0[20]                        -3.01132 0.86698 0.037309       0.039028\nalpha0[21]                        -2.93759 0.47869 0.020599       0.020606\nalpha0[22]                        -2.96540 1.09154 0.046973       0.055136\nalpha0[23]                        -2.98433 0.52999 0.022807       0.022812\nalpha0[24]                        -2.74308 0.69294 0.029820       0.033572\nalpha0[25]                        -0.93239 0.17410 0.007492       0.007619\nalpha0[26]                        -2.02153 0.68720 0.029572       0.030932\nalpha0[27]                        -2.64070 0.73071 0.031445       0.034790\nalpha0[28]                        -1.83264 0.45512 0.019585       0.019780\nalpha0[29]                        -2.90231 1.02102 0.043938       0.046139\nalpha0[30]                        -1.79100 0.51182 0.022025       0.021107\nalpha0[31]                        -2.83713 1.06813 0.045965       0.048884\nalpha0[32]                        -2.43316 0.37019 0.015931       0.015908\nalpha0[33]                        -1.10098 0.28238 0.012152       0.012174\nalpha0[34]                        -1.98293 0.96833 0.041670       0.041684\nalpha0[35]                        -2.97870 0.90161 0.038799       0.043139\nalpha0[36]                        -3.02499 1.02529 0.044122       0.053494\nalpha0[37]                        -1.70261 0.72133 0.031041       0.031094\nalpha0[38]                        -3.05512 0.98023 0.042182       0.050570\nalpha0[39]                        -2.14627 0.94246 0.040557       0.043943\nalpha0[40]                        -1.25174 0.21627 0.009307       0.008661\nalpha0[41]                        -2.93039 1.00547 0.043268       0.044189\nalpha0[42]                        -2.96856 0.95123 0.040935       0.046542\nalpha0[43]                        -2.95346 0.99650 0.042882       0.042812\nalpha0[44]                        -3.02559 0.99738 0.042920       0.053192\nalpha0[45]                        -2.12018 1.01263 0.043577       0.043052\nalpha0[46]                        -2.94839 1.09168 0.046978       0.054712\nalpha0[47]                        -1.55691 0.73141 0.031475       0.036927\nalpha0[48]                        -1.89576 0.99865 0.042975       0.049872\nalpha0[49]                        -2.85923 1.08383 0.046641       0.046488\nalpha0[50]                        -3.07336 1.03501 0.044540       0.044434\nalpha0[51]                        -2.96181 1.02620 0.044161       0.060762\nalpha0.mean                       -2.24158 0.25456 0.010954       0.016915\nalpha0.sigma                       1.07385 0.21144 0.009099       0.013568\nbeta.ranef.categ.in_AP[1,1]        0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[2,1]        0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[3,1]        0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[4,1]        0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[5,1]        0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[6,1]        0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[7,1]        0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[8,1]        0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[9,1]        0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[10,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[11,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[12,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[13,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[14,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[15,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[16,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[17,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[18,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[19,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[20,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[21,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[22,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[23,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[24,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[25,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[26,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[27,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[28,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[29,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[30,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[31,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[32,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[33,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[34,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[35,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[36,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[37,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[38,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[39,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[40,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[41,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[42,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[43,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[44,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[45,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[46,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[47,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[48,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[49,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[50,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[51,1]       0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP[1,2]       -0.07337 0.52407 0.022552       0.022529\nbeta.ranef.categ.in_AP[2,2]       -0.27457 0.48380 0.020820       0.024040\nbeta.ranef.categ.in_AP[3,2]       -0.22515 0.45681 0.019658       0.019668\nbeta.ranef.categ.in_AP[4,2]       -0.14292 0.50612 0.021780       0.024550\nbeta.ranef.categ.in_AP[5,2]       -0.74764 0.53954 0.023218       0.026845\nbeta.ranef.categ.in_AP[6,2]       -1.52690 0.62415 0.026859       0.032082\nbeta.ranef.categ.in_AP[7,2]       -0.29187 0.51086 0.021984       0.022867\nbeta.ranef.categ.in_AP[8,2]       -0.15089 0.48026 0.020667       0.020674\nbeta.ranef.categ.in_AP[9,2]       -0.30116 0.58330 0.025101       0.028178\nbeta.ranef.categ.in_AP[10,2]       0.21096 0.46847 0.020160       0.022256\nbeta.ranef.categ.in_AP[11,2]      -0.61638 0.68171 0.029336       0.032053\nbeta.ranef.categ.in_AP[12,2]      -0.43143 0.59278 0.025509       0.025955\nbeta.ranef.categ.in_AP[13,2]      -0.32221 0.59099 0.025432       0.025012\nbeta.ranef.categ.in_AP[14,2]      -0.33271 0.61385 0.026416       0.026408\nbeta.ranef.categ.in_AP[15,2]       0.20713 0.55291 0.023793       0.025539\nbeta.ranef.categ.in_AP[16,2]      -0.48008 0.62781 0.027017       0.028575\nbeta.ranef.categ.in_AP[17,2]      -0.47931 0.51774 0.022280       0.021419\nbeta.ranef.categ.in_AP[18,2]      -0.70377 0.65622 0.028239       0.030531\nbeta.ranef.categ.in_AP[19,2]      -0.44559 0.57618 0.024795       0.024840\nbeta.ranef.categ.in_AP[20,2]      -0.69577 0.67065 0.028860       0.034973\nbeta.ranef.categ.in_AP[21,2]      -0.57481 0.58439 0.025148       0.025163\nbeta.ranef.categ.in_AP[22,2]      -0.66754 0.66996 0.028831       0.029757\nbeta.ranef.categ.in_AP[23,2]      -0.53821 0.59806 0.025736       0.024661\nbeta.ranef.categ.in_AP[24,2]      -0.71489 0.64894 0.027926       0.026740\nbeta.ranef.categ.in_AP[25,2]      -0.63484 0.46028 0.019807       0.024284\nbeta.ranef.categ.in_AP[26,2]      -0.33572 0.61414 0.026428       0.028541\nbeta.ranef.categ.in_AP[27,2]      -0.43489 0.59822 0.025743       0.028435\nbeta.ranef.categ.in_AP[28,2]      -0.02564 0.59236 0.025491       0.026553\nbeta.ranef.categ.in_AP[29,2]      -0.34302 0.67074 0.028864       0.030292\nbeta.ranef.categ.in_AP[30,2]       0.05371 0.57675 0.024819       0.024852\nbeta.ranef.categ.in_AP[31,2]      -0.29709 0.69296 0.029820       0.032822\nbeta.ranef.categ.in_AP[32,2]      -0.56245 0.58167 0.025031       0.026678\nbeta.ranef.categ.in_AP[33,2]      -0.38774 0.49434 0.021273       0.024281\nbeta.ranef.categ.in_AP[34,2]      -0.38683 0.63494 0.027324       0.028777\nbeta.ranef.categ.in_AP[35,2]      -0.77591 0.67077 0.028865       0.030589\nbeta.ranef.categ.in_AP[36,2]      -0.62034 0.65527 0.028198       0.029621\nbeta.ranef.categ.in_AP[37,2]      -0.18093 0.59909 0.025781       0.029940\nbeta.ranef.categ.in_AP[38,2]      -0.38563 0.65101 0.028015       0.029547\nbeta.ranef.categ.in_AP[39,2]      -0.29552 0.63600 0.027369       0.028865\nbeta.ranef.categ.in_AP[40,2]      -0.64673 0.47199 0.020311       0.021132\nbeta.ranef.categ.in_AP[41,2]      -0.37102 0.66804 0.028748       0.028693\nbeta.ranef.categ.in_AP[42,2]      -0.10311 0.64023 0.027551       0.027518\nbeta.ranef.categ.in_AP[43,2]      -0.32580 0.62667 0.026968       0.026997\nbeta.ranef.categ.in_AP[44,2]      -0.39973 0.64837 0.027901       0.028011\nbeta.ranef.categ.in_AP[45,2]      -0.59093 0.65418 0.028151       0.026965\nbeta.ranef.categ.in_AP[46,2]      -0.61261 0.64777 0.027875       0.027923\nbeta.ranef.categ.in_AP[47,2]      -0.64728 0.62216 0.026773       0.029509\nbeta.ranef.categ.in_AP[48,2]      -0.65634 0.67527 0.029059       0.032577\nbeta.ranef.categ.in_AP[49,2]      -0.61829 0.69487 0.029903       0.029879\nbeta.ranef.categ.in_AP[50,2]      -0.67181 0.66354 0.028554       0.032396\nbeta.ranef.categ.in_AP[51,2]      -0.60403 0.69373 0.029853       0.035304\nbeta.ranef.categ.in_AP.mean[1]     0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP.mean[2]    -0.43486 0.26170 0.011262       0.015366\nbeta.ranef.categ.in_AP.sigma[1]    0.00000 0.00000 0.000000       0.000000\nbeta.ranef.categ.in_AP.sigma[2]    0.60637 0.20210 0.008697       0.008706\nbeta.ranef.cont.border_dist[1]    -0.65769 0.27030 0.011632       0.011758\nbeta.ranef.cont.border_dist[2]    -0.64788 0.28082 0.012084       0.014698\nbeta.ranef.cont.border_dist[3]    -0.64915 0.24537 0.010559       0.010431\nbeta.ranef.cont.border_dist[4]    -0.51158 0.30223 0.013006       0.014841\nbeta.ranef.cont.border_dist[5]    -0.77808 0.30429 0.013095       0.014003\nbeta.ranef.cont.border_dist[6]    -0.59095 0.29186 0.012560       0.016052\nbeta.ranef.cont.border_dist[7]    -0.89889 0.27957 0.012031       0.012041\nbeta.ranef.cont.border_dist[8]    -0.90043 0.26904 0.011577       0.011429\nbeta.ranef.cont.border_dist[9]    -0.64848 0.31185 0.013420       0.013610\nbeta.ranef.cont.border_dist[10]   -0.80131 0.25957 0.011170       0.012497\nbeta.ranef.cont.border_dist[11]   -0.62553 0.34498 0.014846       0.016198\nbeta.ranef.cont.border_dist[12]   -0.72648 0.33352 0.014353       0.016196\nbeta.ranef.cont.border_dist[13]   -0.50362 0.33101 0.014245       0.014222\nbeta.ranef.cont.border_dist[14]   -0.63536 0.32713 0.014077       0.014062\nbeta.ranef.cont.border_dist[15]   -0.98737 0.30784 0.013247       0.015099\nbeta.ranef.cont.border_dist[16]   -0.59084 0.35226 0.015159       0.015968\nbeta.ranef.cont.border_dist[17]   -0.84059 0.30441 0.013100       0.013172\nbeta.ranef.cont.border_dist[18]   -0.49988 0.35654 0.015343       0.015411\nbeta.ranef.cont.border_dist[19]   -0.61160 0.32279 0.013891       0.015647\nbeta.ranef.cont.border_dist[20]   -0.46499 0.35112 0.015110       0.016755\nbeta.ranef.cont.border_dist[21]   -0.87230 0.32617 0.014036       0.014900\nbeta.ranef.cont.border_dist[22]   -0.63233 0.33647 0.014480       0.015218\nbeta.ranef.cont.border_dist[23]   -0.67889 0.31648 0.013619       0.014595\nbeta.ranef.cont.border_dist[24]   -0.63348 0.32730 0.014085       0.015336\nbeta.ranef.cont.border_dist[25]   -0.82146 0.27161 0.011688       0.013716\nbeta.ranef.cont.border_dist[26]   -0.67332 0.30834 0.013269       0.017908\nbeta.ranef.cont.border_dist[27]   -0.65439 0.30115 0.012959       0.013846\nbeta.ranef.cont.border_dist[28]   -0.78529 0.32884 0.014151       0.016173\nbeta.ranef.cont.border_dist[29]   -0.74644 0.35423 0.015244       0.016023\nbeta.ranef.cont.border_dist[30]   -0.85734 0.30748 0.013232       0.014537\nbeta.ranef.cont.border_dist[31]   -0.73978 0.32791 0.014111       0.018122\nbeta.ranef.cont.border_dist[32]   -0.82115 0.31268 0.013456       0.016465\nbeta.ranef.cont.border_dist[33]   -0.81262 0.29819 0.012832       0.014290\nbeta.ranef.cont.border_dist[34]   -0.72018 0.32720 0.014080       0.020344\nbeta.ranef.cont.border_dist[35]   -0.58327 0.33345 0.014350       0.014275\nbeta.ranef.cont.border_dist[36]   -0.67226 0.34959 0.015044       0.016753\nbeta.ranef.cont.border_dist[37]   -0.80003 0.32837 0.014131       0.016316\nbeta.ranef.cont.border_dist[38]   -0.65243 0.32823 0.014125       0.015626\nbeta.ranef.cont.border_dist[39]   -0.71587 0.34075 0.014664       0.017945\nbeta.ranef.cont.border_dist[40]   -0.76318 0.27417 0.011798       0.013564\nbeta.ranef.cont.border_dist[41]   -0.75280 0.31404 0.013514       0.015131\nbeta.ranef.cont.border_dist[42]   -0.81197 0.33582 0.014451       0.015252\nbeta.ranef.cont.border_dist[43]   -0.73606 0.34116 0.014681       0.014642\nbeta.ranef.cont.border_dist[44]   -0.64296 0.32641 0.014046       0.016185\nbeta.ranef.cont.border_dist[45]   -0.54717 0.34511 0.014851       0.019515\nbeta.ranef.cont.border_dist[46]   -0.56552 0.34560 0.014872       0.015681\nbeta.ranef.cont.border_dist[47]   -0.59586 0.33478 0.014406       0.014767\nbeta.ranef.cont.border_dist[48]   -0.60924 0.32596 0.014027       0.014166\nbeta.ranef.cont.border_dist[49]   -0.57178 0.35373 0.015222       0.015975\nbeta.ranef.cont.border_dist[50]   -0.68860 0.33785 0.014539       0.017439\nbeta.ranef.cont.border_dist[51]   -0.63372 0.32666 0.014057       0.016489\nbeta.ranef.cont.border_dist.mean  -0.69008 0.17573 0.007562       0.010882\nbeta.ranef.cont.border_dist.sigma  0.29826 0.08906 0.003833       0.003840\nbeta.ranef.cont.elev[1]            0.02545 0.21507 0.009255       0.009253\nbeta.ranef.cont.elev[2]            0.17336 0.26073 0.011220       0.012198\nbeta.ranef.cont.elev[3]            0.10719 0.19151 0.008241       0.008707\nbeta.ranef.cont.elev[4]            0.24244 0.26336 0.011333       0.011331\nbeta.ranef.cont.elev[5]            0.04749 0.26436 0.011376       0.011392\nbeta.ranef.cont.elev[6]           -0.26924 0.29196 0.012564       0.012582\nbeta.ranef.cont.elev[7]            0.09205 0.23562 0.010139       0.010142\nbeta.ranef.cont.elev[8]            0.04146 0.23111 0.009945       0.009786\nbeta.ranef.cont.elev[9]            0.29399 0.29665 0.012766       0.013086\nbeta.ranef.cont.elev[10]           0.29977 0.19842 0.008538       0.008550\nbeta.ranef.cont.elev[11]           0.22849 0.34706 0.014935       0.015044\nbeta.ranef.cont.elev[12]           0.17096 0.32914 0.014164       0.014187\nbeta.ranef.cont.elev[13]           0.62505 0.33302 0.014331       0.014166\nbeta.ranef.cont.elev[14]           0.08246 0.31961 0.013754       0.014389\nbeta.ranef.cont.elev[15]          -0.02450 0.26080 0.011223       0.011243\nbeta.ranef.cont.elev[16]           0.15048 0.32997 0.014200       0.014223\nbeta.ranef.cont.elev[17]           0.04778 0.27634 0.011892       0.011366\nbeta.ranef.cont.elev[18]           0.52440 0.33429 0.014386       0.013915\nbeta.ranef.cont.elev[19]           0.40335 0.30892 0.013294       0.014921\nbeta.ranef.cont.elev[20]           0.38825 0.34576 0.014879       0.014897\nbeta.ranef.cont.elev[21]           0.02255 0.33064 0.014229       0.015543\nbeta.ranef.cont.elev[22]           0.18967 0.33085 0.014237       0.013988\nbeta.ranef.cont.elev[23]          -0.04708 0.33331 0.014343       0.013180\nbeta.ranef.cont.elev[24]           0.09775 0.32137 0.013830       0.013518\nbeta.ranef.cont.elev[25]          -0.11372 0.25902 0.011146       0.012020\nbeta.ranef.cont.elev[26]           0.40626 0.29671 0.012768       0.012596\nbeta.ranef.cont.elev[27]           0.10201 0.31317 0.013477       0.014284\nbeta.ranef.cont.elev[28]           0.07454 0.29591 0.012734       0.013200\nbeta.ranef.cont.elev[29]           0.14541 0.35800 0.015406       0.015432\nbeta.ranef.cont.elev[30]           0.19564 0.29905 0.012869       0.013649\nbeta.ranef.cont.elev[31]           0.11056 0.34226 0.014729       0.014749\nbeta.ranef.cont.elev[32]           0.03646 0.27425 0.011802       0.011799\nbeta.ranef.cont.elev[33]          -0.06346 0.30224 0.013006       0.014724\nbeta.ranef.cont.elev[34]           0.09654 0.32613 0.014034       0.013731\nbeta.ranef.cont.elev[35]           0.18057 0.32724 0.014082       0.014766\nbeta.ranef.cont.elev[36]           0.14465 0.36004 0.015494       0.015280\nbeta.ranef.cont.elev[37]           0.06598 0.33116 0.014251       0.015997\nbeta.ranef.cont.elev[38]           0.17568 0.34146 0.014694       0.014334\nbeta.ranef.cont.elev[39]           0.12553 0.33281 0.014322       0.016223\nbeta.ranef.cont.elev[40]           0.07204 0.23592 0.010152       0.010163\nbeta.ranef.cont.elev[41]           0.11115 0.34852 0.014998       0.014967\nbeta.ranef.cont.elev[42]           0.09473 0.33930 0.014601       0.015335\nbeta.ranef.cont.elev[43]           0.09592 0.35219 0.015156       0.015801\nbeta.ranef.cont.elev[44]           0.31018 0.34246 0.014737       0.014706\nbeta.ranef.cont.elev[45]           0.22237 0.33863 0.014572       0.014546\nbeta.ranef.cont.elev[46]           0.24272 0.32441 0.013960       0.017237\nbeta.ranef.cont.elev[47]           0.45280 0.31522 0.013565       0.014761\nbeta.ranef.cont.elev[48]           0.24464 0.32962 0.014185       0.014199\nbeta.ranef.cont.elev[49]           0.22643 0.32316 0.013907       0.012354\nbeta.ranef.cont.elev[50]           0.13198 0.34592 0.014886       0.020356\nbeta.ranef.cont.elev[51]           0.13376 0.33516 0.014423       0.016978\nbeta.ranef.cont.elev.mean          0.15747 0.12732 0.005479       0.006818\nbeta.ranef.cont.elev.sigma         0.32869 0.09184 0.003952       0.003589\nbeta0[1]                           0.98846 0.26805 0.011535       0.011538\nbeta0[2]                          -1.56799 0.34848 0.014996       0.014968\nbeta0[3]                           0.14434 0.21310 0.009170       0.008857\nbeta0[4]                          -0.57734 0.50174 0.021592       0.023880\nbeta0[5]                          -0.52949 0.39216 0.016876       0.019498\nbeta0[6]                          -0.77212 0.30849 0.013275       0.012563\nbeta0[7]                           0.89036 0.26297 0.011317       0.011332\nbeta0[8]                           0.16279 0.24014 0.010334       0.010402\nbeta0[9]                          -1.23202 0.86222 0.037104       0.044480\nbeta0[10]                         -0.05388 0.21971 0.009455       0.009345\nbeta0[11]                         -3.49236 1.15986 0.049912       0.053210\nbeta0[12]                         -1.79891 0.92830 0.039948       0.045695\nbeta0[13]                         -2.04018 0.70311 0.030257       0.031357\nbeta0[14]                         -0.46361 0.85966 0.036994       0.039990\nbeta0[15]                         -0.77752 0.30025 0.012921       0.011370\nbeta0[16]                         -2.95775 0.81685 0.035152       0.030959\nbeta0[17]                         -1.03138 0.40871 0.017588       0.017560\nbeta0[18]                         -2.91899 0.83317 0.035854       0.036689\nbeta0[19]                         -1.86017 0.79811 0.034345       0.037411\nbeta0[20]                         -2.50341 1.00783 0.043370       0.052587\nbeta0[21]                         -0.49462 0.72642 0.031260       0.031314\nbeta0[22]                         -3.39543 1.22116 0.052550       0.063848\nbeta0[23]                         -0.72671 0.82092 0.035327       0.041513\nbeta0[24]                         -1.90103 0.77454 0.033331       0.040368\nbeta0[25]                         -0.85311 0.24915 0.010722       0.010694\nbeta0[26]                         -2.99605 0.69774 0.030026       0.029991\nbeta0[27]                         -2.27448 0.88703 0.038171       0.048444\nbeta0[28]                         -2.54601 0.54737 0.023555       0.023568\nbeta0[29]                         -3.60858 1.17944 0.050755       0.064052\nbeta0[30]                         -2.70318 0.57030 0.024542       0.025512\nbeta0[31]                         -3.68791 1.16053 0.049941       0.049863\nbeta0[32]                         -0.43555 0.59031 0.025403       0.023590\nbeta0[33]                         -2.30826 0.40029 0.017226       0.015057\nbeta0[34]                         -4.11762 1.01938 0.043867       0.043848\nbeta0[35]                         -2.48137 1.01737 0.043780       0.050672\nbeta0[36]                         -3.36051 1.18224 0.050875       0.058770\nbeta0[37]                         -3.96236 0.79362 0.034152       0.037529\nbeta0[38]                         -2.84084 1.16520 0.050142       0.060856\nbeta0[39]                         -4.05699 0.97489 0.041953       0.037829\nbeta0[40]                         -0.92947 0.27405 0.011793       0.009897\nbeta0[41]                         -3.58382 1.05883 0.045565       0.056900\nbeta0[42]                         -3.19935 1.06204 0.045703       0.057719\nbeta0[43]                         -3.63344 1.12815 0.048548       0.055229\nbeta0[44]                         -2.88673 1.15614 0.049752       0.062042\nbeta0[45]                         -3.93709 0.99013 0.042608       0.047779\nbeta0[46]                         -3.48073 1.22836 0.052860       0.065877\nbeta0[47]                         -3.77369 0.76208 0.032795       0.031267\nbeta0[48]                         -4.04731 0.96752 0.041636       0.041671\nbeta0[49]                         -3.56105 1.22340 0.052647       0.052484\nbeta0[50]                         -3.45628 1.15233 0.049588       0.051875\nbeta0[51]                         -3.44046 1.18729 0.051093       0.056090\nbeta0.mean                        -2.16183 0.33847 0.014566       0.017621\nbeta0.sigma                        1.66575 0.21765 0.009366       0.008851\n\n2. Quantiles for each variable:\n\n                                      2.5%        25%      50%       75%\nNspecies                          51.00000 51.0000000 51.00000 51.000000\nNspecies_station[1]                4.00000  5.0000000  6.00000  7.000000\nNspecies_station[2]                3.00000  4.0000000  6.00000  7.000000\nNspecies_station[3]                2.00000  3.0000000  4.00000  5.000000\nNspecies_station[4]                2.00000  3.0000000  4.00000  5.000000\nNspecies_station[5]                2.00000  3.0000000  4.00000  5.000000\nNspecies_station[6]                5.47500  7.0000000  8.00000  9.000000\nNspecies_station[7]                3.00000  5.0000000  6.00000  7.000000\nNspecies_station[8]                7.00000  8.0000000  9.00000 10.000000\nNspecies_station[9]                2.00000  3.0000000  4.00000  5.000000\nNspecies_station[10]               3.00000  4.0000000  5.00000  6.000000\nNspecies_station[11]               3.00000  5.0000000  6.00000  7.000000\nNspecies_station[12]               3.00000  4.0000000  5.00000  6.000000\nNspecies_station[13]               2.00000  4.0000000  5.00000  6.000000\nNspecies_station[14]               4.00000  6.0000000  7.00000  8.000000\nNspecies_station[15]               5.00000  6.0000000  7.00000  8.000000\nNspecies_station[16]               7.00000  9.0000000 10.00000 11.000000\nNspecies_station[17]               4.00000  6.0000000  7.00000  8.000000\nNspecies_station[18]               3.00000  4.0000000  5.00000  6.000000\nNspecies_station[19]               2.00000  4.0000000  6.00000  7.000000\nNspecies_station[20]               6.00000  8.0000000  9.00000 11.000000\nNspecies_station[21]               9.00000 11.0000000 12.00000 13.000000\nNspecies_station[22]               6.00000  7.0000000  8.00000 10.000000\nNspecies_station[23]               2.00000  3.0000000  4.00000  5.000000\nNspecies_station[24]               3.00000  4.0000000  5.00000  6.000000\nNspecies_station[25]               1.00000  3.0000000  3.00000  5.000000\nNspecies_station[26]               5.00000  6.0000000  7.00000  8.000000\nNspecies_station[27]               7.00000  9.0000000 10.00000 11.000000\nNspecies_station[28]               1.00000  2.0000000  3.00000  4.000000\nNspecies_station[29]               5.00000  8.0000000  9.00000 11.000000\nNspecies_station[30]               5.00000  8.0000000  9.00000 11.000000\nNspecies_station[31]               5.00000  7.0000000  9.00000 10.250000\nNspecies_station[32]               8.00000 11.0000000 13.00000 14.000000\nNspecies_station[33]               6.00000  9.0000000 10.00000 12.000000\nNspecies_station[34]               7.00000  9.0000000 10.00000 12.000000\nNspecies_station[35]              11.00000 13.0000000 14.00000 16.000000\nNspecies_station[36]               6.00000  8.0000000 10.00000 11.000000\nNspecies_station[37]               8.00000 11.0000000 12.00000 14.000000\nNspecies_station[38]               8.47500 10.0000000 12.00000 13.000000\nNspecies_station[39]               5.00000  8.0000000  9.00000 11.000000\nNspecies_station[40]               5.00000  7.0000000  9.00000 10.250000\nNspecies_station[41]               7.00000 10.0000000 11.00000 13.000000\nNspecies_station[42]               7.00000 10.0000000 11.00000 13.000000\nNspecies_station[43]              10.00000 12.0000000 13.00000 15.000000\nNspecies_station[44]               8.00000 10.0000000 12.00000 13.000000\nNspecies_station[45]               5.00000  8.0000000  9.00000 11.000000\nNspecies_station[46]               5.00000  8.0000000  9.00000 11.000000\nNspecies_station[47]               7.00000 10.0000000 11.00000 13.000000\nNspecies_station[48]               7.00000 10.0000000 11.00000 13.000000\nNspecies_station[49]              11.00000 13.0000000 14.00000 16.000000\nNspecies_station[50]               5.00000  7.0000000  9.00000 10.000000\nNspecies_station[51]               5.00000  8.0000000  9.00000 10.000000\nNspecies_station[52]              10.00000 11.0000000 13.00000 14.000000\nNspecies_station[53]              11.00000 13.0000000 15.00000 16.000000\nNspecies_station[54]               5.00000  8.0000000  9.00000 11.000000\nNspecies_station[55]               5.00000  8.0000000 10.00000 11.000000\nNspecies_station[56]               7.00000  9.0000000 11.00000 12.000000\nNspecies_station[57]               8.00000 12.0000000 13.00000 15.000000\nNspecies_station[58]              10.00000 12.0000000 13.00000 15.000000\nNspecies_station[59]               3.00000  5.0000000  6.00000  8.000000\nNspecies_station[60]               2.00000  4.0000000  5.00000  7.000000\nNspecies_station[61]               4.00000  6.0000000  7.00000  8.000000\nNspecies_station[62]               0.00000  2.7500000  4.00000  5.000000\nNspecies_station[63]               7.00000  8.0000000 10.00000 11.000000\nNspecies_station[64]               7.00000  9.0000000 10.00000 12.000000\nNspecies_station[65]               7.00000  8.0000000  9.00000 11.000000\nNspecies_station[66]               6.00000  8.0000000  9.00000 11.000000\nNspecies_station[67]               4.00000  6.0000000  7.00000  8.000000\nNspecies_station[68]               7.00000  9.0000000 10.00000 12.000000\nNspecies_station[69]               3.00000  5.0000000  6.00000  8.000000\nNspecies_station[70]               3.00000  5.0000000  6.00000  7.000000\nNspecies_station[71]               3.00000  5.0000000  6.00000  8.000000\nNspecies_station[72]               4.00000  6.0000000  7.00000  9.000000\nNspecies_station[73]               7.00000  9.0000000 10.00000 12.000000\nNspecies_station[74]               7.00000  8.0000000 10.00000 11.000000\nNspecies_station[75]               6.47500  8.0000000  9.00000 11.000000\nNspecies_station[76]               7.00000  9.0000000 10.00000 12.000000\nNspecies_station[77]               4.00000  6.0000000  7.00000  8.000000\nNspecies_station[78]               4.00000  5.0000000  7.00000  8.000000\nNspecies_station[79]               6.00000  8.0000000  9.00000 10.000000\nNspecies_station[80]               4.00000  6.0000000  7.00000  9.000000\nNspecies_station[81]               9.00000 11.0000000 12.00000 13.000000\nNspecies_station[82]               4.00000  6.0000000  7.00000  9.000000\nNspecies_station[83]               8.00000 10.0000000 11.00000 12.000000\nNspecies_station[84]               4.00000  6.0000000  7.00000  8.000000\nNspecies_station[85]               4.00000  6.0000000  7.00000  9.000000\nNspecies_station[86]               3.00000  5.0000000  6.00000  7.000000\nNspecies_station[87]               4.00000  5.0000000  7.00000  8.000000\nNspecies_station[88]               6.00000  8.0000000  9.00000 11.000000\nNspecies_station[89]              13.00000 15.0000000 16.00000 18.000000\nNspecies_station[90]              11.00000 13.0000000 14.00000 16.000000\nNspecies_station[91]              13.00000 15.0000000 16.00000 18.000000\nNspecies_station[92]               5.00000  7.0000000  9.00000 11.000000\nNspecies_station[93]              13.00000 15.0000000 16.00000 17.000000\nNspecies_station[94]              10.00000 12.0000000 14.00000 15.000000\nNspecies_station[95]              11.00000 13.0000000 15.00000 16.000000\nNspecies_station[96]              11.00000 13.0000000 15.00000 16.000000\nNspecies_station[97]              11.00000 13.0000000 14.00000 16.000000\nNspecies_station[98]               7.00000  9.0000000 11.00000 13.000000\nNspecies_station[99]              13.00000 15.0000000 16.00000 18.000000\nNspecies_station[100]             13.00000 15.0000000 16.00000 18.000000\nNspecies_station[101]             12.00000 14.0000000 16.00000 17.000000\nNspecies_station[102]             14.00000 16.0000000 17.00000 18.000000\nNspecies_station[103]              5.00000  7.0000000  8.00000 10.000000\nNspecies_station[104]              7.00000 10.0000000 11.00000 13.000000\nNspecies_station[105]              9.00000 11.0000000 13.00000 15.000000\nNspecies_station[106]              6.00000  9.0000000 10.00000 12.000000\nNspecies_station[107]              8.00000 11.0000000 12.00000 14.000000\nNspecies_station[108]              9.00000 11.0000000 12.00000 14.000000\nNspecies_station[109]              9.00000 11.0000000 12.00000 14.000000\nNspecies_station[110]              9.00000 11.0000000 12.00000 14.000000\nNspecies_station[111]              8.00000 10.0000000 12.00000 13.000000\nNspecies_station[112]              8.00000 10.0000000 12.00000 13.000000\nNspecies_station[113]              0.00000  2.0000000  3.00000  4.000000\nNspecies_station[114]              2.00000  3.0000000  4.00000  6.000000\nNspecies_station[115]              3.00000  4.0000000  5.00000  6.000000\nNspecies_station[116]              5.00000  6.0000000  7.00000  8.000000\nNspecies_station[117]              2.00000  4.0000000  4.00000  6.000000\nNspecies_station[118]              4.00000  5.0000000  6.00000  7.000000\nNspecies_station[119]              4.00000  6.0000000  7.00000  9.000000\nNspecies_station[120]              3.00000  5.0000000  6.00000  7.000000\nNspecies_station[121]              3.00000  5.0000000  6.00000  7.000000\nNspecies_station[122]              0.00000  2.0000000  3.00000  4.000000\nNspecies_station[123]              4.00000  6.0000000  7.00000  9.000000\nNspecies_station[124]              4.00000  6.0000000  8.00000  9.000000\nNspecies_station[125]              4.00000  5.0000000  6.00000  7.000000\nNspecies_station[126]              2.00000  3.0000000  4.00000  6.000000\nNspecies_station[127]              5.00000  7.0000000  8.00000  9.000000\nNspecies_station[128]              2.00000  3.0000000  4.00000  6.000000\nNspecies_station[129]              3.00000  5.0000000  5.00000  7.000000\nNspecies_station[130]              3.00000  5.0000000  6.00000  7.000000\nNspecies_station[131]              5.00000  7.0000000  8.00000  9.000000\nNspecies_station[132]              2.00000  4.0000000  6.00000  7.000000\nNspecies_station[133]              4.00000  6.0000000  7.00000  8.000000\nNspecies_station[134]              5.00000  7.0000000  8.00000  9.000000\nNspecies_station[135]              3.00000  5.0000000  6.00000  8.000000\nNspecies_station[136]              2.00000  4.0000000  5.00000  6.000000\nNspecies_station[137]              3.00000  5.0000000  6.00000  7.000000\nNspecies_station[138]              2.00000  4.0000000  5.00000  6.000000\nNspecies_station[139]              6.00000  8.0000000  9.00000 11.000000\nNspecies_station[140]              3.00000  4.0000000  5.00000  7.000000\nNspecies_station[141]              1.00000  2.0000000  3.00000  5.000000\nNspecies_station[142]              2.00000  5.0000000  6.00000  8.000000\nNspecies_station[143]             11.00000 13.0000000 14.00000 15.000000\nNspecies_station[144]             11.00000 13.0000000 14.00000 15.000000\nNspecies_station[145]              4.00000  6.0000000  7.00000  8.000000\nNspecies_station[146]              8.00000 10.0000000 11.00000 12.000000\nNspecies_station[147]              6.00000  8.0000000  9.00000 11.000000\nNspecies_station[148]              9.00000 11.0000000 12.00000 13.000000\nNspecies_station[149]              6.00000  8.0000000  9.00000 11.000000\nNspecies_station[150]              9.47500 11.0000000 12.00000 14.000000\nNspecies_station[151]             10.00000 11.0000000 12.00000 14.000000\nNspecies_station[152]             11.00000 13.0000000 14.00000 15.000000\nNspecies_station[153]              4.00000  6.0000000  7.00000  9.000000\nNspecies_station[154]             11.00000 12.0000000 13.00000 15.000000\nNspecies_station[155]              5.00000  7.0000000  8.00000 10.000000\nNspecies_station[156]             12.00000 14.0000000 15.00000 16.000000\nNspecies_station[157]              4.00000  6.0000000  7.00000  9.000000\nNspecies_station[158]              5.00000  7.0000000  9.00000 10.000000\nNspecies_station[159]              8.00000 10.0000000 11.00000 13.000000\nNspecies_station[160]              8.00000 10.0000000 12.00000 13.000000\nNspecies_station[161]              5.00000  7.0000000  9.00000 10.250000\nNspecies_station[162]              9.00000 11.0000000 12.00000 14.000000\nNspecies_station[163]              6.00000  8.0000000  9.00000 10.000000\nNspecies_station[164]              5.00000  7.0000000  8.00000 10.000000\nNspecies_station[165]              6.00000  8.0000000  9.00000 10.000000\nNspecies_station[166]              8.00000 10.0000000 11.00000 13.000000\nNspecies_station[167]              9.00000 11.0000000 12.00000 13.000000\nNspecies_station[168]              7.00000  9.0000000 10.00000 11.000000\nNspecies_station[169]              6.00000  8.0000000  9.00000 10.000000\nNspecies_station[170]              5.00000  7.0000000  8.00000  9.000000\nNspecies_station[171]             10.00000 12.0000000 13.00000 14.000000\nNspecies_station[172]              7.00000  9.0000000 10.00000 11.000000\nalpha.obs.fixed.cont.effort        0.21331  0.2592653  0.28503  0.307948\nalpha0[1]                         -0.96695 -0.8226569 -0.75868 -0.699698\nalpha0[2]                         -1.97746 -1.6127207 -1.43424 -1.230975\nalpha0[3]                         -0.70864 -0.5689392 -0.50223 -0.433226\nalpha0[4]                         -2.76400 -2.2754480 -2.07238 -1.863536\nalpha0[5]                         -2.36709 -2.0200050 -1.83611 -1.678027\nalpha0[6]                         -1.83532 -1.5335702 -1.39529 -1.263669\nalpha0[7]                         -1.15100 -1.0112809 -0.94063 -0.867801\nalpha0[8]                         -1.17397 -1.0284392 -0.93845 -0.859161\nalpha0[9]                         -4.13858 -3.2823698 -2.86774 -2.416229\nalpha0[10]                        -0.56854 -0.4251624 -0.34780 -0.291481\nalpha0[11]                        -5.26373 -3.6066502 -2.92619 -2.261734\nalpha0[12]                        -4.52222 -3.6816013 -3.17805 -2.642285\nalpha0[13]                        -3.72055 -3.0327313 -2.54081 -2.122639\nalpha0[14]                        -4.07363 -3.4210349 -3.07040 -2.725668\nalpha0[15]                        -1.65084 -1.4527339 -1.33440 -1.225843\nalpha0[16]                        -4.01515 -2.9289303 -2.40322 -1.867157\nalpha0[17]                        -2.45215 -2.0688720 -1.83895 -1.643022\nalpha0[18]                        -3.99960 -2.9348777 -2.43324 -1.947937\nalpha0[19]                        -4.15160 -3.1338258 -2.62995 -2.195683\nalpha0[20]                        -4.75962 -3.5853478 -2.95364 -2.444565\nalpha0[21]                        -3.87367 -3.2670129 -2.94765 -2.595226\nalpha0[22]                        -5.17172 -3.6581421 -2.93868 -2.181493\nalpha0[23]                        -3.97737 -3.3510117 -2.99892 -2.606322\nalpha0[24]                        -4.15361 -3.2038514 -2.70955 -2.262079\nalpha0[25]                        -1.28236 -1.0432615 -0.93969 -0.805774\nalpha0[26]                        -3.39089 -2.4888373 -1.99583 -1.530634\nalpha0[27]                        -4.25161 -3.1053482 -2.56653 -2.116959\nalpha0[28]                        -2.80976 -2.1026609 -1.80321 -1.512017\nalpha0[29]                        -4.90281 -3.5687046 -2.90794 -2.197728\nalpha0[30]                        -2.89563 -2.1174843 -1.76335 -1.422024\nalpha0[31]                        -4.87636 -3.5253876 -2.79609 -2.067761\nalpha0[32]                        -3.14918 -2.7039127 -2.41642 -2.175277\nalpha0[33]                        -1.69463 -1.2755353 -1.09656 -0.900771\nalpha0[34]                        -4.01769 -2.6384858 -1.93350 -1.344187\nalpha0[35]                        -4.83684 -3.6370976 -2.92050 -2.311737\nalpha0[36]                        -5.07643 -3.7401180 -2.95854 -2.327397\nalpha0[37]                        -3.07194 -2.1909346 -1.69905 -1.198141\nalpha0[38]                        -5.02866 -3.6721946 -2.98490 -2.330432\nalpha0[39]                        -4.10899 -2.7729499 -2.12373 -1.504104\nalpha0[40]                        -1.72091 -1.3982146 -1.25270 -1.102410\nalpha0[41]                        -4.96232 -3.5808735 -2.89785 -2.220689\nalpha0[42]                        -4.98595 -3.5682462 -2.93086 -2.288828\nalpha0[43]                        -5.09619 -3.5670786 -2.87259 -2.242942\nalpha0[44]                        -5.10663 -3.6587487 -2.98983 -2.324678\nalpha0[45]                        -4.23814 -2.7759542 -2.09211 -1.409058\nalpha0[46]                        -5.13613 -3.6368059 -2.87105 -2.206957\nalpha0[47]                        -2.99831 -2.1138956 -1.51701 -1.036336\nalpha0[48]                        -3.91001 -2.5326027 -1.83372 -1.228687\nalpha0[49]                        -5.23617 -3.5429635 -2.82309 -2.089478\nalpha0[50]                        -5.17822 -3.7454485 -3.08242 -2.373515\nalpha0[51]                        -5.08230 -3.5861064 -2.89308 -2.284865\nalpha0.mean                       -2.79755 -2.3891007 -2.21921 -2.062413\nalpha0.sigma                       0.73575  0.9138572  1.05406  1.197479\nbeta.ranef.categ.in_AP[1,1]        0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[2,1]        0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[3,1]        0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[4,1]        0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[5,1]        0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[6,1]        0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[7,1]        0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[8,1]        0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[9,1]        0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[10,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[11,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[12,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[13,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[14,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[15,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[16,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[17,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[18,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[19,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[20,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[21,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[22,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[23,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[24,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[25,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[26,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[27,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[28,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[29,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[30,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[31,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[32,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[33,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[34,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[35,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[36,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[37,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[38,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[39,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[40,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[41,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[42,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[43,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[44,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[45,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[46,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[47,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[48,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[49,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[50,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[51,1]       0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP[1,2]       -1.06574 -0.4198215 -0.11070  0.277954\nbeta.ranef.categ.in_AP[2,2]       -1.22192 -0.5821484 -0.22882  0.038497\nbeta.ranef.categ.in_AP[3,2]       -1.10697 -0.5250277 -0.22626  0.060363\nbeta.ranef.categ.in_AP[4,2]       -1.08302 -0.4715017 -0.16372  0.155136\nbeta.ranef.categ.in_AP[5,2]       -1.82423 -1.0702110 -0.71767 -0.371424\nbeta.ranef.categ.in_AP[6,2]       -2.76319 -1.9725680 -1.47517 -1.083580\nbeta.ranef.categ.in_AP[7,2]       -1.30616 -0.6064518 -0.32103  0.049278\nbeta.ranef.categ.in_AP[8,2]       -1.04227 -0.4520745 -0.14301  0.117939\nbeta.ranef.categ.in_AP[9,2]       -1.54519 -0.6809673 -0.32166  0.026221\nbeta.ranef.categ.in_AP[10,2]      -0.64880 -0.1102462  0.19988  0.516978\nbeta.ranef.categ.in_AP[11,2]      -2.14099 -1.0433556 -0.58805 -0.155221\nbeta.ranef.categ.in_AP[12,2]      -1.67741 -0.7937138 -0.44774 -0.052084\nbeta.ranef.categ.in_AP[13,2]      -1.55963 -0.6897218 -0.34274  0.074223\nbeta.ranef.categ.in_AP[14,2]      -1.51051 -0.7476343 -0.33972  0.047278\nbeta.ranef.categ.in_AP[15,2]      -0.76155 -0.1588831  0.17292  0.550910\nbeta.ranef.categ.in_AP[16,2]      -1.82940 -0.8853442 -0.47996 -0.058086\nbeta.ranef.categ.in_AP[17,2]      -1.47165 -0.8356139 -0.47180 -0.135603\nbeta.ranef.categ.in_AP[18,2]      -2.13329 -1.1120939 -0.65887 -0.248203\nbeta.ranef.categ.in_AP[19,2]      -1.60949 -0.8086774 -0.47102 -0.053724\nbeta.ranef.categ.in_AP[20,2]      -2.20620 -1.0525130 -0.65860 -0.259766\nbeta.ranef.categ.in_AP[21,2]      -1.64543 -0.9553675 -0.57666 -0.238891\nbeta.ranef.categ.in_AP[22,2]      -2.10632 -1.0714810 -0.58159 -0.236792\nbeta.ranef.categ.in_AP[23,2]      -1.74331 -0.9067200 -0.50525 -0.162303\nbeta.ranef.categ.in_AP[24,2]      -2.03090 -1.0912658 -0.68072 -0.285769\nbeta.ranef.categ.in_AP[25,2]      -1.55585 -0.9295887 -0.62899 -0.334802\nbeta.ranef.categ.in_AP[26,2]      -1.68965 -0.6858715 -0.33306  0.026673\nbeta.ranef.categ.in_AP[27,2]      -1.72031 -0.8440113 -0.40954 -0.033642\nbeta.ranef.categ.in_AP[28,2]      -1.10902 -0.4445825 -0.05171  0.309987\nbeta.ranef.categ.in_AP[29,2]      -1.56452 -0.7961589 -0.34091  0.108567\nbeta.ranef.categ.in_AP[30,2]      -1.05246 -0.3504718  0.01037  0.395424\nbeta.ranef.categ.in_AP[31,2]      -1.64576 -0.7438501 -0.32878  0.118973\nbeta.ranef.categ.in_AP[32,2]      -1.70563 -0.9296893 -0.53537 -0.195709\nbeta.ranef.categ.in_AP[33,2]      -1.30713 -0.7051350 -0.40233 -0.069670\nbeta.ranef.categ.in_AP[34,2]      -1.71086 -0.7775427 -0.36012  0.006738\nbeta.ranef.categ.in_AP[35,2]      -2.11571 -1.1941226 -0.70590 -0.327957\nbeta.ranef.categ.in_AP[36,2]      -2.00133 -0.9927804 -0.64572 -0.232010\nbeta.ranef.categ.in_AP[37,2]      -1.33616 -0.5366397 -0.20058  0.202176\nbeta.ranef.categ.in_AP[38,2]      -1.77278 -0.8073924 -0.38171  0.022951\nbeta.ranef.categ.in_AP[39,2]      -1.60781 -0.6762642 -0.30040  0.093848\nbeta.ranef.categ.in_AP[40,2]      -1.56047 -0.9594740 -0.64240 -0.298063\nbeta.ranef.categ.in_AP[41,2]      -1.74828 -0.8024213 -0.32554  0.019786\nbeta.ranef.categ.in_AP[42,2]      -1.28952 -0.5013389 -0.11946  0.241519\nbeta.ranef.categ.in_AP[43,2]      -1.55613 -0.6992069 -0.34665  0.080769\nbeta.ranef.categ.in_AP[44,2]      -1.72508 -0.7905957 -0.36779 -0.000639\nbeta.ranef.categ.in_AP[45,2]      -2.01302 -0.9567209 -0.57861 -0.209457\nbeta.ranef.categ.in_AP[46,2]      -1.95240 -1.0025634 -0.54354 -0.221075\nbeta.ranef.categ.in_AP[47,2]      -1.89508 -1.0135964 -0.62339 -0.256082\nbeta.ranef.categ.in_AP[48,2]      -2.20087 -0.9785695 -0.65149 -0.259522\nbeta.ranef.categ.in_AP[49,2]      -2.17456 -1.0257388 -0.57850 -0.158349\nbeta.ranef.categ.in_AP[50,2]      -2.04408 -1.0774138 -0.60773 -0.255898\nbeta.ranef.categ.in_AP[51,2]      -2.14146 -1.0248034 -0.55309 -0.152035\nbeta.ranef.categ.in_AP.mean[1]     0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP.mean[2]    -0.92555 -0.6074454 -0.43449 -0.257382\nbeta.ranef.categ.in_AP.sigma[1]    0.00000  0.0000000  0.00000  0.000000\nbeta.ranef.categ.in_AP.sigma[2]    0.27224  0.4638429  0.59375  0.736578\nbeta.ranef.cont.border_dist[1]    -1.19830 -0.8331474 -0.65804 -0.493078\nbeta.ranef.cont.border_dist[2]    -1.18135 -0.8602802 -0.64755 -0.453887\nbeta.ranef.cont.border_dist[3]    -1.10297 -0.8028312 -0.64929 -0.496433\nbeta.ranef.cont.border_dist[4]    -1.09748 -0.7100357 -0.50045 -0.328241\nbeta.ranef.cont.border_dist[5]    -1.40005 -0.9743029 -0.78281 -0.567676\nbeta.ranef.cont.border_dist[6]    -1.13787 -0.7974219 -0.60354 -0.398883\nbeta.ranef.cont.border_dist[7]    -1.48571 -1.0776982 -0.87965 -0.710489\nbeta.ranef.cont.border_dist[8]    -1.41873 -1.0736493 -0.90298 -0.728291\nbeta.ranef.cont.border_dist[9]    -1.23548 -0.8571681 -0.65759 -0.452134\nbeta.ranef.cont.border_dist[10]   -1.31079 -0.9711943 -0.79254 -0.632003\nbeta.ranef.cont.border_dist[11]   -1.24239 -0.8490631 -0.62372 -0.420053\nbeta.ranef.cont.border_dist[12]   -1.35161 -0.9349556 -0.72941 -0.506921\nbeta.ranef.cont.border_dist[13]   -1.09786 -0.7155909 -0.52487 -0.287150\nbeta.ranef.cont.border_dist[14]   -1.22492 -0.8521305 -0.65112 -0.440662\nbeta.ranef.cont.border_dist[15]   -1.61551 -1.1989635 -0.97737 -0.777762\nbeta.ranef.cont.border_dist[16]   -1.26187 -0.8135976 -0.61055 -0.359073\nbeta.ranef.cont.border_dist[17]   -1.45374 -1.0357389 -0.82852 -0.633151\nbeta.ranef.cont.border_dist[18]   -1.14708 -0.7516072 -0.51735 -0.266768\nbeta.ranef.cont.border_dist[19]   -1.23118 -0.8150253 -0.61555 -0.415243\nbeta.ranef.cont.border_dist[20]   -1.08298 -0.7040612 -0.48617 -0.238240\nbeta.ranef.cont.border_dist[21]   -1.55410 -1.0732868 -0.86391 -0.658736\nbeta.ranef.cont.border_dist[22]   -1.27268 -0.8520335 -0.65814 -0.407520\nbeta.ranef.cont.border_dist[23]   -1.28414 -0.8706830 -0.67035 -0.482662\nbeta.ranef.cont.border_dist[24]   -1.28070 -0.8340743 -0.64366 -0.431519\nbeta.ranef.cont.border_dist[25]   -1.32433 -0.9954482 -0.82075 -0.646380\nbeta.ranef.cont.border_dist[26]   -1.28415 -0.8741518 -0.69728 -0.478120\nbeta.ranef.cont.border_dist[27]   -1.24154 -0.8467561 -0.66683 -0.463452\nbeta.ranef.cont.border_dist[28]   -1.48570 -0.9994008 -0.79206 -0.577513\nbeta.ranef.cont.border_dist[29]   -1.43878 -0.9721328 -0.75932 -0.535410\nbeta.ranef.cont.border_dist[30]   -1.47196 -1.0337914 -0.86704 -0.670653\nbeta.ranef.cont.border_dist[31]   -1.34115 -0.9754675 -0.73479 -0.531765\nbeta.ranef.cont.border_dist[32]   -1.49047 -0.9990639 -0.80074 -0.623543\nbeta.ranef.cont.border_dist[33]   -1.43144 -0.9961325 -0.80424 -0.632051\nbeta.ranef.cont.border_dist[34]   -1.35214 -0.9426055 -0.72678 -0.510879\nbeta.ranef.cont.border_dist[35]   -1.16819 -0.8188446 -0.59776 -0.375205\nbeta.ranef.cont.border_dist[36]   -1.40145 -0.8778918 -0.69456 -0.468172\nbeta.ranef.cont.border_dist[37]   -1.47970 -0.9908201 -0.77770 -0.586975\nbeta.ranef.cont.border_dist[38]   -1.26738 -0.8692588 -0.64134 -0.426099\nbeta.ranef.cont.border_dist[39]   -1.44914 -0.9210007 -0.71062 -0.506259\nbeta.ranef.cont.border_dist[40]   -1.27403 -0.9320580 -0.76504 -0.591142\nbeta.ranef.cont.border_dist[41]   -1.33125 -0.9500034 -0.75939 -0.549027\nbeta.ranef.cont.border_dist[42]   -1.50849 -1.0248907 -0.78577 -0.601380\nbeta.ranef.cont.border_dist[43]   -1.41453 -0.9777379 -0.75469 -0.513423\nbeta.ranef.cont.border_dist[44]   -1.27563 -0.8570021 -0.64151 -0.437539\nbeta.ranef.cont.border_dist[45]   -1.15060 -0.7814682 -0.56195 -0.314202\nbeta.ranef.cont.border_dist[46]   -1.16377 -0.7990535 -0.57861 -0.353200\nbeta.ranef.cont.border_dist[47]   -1.21266 -0.8079498 -0.59951 -0.375044\nbeta.ranef.cont.border_dist[48]   -1.26533 -0.8040110 -0.62193 -0.425448\nbeta.ranef.cont.border_dist[49]   -1.21343 -0.8109560 -0.59599 -0.355237\nbeta.ranef.cont.border_dist[50]   -1.28663 -0.9040519 -0.70975 -0.469101\nbeta.ranef.cont.border_dist[51]   -1.25720 -0.8472549 -0.65635 -0.428350\nbeta.ranef.cont.border_dist.mean  -1.03099 -0.8057973 -0.69314 -0.571637\nbeta.ranef.cont.border_dist.sigma  0.16674  0.2345315  0.28401  0.354088\nbeta.ranef.cont.elev[1]           -0.40813 -0.1154169  0.02474  0.175605\nbeta.ranef.cont.elev[2]           -0.38434  0.0044427  0.17252  0.342348\nbeta.ranef.cont.elev[3]           -0.25953 -0.0207785  0.10653  0.229817\nbeta.ranef.cont.elev[4]           -0.32781  0.0720896  0.23906  0.408722\nbeta.ranef.cont.elev[5]           -0.46896 -0.1305222  0.05803  0.221001\nbeta.ranef.cont.elev[6]           -0.89843 -0.4334002 -0.24293 -0.080245\nbeta.ranef.cont.elev[7]           -0.39073 -0.0676575  0.09043  0.243719\nbeta.ranef.cont.elev[8]           -0.41258 -0.1017563  0.03912  0.201351\nbeta.ranef.cont.elev[9]           -0.22686  0.0993706  0.28150  0.467503\nbeta.ranef.cont.elev[10]          -0.11828  0.1775707  0.29964  0.430089\nbeta.ranef.cont.elev[11]          -0.38103 -0.0052268  0.20527  0.452735\nbeta.ranef.cont.elev[12]          -0.49063 -0.0308531  0.17263  0.389679\nbeta.ranef.cont.elev[13]           0.07657  0.3979929  0.56882  0.822436\nbeta.ranef.cont.elev[14]          -0.58444 -0.1042313  0.09000  0.274300\nbeta.ranef.cont.elev[15]          -0.60742 -0.1951104 -0.01444  0.157748\nbeta.ranef.cont.elev[16]          -0.56084 -0.0452128  0.15999  0.371440\nbeta.ranef.cont.elev[17]          -0.47218 -0.1385015  0.04974  0.224134\nbeta.ranef.cont.elev[18]          -0.06964  0.3026508  0.50225  0.735681\nbeta.ranef.cont.elev[19]          -0.17639  0.1821326  0.38468  0.582305\nbeta.ranef.cont.elev[20]          -0.22919  0.1572308  0.36719  0.609894\nbeta.ranef.cont.elev[21]          -0.63810 -0.2003543  0.03203  0.235133\nbeta.ranef.cont.elev[22]          -0.47794  0.0001527  0.18591  0.397980\nbeta.ranef.cont.elev[23]          -0.79718 -0.2347906 -0.03341  0.162676\nbeta.ranef.cont.elev[24]          -0.58162 -0.1250738  0.11631  0.303587\nbeta.ranef.cont.elev[25]          -0.64290 -0.2758367 -0.09987  0.073954\nbeta.ranef.cont.elev[26]          -0.13138  0.2002354  0.39791  0.606522\nbeta.ranef.cont.elev[27]          -0.54593 -0.0896493  0.11447  0.306203\nbeta.ranef.cont.elev[28]          -0.54769 -0.0924973  0.07321  0.265524\nbeta.ranef.cont.elev[29]          -0.51213 -0.0745167  0.13606  0.358570\nbeta.ranef.cont.elev[30]          -0.39318 -0.0013072  0.19534  0.393840\nbeta.ranef.cont.elev[31]          -0.61949 -0.0961372  0.11504  0.311787\nbeta.ranef.cont.elev[32]          -0.53800 -0.1361661  0.03466  0.210829\nbeta.ranef.cont.elev[33]          -0.67594 -0.2572624 -0.03970  0.152697\nbeta.ranef.cont.elev[34]          -0.56576 -0.1224273  0.10418  0.316616\nbeta.ranef.cont.elev[35]          -0.49026 -0.0401265  0.18748  0.378328\nbeta.ranef.cont.elev[36]          -0.65887 -0.0708456  0.15571  0.371113\nbeta.ranef.cont.elev[37]          -0.64875 -0.1418314  0.07623  0.277150\nbeta.ranef.cont.elev[38]          -0.53605 -0.0293492  0.17048  0.391653\nbeta.ranef.cont.elev[39]          -0.53561 -0.0520227  0.12621  0.303091\nbeta.ranef.cont.elev[40]          -0.40728 -0.0722314  0.09534  0.228700\nbeta.ranef.cont.elev[41]          -0.61253 -0.1082079  0.12964  0.337959\nbeta.ranef.cont.elev[42]          -0.56854 -0.1238820  0.09219  0.328436\nbeta.ranef.cont.elev[43]          -0.62432 -0.1237207  0.09989  0.311273\nbeta.ranef.cont.elev[44]          -0.28577  0.0674208  0.29343  0.514411\nbeta.ranef.cont.elev[45]          -0.49431  0.0158941  0.21028  0.442592\nbeta.ranef.cont.elev[46]          -0.42396  0.0408521  0.25064  0.451716\nbeta.ranef.cont.elev[47]          -0.09263  0.2289705  0.43122  0.661981\nbeta.ranef.cont.elev[48]          -0.39283  0.0419309  0.23952  0.450010\nbeta.ranef.cont.elev[49]          -0.41646  0.0308881  0.20548  0.428345\nbeta.ranef.cont.elev[50]          -0.51623 -0.0779928  0.13370  0.365079\nbeta.ranef.cont.elev[51]          -0.47362 -0.0969985  0.13482  0.336886\nbeta.ranef.cont.elev.mean         -0.09620  0.0754702  0.15832  0.247456\nbeta.ranef.cont.elev.sigma         0.17474  0.2665363  0.31778  0.380137\nbeta0[1]                           0.50328  0.8070502  0.98568  1.160623\nbeta0[2]                          -2.29776 -1.7984002 -1.57748 -1.335733\nbeta0[3]                          -0.26184 -0.0034278  0.13982  0.273931\nbeta0[4]                          -1.37828 -0.9027160 -0.61450 -0.324597\nbeta0[5]                          -1.16018 -0.7985555 -0.52603 -0.297945\nbeta0[6]                          -1.41308 -0.9791524 -0.75625 -0.571841\nbeta0[7]                           0.38970  0.7215768  0.88436  1.058691\nbeta0[8]                          -0.31877  0.0059597  0.15531  0.327672\nbeta0[9]                          -2.66825 -1.8541842 -1.29301 -0.764157\nbeta0[10]                         -0.50164 -0.1988379 -0.05519  0.092271\nbeta0[11]                         -5.58691 -4.2356715 -3.50189 -2.734786\nbeta0[12]                         -3.39842 -2.4635884 -1.87405 -1.214393\nbeta0[13]                         -3.28360 -2.5579528 -2.05834 -1.606365\nbeta0[14]                         -1.95864 -1.0673970 -0.56070  0.015615\nbeta0[15]                         -1.38648 -0.9903403 -0.76821 -0.555647\nbeta0[16]                         -4.46123 -3.5276654 -3.01172 -2.417790\nbeta0[17]                         -1.78438 -1.2940466 -1.05948 -0.806167\nbeta0[18]                         -4.52864 -3.4423187 -2.93698 -2.447610\nbeta0[19]                         -3.14673 -2.3960801 -1.96089 -1.422665\nbeta0[20]                         -4.29482 -3.2167403 -2.60985 -1.850766\nbeta0[21]                         -1.68387 -0.9809485 -0.56993 -0.112842\nbeta0[22]                         -5.65274 -4.1811411 -3.46552 -2.587886\nbeta0[23]                         -1.95080 -1.3158675 -0.80796 -0.277894\nbeta0[24]                         -3.14650 -2.4932391 -1.94415 -1.406671\nbeta0[25]                         -1.32626 -1.0125499 -0.85973 -0.686161\nbeta0[26]                         -4.19321 -3.4894450 -3.01516 -2.579725\nbeta0[27]                         -3.81530 -2.8163730 -2.34779 -1.845932\nbeta0[28]                         -3.57887 -2.9084764 -2.55485 -2.203739\nbeta0[29]                         -5.88364 -4.3969816 -3.64106 -2.869484\nbeta0[30]                         -3.75750 -3.1004596 -2.74647 -2.321037\nbeta0[31]                         -5.85926 -4.4810812 -3.69521 -3.014062\nbeta0[32]                         -1.43634 -0.8489516 -0.49456 -0.101155\nbeta0[33]                         -3.04714 -2.5915039 -2.30938 -2.013114\nbeta0[34]                         -6.02589 -4.7763432 -4.08175 -3.511799\nbeta0[35]                         -4.32563 -3.1401450 -2.56050 -1.894774\nbeta0[36]                         -5.59920 -4.1311998 -3.36468 -2.645464\nbeta0[37]                         -5.63475 -4.4570900 -3.91964 -3.453406\nbeta0[38]                         -4.76836 -3.6614556 -2.96144 -2.122577\nbeta0[39]                         -6.09213 -4.6806719 -4.01593 -3.441733\nbeta0[40]                         -1.44793 -1.1113699 -0.93741 -0.753421\nbeta0[41]                         -5.59035 -4.2444619 -3.59580 -2.909981\nbeta0[42]                         -5.17848 -3.8946764 -3.22491 -2.612994\nbeta0[43]                         -5.89024 -4.2924743 -3.69746 -2.995014\nbeta0[44]                         -4.99834 -3.6250687 -2.97671 -2.248373\nbeta0[45]                         -5.73758 -4.5479148 -3.99453 -3.362938\nbeta0[46]                         -5.93193 -4.2362149 -3.53540 -2.741852\nbeta0[47]                         -5.36812 -4.2513954 -3.75442 -3.305407\nbeta0[48]                         -6.23956 -4.6460594 -4.06178 -3.391170\nbeta0[49]                         -6.01557 -4.3520692 -3.58610 -2.787959\nbeta0[50]                         -5.52706 -4.2218417 -3.50146 -2.732008\nbeta0[51]                         -5.73908 -4.2251659 -3.44674 -2.661437\nbeta0.mean                        -2.82835 -2.3977025 -2.15438 -1.933948\nbeta0.sigma                        1.27678  1.5143659  1.64758  1.786710\n                                      97.5%\nNspecies                          51.000000\nNspecies_station[1]                9.000000\nNspecies_station[2]               10.000000\nNspecies_station[3]                8.000000\nNspecies_station[4]                8.000000\nNspecies_station[5]                7.000000\nNspecies_station[6]               12.000000\nNspecies_station[7]               10.000000\nNspecies_station[8]               12.000000\nNspecies_station[9]                7.000000\nNspecies_station[10]               9.000000\nNspecies_station[11]              10.000000\nNspecies_station[12]               8.525000\nNspecies_station[13]               8.000000\nNspecies_station[14]              11.000000\nNspecies_station[15]              10.000000\nNspecies_station[16]              14.000000\nNspecies_station[17]              11.000000\nNspecies_station[18]               9.000000\nNspecies_station[19]              10.000000\nNspecies_station[20]              13.000000\nNspecies_station[21]              16.000000\nNspecies_station[22]              12.000000\nNspecies_station[23]               7.000000\nNspecies_station[24]               9.000000\nNspecies_station[25]               7.000000\nNspecies_station[26]              11.000000\nNspecies_station[27]              14.000000\nNspecies_station[28]               7.000000\nNspecies_station[29]              14.000000\nNspecies_station[30]              15.000000\nNspecies_station[31]              14.000000\nNspecies_station[32]              18.000000\nNspecies_station[33]              16.000000\nNspecies_station[34]              16.000000\nNspecies_station[35]              19.000000\nNspecies_station[36]              14.525000\nNspecies_station[37]              18.000000\nNspecies_station[38]              17.000000\nNspecies_station[39]              15.000000\nNspecies_station[40]              15.000000\nNspecies_station[41]              17.000000\nNspecies_station[42]              16.000000\nNspecies_station[43]              19.000000\nNspecies_station[44]              17.000000\nNspecies_station[45]              15.000000\nNspecies_station[46]              15.000000\nNspecies_station[47]              16.000000\nNspecies_station[48]              16.000000\nNspecies_station[49]              19.000000\nNspecies_station[50]              14.000000\nNspecies_station[51]              14.000000\nNspecies_station[52]              17.000000\nNspecies_station[53]              20.000000\nNspecies_station[54]              15.000000\nNspecies_station[55]              17.000000\nNspecies_station[56]              16.000000\nNspecies_station[57]              18.000000\nNspecies_station[58]              18.000000\nNspecies_station[59]              11.000000\nNspecies_station[60]              10.000000\nNspecies_station[61]              11.000000\nNspecies_station[62]               8.000000\nNspecies_station[63]              14.000000\nNspecies_station[64]              15.000000\nNspecies_station[65]              13.525000\nNspecies_station[66]              14.000000\nNspecies_station[67]              11.000000\nNspecies_station[68]              14.525000\nNspecies_station[69]              11.000000\nNspecies_station[70]              10.000000\nNspecies_station[71]              11.000000\nNspecies_station[72]              12.000000\nNspecies_station[73]              14.000000\nNspecies_station[74]              14.000000\nNspecies_station[75]              13.000000\nNspecies_station[76]              14.000000\nNspecies_station[77]              11.000000\nNspecies_station[78]              10.000000\nNspecies_station[79]              13.000000\nNspecies_station[80]              12.000000\nNspecies_station[81]              16.000000\nNspecies_station[82]              11.000000\nNspecies_station[83]              15.000000\nNspecies_station[84]              11.000000\nNspecies_station[85]              12.000000\nNspecies_station[86]              11.000000\nNspecies_station[87]              11.000000\nNspecies_station[88]              14.000000\nNspecies_station[89]              21.000000\nNspecies_station[90]              19.000000\nNspecies_station[91]              21.000000\nNspecies_station[92]              14.000000\nNspecies_station[93]              20.000000\nNspecies_station[94]              18.000000\nNspecies_station[95]              19.000000\nNspecies_station[96]              20.000000\nNspecies_station[97]              19.525000\nNspecies_station[98]              16.000000\nNspecies_station[99]              21.000000\nNspecies_station[100]             21.000000\nNspecies_station[101]             20.000000\nNspecies_station[102]             22.000000\nNspecies_station[103]             14.000000\nNspecies_station[104]             16.000000\nNspecies_station[105]             19.000000\nNspecies_station[106]             15.525000\nNspecies_station[107]             17.000000\nNspecies_station[108]             17.000000\nNspecies_station[109]             17.000000\nNspecies_station[110]             17.000000\nNspecies_station[111]             16.000000\nNspecies_station[112]             17.000000\nNspecies_station[113]              6.000000\nNspecies_station[114]              8.000000\nNspecies_station[115]              9.000000\nNspecies_station[116]             11.000000\nNspecies_station[117]              8.000000\nNspecies_station[118]             10.000000\nNspecies_station[119]             12.000000\nNspecies_station[120]             10.000000\nNspecies_station[121]             10.000000\nNspecies_station[122]              6.525000\nNspecies_station[123]             12.000000\nNspecies_station[124]             13.000000\nNspecies_station[125]             10.000000\nNspecies_station[126]              8.525000\nNspecies_station[127]             12.000000\nNspecies_station[128]              8.000000\nNspecies_station[129]              9.000000\nNspecies_station[130]             10.000000\nNspecies_station[131]             13.000000\nNspecies_station[132]             10.000000\nNspecies_station[133]             11.000000\nNspecies_station[134]             13.000000\nNspecies_station[135]             10.000000\nNspecies_station[136]              9.000000\nNspecies_station[137]             10.000000\nNspecies_station[138]              9.000000\nNspecies_station[139]             14.000000\nNspecies_station[140]             10.000000\nNspecies_station[141]              8.000000\nNspecies_station[142]             11.000000\nNspecies_station[143]             18.000000\nNspecies_station[144]             18.000000\nNspecies_station[145]             11.000000\nNspecies_station[146]             15.000000\nNspecies_station[147]             13.525000\nNspecies_station[148]             17.000000\nNspecies_station[149]             14.000000\nNspecies_station[150]             16.000000\nNspecies_station[151]             17.000000\nNspecies_station[152]             18.000000\nNspecies_station[153]             12.000000\nNspecies_station[154]             18.000000\nNspecies_station[155]             13.000000\nNspecies_station[156]             19.000000\nNspecies_station[157]             12.000000\nNspecies_station[158]             13.000000\nNspecies_station[159]             16.000000\nNspecies_station[160]             16.000000\nNspecies_station[161]             14.000000\nNspecies_station[162]             17.525000\nNspecies_station[163]             13.525000\nNspecies_station[164]             13.000000\nNspecies_station[165]             13.000000\nNspecies_station[166]             15.000000\nNspecies_station[167]             16.000000\nNspecies_station[168]             14.000000\nNspecies_station[169]             14.000000\nNspecies_station[170]             13.000000\nNspecies_station[171]             17.000000\nNspecies_station[172]             14.000000\nalpha.obs.fixed.cont.effort        0.355333\nalpha0[1]                         -0.579676\nalpha0[2]                         -0.940653\nalpha0[3]                         -0.305284\nalpha0[4]                         -1.550324\nalpha0[5]                         -1.373137\nalpha0[6]                         -0.965679\nalpha0[7]                         -0.732247\nalpha0[8]                         -0.717061\nalpha0[9]                         -1.723514\nalpha0[10]                        -0.152863\nalpha0[11]                        -1.154345\nalpha0[12]                        -1.766782\nalpha0[13]                        -1.423860\nalpha0[14]                        -2.044365\nalpha0[15]                        -1.003269\nalpha0[16]                        -1.025941\nalpha0[17]                        -1.341259\nalpha0[18]                        -1.158348\nalpha0[19]                        -1.515754\nalpha0[20]                        -1.510576\nalpha0[21]                        -1.987542\nalpha0[22]                        -0.952288\nalpha0[23]                        -2.018363\nalpha0[24]                        -1.485981\nalpha0[25]                        -0.580090\nalpha0[26]                        -0.744810\nalpha0[27]                        -1.365665\nalpha0[28]                        -1.037383\nalpha0[29]                        -1.154026\nalpha0[30]                        -0.917389\nalpha0[31]                        -0.890479\nalpha0[32]                        -1.747172\nalpha0[33]                        -0.591932\nalpha0[34]                        -0.270627\nalpha0[35]                        -1.491818\nalpha0[36]                        -1.022440\nalpha0[37]                        -0.342500\nalpha0[38]                        -1.406021\nalpha0[39]                        -0.399313\nalpha0[40]                        -0.852664\nalpha0[41]                        -1.060287\nalpha0[42]                        -1.304885\nalpha0[43]                        -1.249509\nalpha0[44]                        -1.372702\nalpha0[45]                        -0.188638\nalpha0[46]                        -0.911393\nalpha0[47]                        -0.202945\nalpha0[48]                        -0.044574\nalpha0[49]                        -0.732546\nalpha0[50]                        -1.118577\nalpha0[51]                        -1.032182\nalpha0.mean                       -1.819144\nalpha0.sigma                       1.545684\nbeta.ranef.categ.in_AP[1,1]        0.000000\nbeta.ranef.categ.in_AP[2,1]        0.000000\nbeta.ranef.categ.in_AP[3,1]        0.000000\nbeta.ranef.categ.in_AP[4,1]        0.000000\nbeta.ranef.categ.in_AP[5,1]        0.000000\nbeta.ranef.categ.in_AP[6,1]        0.000000\nbeta.ranef.categ.in_AP[7,1]        0.000000\nbeta.ranef.categ.in_AP[8,1]        0.000000\nbeta.ranef.categ.in_AP[9,1]        0.000000\nbeta.ranef.categ.in_AP[10,1]       0.000000\nbeta.ranef.categ.in_AP[11,1]       0.000000\nbeta.ranef.categ.in_AP[12,1]       0.000000\nbeta.ranef.categ.in_AP[13,1]       0.000000\nbeta.ranef.categ.in_AP[14,1]       0.000000\nbeta.ranef.categ.in_AP[15,1]       0.000000\nbeta.ranef.categ.in_AP[16,1]       0.000000\nbeta.ranef.categ.in_AP[17,1]       0.000000\nbeta.ranef.categ.in_AP[18,1]       0.000000\nbeta.ranef.categ.in_AP[19,1]       0.000000\nbeta.ranef.categ.in_AP[20,1]       0.000000\nbeta.ranef.categ.in_AP[21,1]       0.000000\nbeta.ranef.categ.in_AP[22,1]       0.000000\nbeta.ranef.categ.in_AP[23,1]       0.000000\nbeta.ranef.categ.in_AP[24,1]       0.000000\nbeta.ranef.categ.in_AP[25,1]       0.000000\nbeta.ranef.categ.in_AP[26,1]       0.000000\nbeta.ranef.categ.in_AP[27,1]       0.000000\nbeta.ranef.categ.in_AP[28,1]       0.000000\nbeta.ranef.categ.in_AP[29,1]       0.000000\nbeta.ranef.categ.in_AP[30,1]       0.000000\nbeta.ranef.categ.in_AP[31,1]       0.000000\nbeta.ranef.categ.in_AP[32,1]       0.000000\nbeta.ranef.categ.in_AP[33,1]       0.000000\nbeta.ranef.categ.in_AP[34,1]       0.000000\nbeta.ranef.categ.in_AP[35,1]       0.000000\nbeta.ranef.categ.in_AP[36,1]       0.000000\nbeta.ranef.categ.in_AP[37,1]       0.000000\nbeta.ranef.categ.in_AP[38,1]       0.000000\nbeta.ranef.categ.in_AP[39,1]       0.000000\nbeta.ranef.categ.in_AP[40,1]       0.000000\nbeta.ranef.categ.in_AP[41,1]       0.000000\nbeta.ranef.categ.in_AP[42,1]       0.000000\nbeta.ranef.categ.in_AP[43,1]       0.000000\nbeta.ranef.categ.in_AP[44,1]       0.000000\nbeta.ranef.categ.in_AP[45,1]       0.000000\nbeta.ranef.categ.in_AP[46,1]       0.000000\nbeta.ranef.categ.in_AP[47,1]       0.000000\nbeta.ranef.categ.in_AP[48,1]       0.000000\nbeta.ranef.categ.in_AP[49,1]       0.000000\nbeta.ranef.categ.in_AP[50,1]       0.000000\nbeta.ranef.categ.in_AP[51,1]       0.000000\nbeta.ranef.categ.in_AP[1,2]        1.017088\nbeta.ranef.categ.in_AP[2,2]        0.730176\nbeta.ranef.categ.in_AP[3,2]        0.681239\nbeta.ranef.categ.in_AP[4,2]        0.880132\nbeta.ranef.categ.in_AP[5,2]        0.285718\nbeta.ranef.categ.in_AP[6,2]       -0.362780\nbeta.ranef.categ.in_AP[7,2]        0.701455\nbeta.ranef.categ.in_AP[8,2]        0.805461\nbeta.ranef.categ.in_AP[9,2]        0.792795\nbeta.ranef.categ.in_AP[10,2]       1.157252\nbeta.ranef.categ.in_AP[11,2]       0.671292\nbeta.ranef.categ.in_AP[12,2]       0.730082\nbeta.ranef.categ.in_AP[13,2]       0.813432\nbeta.ranef.categ.in_AP[14,2]       0.881266\nbeta.ranef.categ.in_AP[15,2]       1.344323\nbeta.ranef.categ.in_AP[16,2]       0.731371\nbeta.ranef.categ.in_AP[17,2]       0.561995\nbeta.ranef.categ.in_AP[18,2]       0.459504\nbeta.ranef.categ.in_AP[19,2]       0.688073\nbeta.ranef.categ.in_AP[20,2]       0.531416\nbeta.ranef.categ.in_AP[21,2]       0.676460\nbeta.ranef.categ.in_AP[22,2]       0.544143\nbeta.ranef.categ.in_AP[23,2]       0.585412\nbeta.ranef.categ.in_AP[24,2]       0.412077\nbeta.ranef.categ.in_AP[25,2]       0.259777\nbeta.ranef.categ.in_AP[26,2]       0.805171\nbeta.ranef.categ.in_AP[27,2]       0.729528\nbeta.ranef.categ.in_AP[28,2]       1.277664\nbeta.ranef.categ.in_AP[29,2]       0.955348\nbeta.ranef.categ.in_AP[30,2]       1.294963\nbeta.ranef.categ.in_AP[31,2]       1.197753\nbeta.ranef.categ.in_AP[32,2]       0.515862\nbeta.ranef.categ.in_AP[33,2]       0.589605\nbeta.ranef.categ.in_AP[34,2]       0.895492\nbeta.ranef.categ.in_AP[35,2]       0.485391\nbeta.ranef.categ.in_AP[36,2]       0.746923\nbeta.ranef.categ.in_AP[37,2]       0.957353\nbeta.ranef.categ.in_AP[38,2]       0.886201\nbeta.ranef.categ.in_AP[39,2]       1.034210\nbeta.ranef.categ.in_AP[40,2]       0.230545\nbeta.ranef.categ.in_AP[41,2]       0.824228\nbeta.ranef.categ.in_AP[42,2]       1.303768\nbeta.ranef.categ.in_AP[43,2]       0.910998\nbeta.ranef.categ.in_AP[44,2]       0.846575\nbeta.ranef.categ.in_AP[45,2]       0.740768\nbeta.ranef.categ.in_AP[46,2]       0.602332\nbeta.ranef.categ.in_AP[47,2]       0.652823\nbeta.ranef.categ.in_AP[48,2]       0.691092\nbeta.ranef.categ.in_AP[49,2]       0.677606\nbeta.ranef.categ.in_AP[50,2]       0.517997\nbeta.ranef.categ.in_AP[51,2]       0.651585\nbeta.ranef.categ.in_AP.mean[1]     0.000000\nbeta.ranef.categ.in_AP.mean[2]     0.092693\nbeta.ranef.categ.in_AP.sigma[1]    0.000000\nbeta.ranef.categ.in_AP.sigma[2]    1.032534\nbeta.ranef.cont.border_dist[1]    -0.103370\nbeta.ranef.cont.border_dist[2]    -0.082537\nbeta.ranef.cont.border_dist[3]    -0.160156\nbeta.ranef.cont.border_dist[4]     0.094852\nbeta.ranef.cont.border_dist[5]    -0.215067\nbeta.ranef.cont.border_dist[6]    -0.015760\nbeta.ranef.cont.border_dist[7]    -0.396929\nbeta.ranef.cont.border_dist[8]    -0.351928\nbeta.ranef.cont.border_dist[9]    -0.021112\nbeta.ranef.cont.border_dist[10]   -0.333978\nbeta.ranef.cont.border_dist[11]    0.055146\nbeta.ranef.cont.border_dist[12]   -0.149962\nbeta.ranef.cont.border_dist[13]    0.194519\nbeta.ranef.cont.border_dist[14]    0.090881\nbeta.ranef.cont.border_dist[15]   -0.397276\nbeta.ranef.cont.border_dist[16]    0.135731\nbeta.ranef.cont.border_dist[17]   -0.264250\nbeta.ranef.cont.border_dist[18]    0.234115\nbeta.ranef.cont.border_dist[19]    0.035762\nbeta.ranef.cont.border_dist[20]    0.299800\nbeta.ranef.cont.border_dist[21]   -0.250801\nbeta.ranef.cont.border_dist[22]    0.088917\nbeta.ranef.cont.border_dist[23]   -0.036871\nbeta.ranef.cont.border_dist[24]    0.064794\nbeta.ranef.cont.border_dist[25]   -0.275824\nbeta.ranef.cont.border_dist[26]   -0.052239\nbeta.ranef.cont.border_dist[27]   -0.010067\nbeta.ranef.cont.border_dist[28]   -0.169131\nbeta.ranef.cont.border_dist[29]   -0.025192\nbeta.ranef.cont.border_dist[30]   -0.214104\nbeta.ranef.cont.border_dist[31]   -0.103349\nbeta.ranef.cont.border_dist[32]   -0.228290\nbeta.ranef.cont.border_dist[33]   -0.211081\nbeta.ranef.cont.border_dist[34]   -0.056875\nbeta.ranef.cont.border_dist[35]    0.164582\nbeta.ranef.cont.border_dist[36]    0.027799\nbeta.ranef.cont.border_dist[37]   -0.166824\nbeta.ranef.cont.border_dist[38]    0.023179\nbeta.ranef.cont.border_dist[39]   -0.029494\nbeta.ranef.cont.border_dist[40]   -0.217243\nbeta.ranef.cont.border_dist[41]   -0.141108\nbeta.ranef.cont.border_dist[42]   -0.177169\nbeta.ranef.cont.border_dist[43]   -0.066015\nbeta.ranef.cont.border_dist[44]   -0.020237\nbeta.ranef.cont.border_dist[45]    0.183046\nbeta.ranef.cont.border_dist[46]    0.121736\nbeta.ranef.cont.border_dist[47]    0.079440\nbeta.ranef.cont.border_dist[48]    0.058115\nbeta.ranef.cont.border_dist[49]    0.160563\nbeta.ranef.cont.border_dist[50]    0.007897\nbeta.ranef.cont.border_dist[51]    0.041362\nbeta.ranef.cont.border_dist.mean  -0.339914\nbeta.ranef.cont.border_dist.sigma  0.494300\nbeta.ranef.cont.elev[1]            0.431301\nbeta.ranef.cont.elev[2]            0.708565\nbeta.ranef.cont.elev[3]            0.477065\nbeta.ranef.cont.elev[4]            0.785119\nbeta.ranef.cont.elev[5]            0.566364\nbeta.ranef.cont.elev[6]            0.249150\nbeta.ranef.cont.elev[7]            0.559856\nbeta.ranef.cont.elev[8]            0.461571\nbeta.ranef.cont.elev[9]            0.872316\nbeta.ranef.cont.elev[10]           0.684282\nbeta.ranef.cont.elev[11]           0.930240\nbeta.ranef.cont.elev[12]           0.826401\nbeta.ranef.cont.elev[13]           1.354874\nbeta.ranef.cont.elev[14]           0.704935\nbeta.ranef.cont.elev[15]           0.442370\nbeta.ranef.cont.elev[16]           0.793287\nbeta.ranef.cont.elev[17]           0.600273\nbeta.ranef.cont.elev[18]           1.251141\nbeta.ranef.cont.elev[19]           1.048612\nbeta.ranef.cont.elev[20]           1.135870\nbeta.ranef.cont.elev[21]           0.645029\nbeta.ranef.cont.elev[22]           0.848395\nbeta.ranef.cont.elev[23]           0.585984\nbeta.ranef.cont.elev[24]           0.718603\nbeta.ranef.cont.elev[25]           0.361465\nbeta.ranef.cont.elev[26]           0.995070\nbeta.ranef.cont.elev[27]           0.708722\nbeta.ranef.cont.elev[28]           0.620119\nbeta.ranef.cont.elev[29]           0.907478\nbeta.ranef.cont.elev[30]           0.804057\nbeta.ranef.cont.elev[31]           0.805039\nbeta.ranef.cont.elev[32]           0.576333\nbeta.ranef.cont.elev[33]           0.460540\nbeta.ranef.cont.elev[34]           0.712200\nbeta.ranef.cont.elev[35]           0.848824\nbeta.ranef.cont.elev[36]           0.860320\nbeta.ranef.cont.elev[37]           0.698036\nbeta.ranef.cont.elev[38]           0.816070\nbeta.ranef.cont.elev[39]           0.800021\nbeta.ranef.cont.elev[40]           0.509299\nbeta.ranef.cont.elev[41]           0.795996\nbeta.ranef.cont.elev[42]           0.788316\nbeta.ranef.cont.elev[43]           0.812916\nbeta.ranef.cont.elev[44]           1.021677\nbeta.ranef.cont.elev[45]           0.891561\nbeta.ranef.cont.elev[46]           0.854404\nbeta.ranef.cont.elev[47]           1.095075\nbeta.ranef.cont.elev[48]           0.869517\nbeta.ranef.cont.elev[49]           0.826390\nbeta.ranef.cont.elev[50]           0.798767\nbeta.ranef.cont.elev[51]           0.776764\nbeta.ranef.cont.elev.mean          0.408941\nbeta.ranef.cont.elev.sigma         0.546188\nbeta0[1]                           1.544901\nbeta0[2]                          -0.885625\nbeta0[3]                           0.578837\nbeta0[4]                           0.633284\nbeta0[5]                           0.266088\nbeta0[6]                          -0.114983\nbeta0[7]                           1.467837\nbeta0[8]                           0.610707\nbeta0[9]                           0.769379\nbeta0[10]                          0.372216\nbeta0[11]                         -1.300840\nbeta0[12]                          0.289134\nbeta0[13]                         -0.568519\nbeta0[14]                          1.421422\nbeta0[15]                         -0.215036\nbeta0[16]                         -1.293697\nbeta0[17]                         -0.223841\nbeta0[18]                         -1.139061\nbeta0[19]                         -0.156806\nbeta0[20]                         -0.377718\nbeta0[21]                          1.336962\nbeta0[22]                         -0.852905\nbeta0[23]                          1.283830\nbeta0[24]                         -0.253581\nbeta0[25]                         -0.360459\nbeta0[26]                         -1.476820\nbeta0[27]                         -0.334344\nbeta0[28]                         -1.413937\nbeta0[29]                         -1.190562\nbeta0[30]                         -1.519622\nbeta0[31]                         -1.303898\nbeta0[32]                          0.816381\nbeta0[33]                         -1.577096\nbeta0[34]                         -2.090295\nbeta0[35]                         -0.346188\nbeta0[36]                         -0.976435\nbeta0[37]                         -2.470514\nbeta0[38]                         -0.185487\nbeta0[39]                         -2.161655\nbeta0[40]                         -0.386684\nbeta0[41]                         -1.438696\nbeta0[42]                         -0.931218\nbeta0[43]                         -1.261668\nbeta0[44]                         -0.306028\nbeta0[45]                         -1.767846\nbeta0[46]                         -0.882525\nbeta0[47]                         -2.330986\nbeta0[48]                         -2.246358\nbeta0[49]                         -1.018022\nbeta0[50]                         -1.062434\nbeta0[51]                         -0.908464\nbeta0.mean                        -1.520230\nbeta0.sigma                        2.110161\n\n\nResults as table\n\nCode# Resultados --------------------------------------------------------------\n\n# Extraemos lo tabla de valores estimados\nmodresult &lt;- as.data.frame(summary(fit.commu)[[\"statistics\"]])\n# View(modresult)\nDT::datatable(round(summary(fit.commu)$statistics, 3))\n\n\n\n\n\nBayesian p-values can be inspected to check for lack of fit (overall or by species). Lack of fit at significance level = 0.05 is indicated by Bayesian p-values below 0.025 or greater than 0.975. The overall Bayesian p-value (Bpvalue) indicates no problems with lack of fit. Likewise, species-level Bayesian p-values (Bpvalue_species) indicate no lack of fit for any species.\nDiagnostics\n\nCode# Extract posterior draws for later use\nposterior1 &lt;- as.array(fit.commu)\n\n#mcmc_trace(fit.commu, parms = c(\"beta.ranef.cont.border_dist.mean\"))\n\n#posterior2 &lt;- extract(fit.commu, inc_warmup = TRUE, permuted = FALSE)\n\n#color_scheme_set(\"mix-blue-pink\")\n#p &lt;- mcmc_trace(posterior1,  pars = c(\"mu\", \"tau\"), n_warmup = 300,\n#                facet_args = list(nrow = 2, labeller = label_parsed))\n#p + facet_text(size = 15)\n\n\nResults as graph\n\nCode# Gráficos de predicción y de coeficientes\n\n# Otra gran ventaja de CamtrapR es que permite gráficar de manera muy sencilla la predicción posterior del modelo. Veamos que pasa con la ocupación de cada especie\n\nplot_effects(comu_model,\n              fit.commu,\n              submodel = \"det\",\n             combine = T)\n\n$effort\n\n\n\n\n\n\n\nCode# $effort\n\n\nplot_coef(comu_model,\n           fit.commu,\n           submodel = \"state\",\n           combine = T)\n\n'combine' and 'ordered' can't both be TRUE. Setting 'ordered = FALSE'\n\n\n\n\n\n\n\nCode# $occupancy\n\n\n\nplot_effects(comu_model, # El modelo\n             fit.commu, # El objeto ajustado\n             submodel = \"state\",\n             response = \"occupancy\") # el parámetro de interés\n\n$border_dist\n\n\n\n\n\n\n\n\n\n$elev\n\n\n\n\n\n\n\n\n\n$in_AP\n\n\n\n\n\n\n\nCode#&gt; $rough\n#&gt; \n\n\nHere we should see all Rhat values are less than 1.1 and the ESS values indicating adequate mixing of the MCMC chains."
  },
  {
    "objectID": "posts/3rd_model_1AP/index.html#package-citation",
    "href": "posts/3rd_model_1AP/index.html#package-citation",
    "title": "Fitting a Multi-Species non Spatial Occupancy Model",
    "section": "Package Citation",
    "text": "Package Citation\n\nCodepkgs &lt;- cite_packages(output = \"paragraph\", pkgs=\"Session\", out.dir = \".\")\n# knitr::kable(pkgs)\npkgs\n\nWe used R version 4.4.2 (R Core Team 2024) and the following R packages: bayesplot v. 1.11.1 (Gabry et al. 2019; Gabry and Mahr 2024), beepr v. 2.0 (Bååth 2024), camtrapR v. 2.3.0 (Niedballa et al. 2016), coda v. 0.19.4.1 (Plummer et al. 2006), DT v. 0.33 (Xie, Cheng, and Tan 2024), elevatr v. 0.99.0 (Hollister et al. 2023), maps v. 3.4.2.1 (Richard A. Becker, Ray Brownrigg. Enhancements by Thomas P Minka, and Deckmyn. 2024), mapview v. 2.11.2 (Appelhans et al. 2023), rjags v. 4.17 (Plummer 2025), sf v. 1.0.19 (Pebesma 2018; Pebesma and Bivand 2023), snow v. 0.4.4 (Tierney et al. 2021), snowfall v. 1.84.6.3 (Knaus 2023), terra v. 1.8.21 (Hijmans 2025), tictoc v. 1.2.1 (Izrailev 2024), tidyverse v. 2.0.0 (Wickham et al. 2019), tmap v. 4.0 (Tennekes 2018)."
  },
  {
    "objectID": "posts/3rd_model_1AP/index.html#sesion-info",
    "href": "posts/3rd_model_1AP/index.html#sesion-info",
    "title": "Fitting a Multi-Species non Spatial Occupancy Model",
    "section": "Sesion info",
    "text": "Sesion info\n\n\n\n\n\n\nNote\n\n\n\n\n\n\nCodeprint(sessionInfo(), locale = FALSE)\n\nR version 4.4.2 (2024-10-31 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 10 x64 (build 19045)\n\nMatrix products: internal\n\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] lubridate_1.9.4   forcats_1.0.0     stringr_1.5.1     dplyr_1.1.4      \n [5] purrr_1.0.2       readr_2.1.5       tidyr_1.3.1       tibble_3.2.1     \n [9] ggplot2_3.5.1     tidyverse_2.0.0   camtrapR_2.3.0    snowfall_1.84-6.3\n[13] snow_0.4-4        beepr_2.0         tictoc_1.2.1      bayesplot_1.11.1 \n[17] rjags_4-17        coda_0.19-4.1     elevatr_0.99.0    terra_1.8-21     \n[21] tmap_4.0          maps_3.4.2.1      mapview_2.11.2    sf_1.0-19        \n[25] DT_0.33           readxl_1.4.3      grateful_0.2.10  \n\nloaded via a namespace (and not attached):\n  [1] RColorBrewer_1.1-3      rstudioapi_0.17.1       audio_0.1-11           \n  [4] jsonlite_1.8.9          wk_0.9.4                magrittr_2.0.3         \n  [7] farver_2.1.2            rmarkdown_2.29          vctrs_0.6.5            \n [10] base64enc_0.1-3         RcppNumerical_0.6-0     htmltools_0.5.8.1      \n [13] leafsync_0.1.0          progress_1.2.3          curl_6.0.0             \n [16] raster_3.6-30           cellranger_1.1.0        s2_1.1.7               \n [19] sass_0.4.9              slippymath_0.3.1        KernSmooth_2.23-24     \n [22] bslib_0.8.0             htmlwidgets_1.6.4       plyr_1.8.9             \n [25] cachem_1.1.0            stars_0.6-8             uuid_1.2-1             \n [28] lifecycle_1.0.4         pkgconfig_2.0.3         cols4all_0.8           \n [31] Matrix_1.7-1            R6_2.6.1                fastmap_1.2.0          \n [34] digest_0.6.37           colorspace_2.1-1        leafem_0.2.3           \n [37] crosstalk_1.2.1         labeling_0.4.3          lwgeom_0.2-14          \n [40] progressr_0.15.0        spacesXYZ_1.3-0         timechange_0.3.0       \n [43] httr_1.4.7              abind_1.4-8             mgcv_1.9-1             \n [46] compiler_4.4.2          microbenchmark_1.5.0    proxy_0.4-27           \n [49] withr_3.0.2             brew_1.0-10             DBI_1.2.3              \n [52] MASS_7.3-61             tmaptools_3.2           leaflet_2.2.2          \n [55] classInt_0.4-10         tools_4.4.2             units_0.8-5            \n [58] leaflegend_1.2.1        glue_1.8.0              satellite_1.0.5        \n [61] nlme_3.1-166            grid_4.4.2              reshape2_1.4.4         \n [64] generics_0.1.3          gtable_0.3.6            leaflet.providers_2.0.0\n [67] tzdb_0.4.0              class_7.3-22            data.table_1.16.4      \n [70] hms_1.1.3               sp_2.1-4                pillar_1.10.1          \n [73] splines_4.4.2           lattice_0.22-6          tidyselect_1.2.1       \n [76] knitr_1.49              svglite_2.1.3           stats4_4.4.2           \n [79] xfun_0.49               leafpop_0.1.0           stringi_1.8.4          \n [82] rematch_2.0.0           yaml_2.3.10             evaluate_1.0.1         \n [85] codetools_0.2-20        cli_3.6.3               RcppParallel_5.1.9     \n [88] systemfonts_1.1.0       munsell_0.5.1           jquerylib_0.1.4        \n [91] secr_5.1.0              dichromat_2.0-0.1       Rcpp_1.0.13-1          \n [94] png_0.1-8               XML_3.99-0.17           parallel_4.4.2         \n [97] prettyunits_1.2.0       viridisLite_0.4.2       mvtnorm_1.3-2          \n[100] scales_1.3.0            e1071_1.7-16            crayon_1.5.3           \n[103] rlang_1.1.4"
  }
]